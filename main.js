!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var r=function(){function t(e,r,n,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._cardSelector=r,this._handleDeleteClick=o,this._handleLikeIcon=i,this._handleImageClick=n}var r,n;return r=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}},{key:"_setEventListeners",value:function(){var t=this;this._cardElement.querySelector("card__button-remove").addEventListener("click",(function(){t._handleDeleteClick()})),console.log(this._cardElement.querySelector(".card__button-remove")),this._cardElement.querySelector("card__like-button").addEventListener("click",(function(){t._handleLikeIcon()})),this._cardElement.querySelector(".card__image").addEventListener("click",(function(){t._handleImageClick({name:t._name,link:t._link})}))}},{key:"_handleLike",value:function(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}},{key:"_handleDelete",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"getView",value:function(){var t={link:this._link,name:this._name};this._cardElement=this._getTemplate();var e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._cardElement.querySelector(".card__label-title").textContent=t.name,this._setEventListeners(),this._cardElement}}])&&e(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var a=function(){function t(e,r){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=r.inputSelector,this._submitButtonSelector=r.submitButtonSelector,this._inactiveButtonClass=r.inactiveButtonClass,this._inputErrorClass=r.inputErrorClass,this._errorClass=r.errorClass,this._formEl=e,this._inputEls=function(t){if(Array.isArray(t))return o(t)}(n=this._formEl.querySelectorAll("modal__input"))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,e){if(t){if("string"==typeof t)return o(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(t,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._submitButtons=this._formEl.querySelector(this._submitButtonSelector)}var e,r;return e=t,(r=[{key:"_checkInputValidity",value:function(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}},{key:"_showInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}},{key:"_hasInvalidInput",value:function(t){return!t.every((function(t){return t.validity.valid}))}},{key:"toggleButtonState",value:function(){if(this._hasInvalidInput(this._inputEls))return this._submitButtons.classList.add(this._inactiveButtonClass),void(this._submitButtons.disabled=!0);this._submitButtons.classList.remove(this._inactiveButtonClass),this._submitButtons.disabled=!1}},{key:"_setEventListeners",value:function(){var t=this;this._inputEls.forEach((function(e){e.addEventListener("input",(function(r){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&i(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),u=a;function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==c(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===c(o)?o:String(o)),n)}var o}var s=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"renderItems",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&l(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,y(n.key),n)}}function y(t){var e=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===f(e)?e:String(e)}var d=function(){function t(e){var r,n,o,i=this,a=e.popupSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,o=function(t){"Escape"===t.key&&i.close()},(n=y(n="_handleEscClose"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._popupElement=document.querySelector(a)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._popupElement.addEventListener("click",(function(e){(e.target===t._popupElement||e.target.classList.contains("modal__close"))&&t.close()}))}}])&&p(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function v(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===m(o)?o:String(o)),n)}var o}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},h.apply(this,arguments)}function b(t,e){return b=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},b(t,e)}function _(t){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},_(t)}var S=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&b(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=_(n);if(o){var r=_(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===m(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,{popupSelector:t}))._popupImage=e._popupElement.querySelector(".modal__image"),e._popupTitle=e._popupElement.querySelector(".modal__preview-title"),e}return e=a,(r=[{key:"open",value:function(t,e){this._popupImage.src=t,this._popupImage.alt=e,this._popupTitle.textContent=e,h(_(a.prototype),"open",this).call(this)}}])&&v(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(d);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function w(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function E(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=O(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},k.apply(this,arguments)}function j(t,e){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},j(t,e)}function O(t){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},O(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&j(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=O(n);if(o){var r=O(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var r,n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,{popupSelector:t}))._handleFormSubmit=e,r._popupForm=r._popupElement.querySelector(".modal__form"),r._inputEls=function(t){if(Array.isArray(t))return w(t)}(n=r._popupForm.querySelectorAll(".modal__input"))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,e){if(t){if("string"==typeof t)return w(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?w(t,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r}return e=a,(r=[{key:"close",value:function(){this._popupForm.reset(),k(O(a.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var t={};return inputs.forEach((function(e){return t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var t=this;this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues())})),k(O(a.prototype),"setEventListeners",this).call(this)}},{key:"getForm",value:function(){return this._popupForm}}])&&E(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(d);function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function L(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==C(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==C(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===C(o)?o:String(o)),n)}var o}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=B(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},I.apply(this,arguments)}function T(t,e){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},T(t,e)}function B(t){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},B(t)}var q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&T(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=B(n);if(o){var r=B(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===C(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,{popupSelector:t}))._formEl=e._popupElement.querySelector(".modal__form"),e}return e=a,(r=[{key:"setEventListeners",value:function(){var t=this;this._formEl.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit()})),I(B(a.prototype),"setEventListeners",this).call(this)}},{key:"setSubmitAction",value:function(t){this._handleFormSubmit=t}}])&&L(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(d);function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function A(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==R(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===R(o)?o:String(o)),n)}var o}var U=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._titleEl=document.querySelector(e),this._descriptionEl=document.querySelector(r),this._avatarEl=document.querySelector(n)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{title:this._titleEl.textContent,description:this._descriptionEl.textContent}}},{key:"setUserInfo",value:function(t,e){this._titleEl.textContent=t,this._descriptionEl.textContent=e}},{key:"setAvatar",value:function(t){this._avatarEl.src=t}}])&&A(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function D(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==x(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===x(o)?o:String(o)),n)}var o}var N=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl="https://around-api.en.tripleten-services.com/v1",this._headers={authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-type":"application/json"}}var e,r;return e=t,(r=[{key:"_getResponse",value:function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"getEditProfile",value:function(t,e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:e})}).then(this._checkResponse)}},{key:"getNewCard",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:e})})}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"changeAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatarUrl:t})}).then(this._checkResponse)}},{key:"updateLike",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:e?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"updateAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}}])&&D(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),M={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},V={profileEditButton:document.querySelector("#profile-edit-button"),profileEditModal:document.querySelector("#profile-edit-modal"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),profileImage:document.querySelector(".profile__image"),addNewModalCard:document.querySelector("#add-card-modal"),cardListEl:document.querySelector(".cards__list"),addNewCardButton:document.querySelector(".profile__plus-button"),deleteModal:document.querySelector("#delete-modal"),avatarInput:document.querySelector("#avatar-url-input"),avatarModal:document.querySelector("#avatar-modal"),avatarModalButton:document.querySelector("#avatar-modal-button")},F=new N({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-Type":"application/json"}}),z=new U(".profile__title",".profile__description",".profile__image");F.getInitialCards().then((function(t){(Y=new s({items:t,renderer:function(t){G(t)}},"cards__list")).renderItems(),console.log(t)})).catch(console.error);var J=new u(V.addNewModalCard,M);J.enableValidation();var H=new u(V.profileEditModal.querySelector(".modal__form"),M),Y=new s({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"Yosemite Valley"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"Lake Louise"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg ",alt:"Vanoise National Park"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg  ",alt:"Lago di Braies"}],renderer:function(t){var e=G(t);Y.addItem(e)}},".cards__list"),$=new P("#avatar-modal",(function(t){setButtonText(V.avatarModalButton,"Saving..."),F.updateAvatar(t.link).then((function(t){z.setAvatar(t.avatar),console.log(t),$.close()})).catch(console.error).finally((function(){setButtonText(V.avatarModalButton,"Save")}))}));function G(t){var e=new r(t,"#card-template",Z,tt,et);Y.addItem(e.getView())}$.setEventListeners(),Y.renderItems(),G(cardData),V.profileImage.addEventListener("click",(function(){$.open()})),V.addNewCardButton.addEventListener("click",(function(){W.open()})),V.profileEditButton.addEventListener("click",(function(){var t=z.getUserInfo();profileTitleInput.value=t.title,profileDescriptionInput.value=t.description,X.open()}));var K=new S("#modal-preview");K.setEventListeners();var Q=new q("#delete-modal");Q.setEventListeners();var W=new P("#add-card-modal",(function(t){setButtonText(V.addNewCardButton,"Saving..."),F.addNewCard(t).then((function(t){G(t),V.addNewModalCard.reset(),J.toggleButtonState(),W.close()})).catch(console.error).finally((function(){setButtonText(V.addNewCardButton,"Save")}))}));W.setEventListeners();var X=new P("#profile-edit-modal",(function(t){z.setUserInfo(t.title,t.description),X.close()}));function Z(t){K.open(t)}function tt(t){Q.open(),Q.setSubmitAction((function(){F.deleteCard(t._id).then((function(){Q.close(),t.handleDelete()})).catch(console.error)}))}function et(t){F.updateLike(t._id,t.isLiked()).then((function(){t.handleLike(),console.log(t)})).catch(console.error)}X.setEventListeners(),cardSection.renderItems(),H.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RyxHQUFrQjRLLEdBRXpCckIsRUFBWXlCLE9BRVp6QixFQUFZa0MsaUJBQWdCLFdBQzFCOUIsRUFDRytCLFdBQVdkLEVBQUtlLEtBQ2hCdkQsTUFBSyxXQUNKbUIsRUFBWXBFLFFBQ1p5RixFQUFLZ0IsY0FDUCxJQUNDMUIsTUFBTTVJLFFBQVE2SSxNQUNuQixHQUNGLENBRUEsU0FBU1UsR0FBZ0JELEdBQ3ZCakIsRUFDR2tDLFdBQVdqQixFQUFLZSxJQUFLZixFQUFLL0IsV0FDMUJULE1BQUssV0FDSndDLEVBQUtrQixhQUNMeEssUUFBUUMsSUFBSXFKLEVBQ2QsSUFDQ1YsTUFBTTVJLFFBQVE2SSxNQUNuQixDQS9CQWlCLEVBQXFCTCxvQkFzRXJCZ0IsWUFBWTlCLGNBR1pLLEVBQWtCRCxrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRGVsZXRlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICBjYXJkRGF0YSwgXHJcbiAgICAgIGNhcmRTZWxlY3RvciwgXHJcbiAgICAgIGhhbmRsZUltYWdlQ2xpY2ssIFxyXG4gICAgICBoYW5kbGVEZWxldGVDbGljaywgXHJcbiAgICAgIGhhbmRsZUxpa2VJY29uXHJcbiAgICAgICkgXHJcbiAgICAgIFxyXG4gICAgICB7XHJcbiAgICAgIHRoaXMuX25hbWUgPSBjYXJkRGF0YS5uYW1lO1xyXG4gICAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcclxuICAgICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xyXG4gICAgICB0aGlzLl9oYW5kbGVMaWtlSWNvbiA9IGhhbmRsZUxpa2VJY29uO1xyXG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXHJcbiAgICAgICAgLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQuY2xvbmVOb2RlKHRydWUpO1xyXG4gIFxyXG4gICAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiY2FyZF9fYnV0dG9uLXJlbW92ZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljaygpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGNvbnNvbGUubG9nKHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fYnV0dG9uLXJlbW92ZVwiKSk7XHJcblxyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcImNhcmRfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUxpa2VJY29uKCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh7IG5hbWU6IHRoaXMuX25hbWUsIGxpbms6IHRoaXMuX2xpbmsgfSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIH1cclxuICAgIFxyXG4gICAgX2hhbmRsZUxpa2UoKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIilcclxuICAgICAgICAuY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICAgIH1cclxuICBcclxuICAgIF9oYW5kbGVEZWxldGUoKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBnZXRWaWV3KCkge1xyXG4gICAgICBjb25zdCBjYXJkRGF0YSA9IHsgbGluazogdGhpcy5fbGluaywgbmFtZTogdGhpcy5fbmFtZSB9O1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICAgIGNvbnN0IGNhcmRJbWFnZUVMID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgICAgY2FyZEltYWdlRUwuc3JjID0gdGhpcy5fbGluaztcclxuICAgICAgY2FyZEltYWdlRUwuYWx0ID0gdGhpcy5fbmFtZTtcclxuICAgICAgY29uc3QgY2FyZFRpdGxlRUwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xhYmVsLXRpdGxlXCIpO1xyXG4gICAgICBjYXJkVGl0bGVFTC50ZXh0Q29udGVudCA9IGNhcmREYXRhLm5hbWU7XHJcbiAgXHJcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgXHJcbiAgICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICAgIH1cclxuICB9IiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgICBjb25zdHJ1Y3RvciggZm9ybVNlbGVjdG9yLCB2YWxpZGF0aW9uU2V0dGluZ3MgKSB7XHJcbiAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSB2YWxpZGF0aW9uU2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gdmFsaWRhdGlvblNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgICAgdGhpcy5fZXJyb3JDbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgICB0aGlzLl9mb3JtRWwgPSBmb3JtU2VsZWN0b3I7XHJcbiAgICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yQWxsKFwibW9kYWxfX2lucHV0XCIpXTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucyA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIH1cclxuICBcclxuICAgIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgICBpZiAoIWlucHV0RWwudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXQpIHtcclxuICAgICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XHJcbiAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuICBcclxuICAgIF9oaWRlSW5wdXRFcnJvcihpbnB1dCkge1xyXG4gICAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkge1xyXG4gICAgICByZXR1cm4gIWlucHV0TGlzdC5ldmVyeSgoaW5wdXRFbCkgPT4gaW5wdXRFbC52YWxpZGl0eS52YWxpZCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCh0aGlzLl9pbnB1dEVscykpIHtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b25zLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucy5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbnMuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucy5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIFxyXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XHJcbiAgICAgICAgaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGUpID0+IHtcclxuICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKTtcclxuICAgICAgICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgICB0aGlzLl9mb3JtRWwuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7XHJcblxyXG4iLCJjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb247IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pICB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgfSBcclxuICAgIFxyXG4gICAgb3BlbigpIHtcclxuICAgICAgICAvL29wZW4gcG9wdXBzXHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIC8vY2xvc2UgcG9wdXBzXHJcbiAgICAgICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgX2hhbmRsZUVzY0Nsb3NlID0gKGUpID0+IHtcclxuICAgICAgICAvL2xpc3RlbnMgZm9yIGVzYyBidXR0b25cclxuICAgICAgICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICB9ICAgICAgXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgICAgIC8vc2V0cyBsaXN0ZW5lcnNcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgICAgICAgaWYoXHJcbiAgICAgICAgICAgICAgICBldnQudGFyZ2V0ID09PSB0aGlzLl9wb3B1cEVsZW1lbnQgfHwgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fY2xvc2VcIilcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbn1cclxuXHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBUaXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19wcmV2aWV3LXRpdGxlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIG9wZW4oIGxpbmssIG5hbWUgKXtcclxuICAgICAgICB0aGlzLl9wb3B1cEltYWdlLnNyYyA9IGxpbms7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwVGl0bGUudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yIChwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICAgICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpXHJcbiAgICAgICAgdGhpcy5faW5wdXRFbHMgPSBbLi4udGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpXTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcclxuICAgICAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgICAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHt9O1xyXG4gICAgICAgIGlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4gXHJcbiAgICAgICAgICAgIChpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlKSk7XHJcbiAgICAgICAgICAgIHJldHVybiBpbnB1dFZhbHVlcztcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRGb3JtKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BvcHVwRm9ybTtcclxuICAgIH1cclxuXHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhEZWxldGUgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5fZm9ybUVsID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2Zvcm1FbC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCgpO1xyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgc2V0U3VibWl0QWN0aW9uKGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgVXNlckluZm8ge1xyXG4gICAgY29uc3RydWN0b3IodGl0bGVTZWxlY3RvciwgZGVzY3JpcHRpb25TZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl90aXRsZUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aXRsZVNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbkVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkZXNjcmlwdGlvblNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9hdmF0YXJFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIGNvbnN0IHVzZXJJbmZvID0ge1xyXG4gICAgICAgICAgICB0aXRsZTogdGhpcy5fdGl0bGVFbC50ZXh0Q29udGVudCxcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHRoaXMuX2Rlc2NyaXB0aW9uRWwudGV4dENvbnRlbnQsXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gdXNlckluZm87XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VXNlckluZm8odGl0bGUsIGRlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5fdGl0bGVFbC50ZXh0Q29udGVudCA9IHRpdGxlO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uRWwudGV4dENvbnRlbnQgPSBkZXNjcmlwdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBzZXRBdmF0YXIoYXZhdGFyKSB7XHJcbiAgICAgICAgdGhpcy5fYXZhdGFyRWwuc3JjID0gYXZhdGFyO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlckluZm87IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuX2Jhc2VVcmwgPSBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCI7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0ge1xyXG4gICAgICBhdXRob3JpemF0aW9uOiBcImYwMGRiZTRkLTNiY2YtNDBlMy1hNDZmLTllMWVkODIwNmJkNVwiLFxyXG4gICAgICBcIkNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBfZ2V0UmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgLy8gMSBMT0FESU5HIFVTRVIgSU5GT1JNQVRJT04gSU5UTyBUSEUgU0VSVkVSXHJcbiAgLy8gR0VUIGh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL3VzZXJzL21lIFxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIC8vIDIgTE9BRElORyBDQVJEUyBGUk9NIFRIRSBTRVJWRVJcclxuICAvLyBHRVQgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMgXHJcbiAgLy8gaW5pdGlhbCByZXNwb25zZSB3aWxsIGJlIGFuIGVtcHR5IEpTT04gYXJyYXkgW11cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgLy8gMyAgRURJVElORyBUSEUgUFJPRklMRSBcclxuICAvLyAgUEFUQ0ggaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvdXNlcnMvbWUgXHJcbiAgLy8gQWRkIENvbnRlbnQtdHlwZSBhZnRlciB0aGUgYXV0aG9yaXphdGlvbiB0b2tlbiBcclxuICAvLyBib2R5OiBKU09OLnN0cmluZ2lmeSAoe05BTUUgYW5kIEFCT1VUfSkgXHJcbiAgZ2V0RWRpdFByb2ZpbGUobmFtZSwgYWJvdXQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lLCBcclxuICAgICAgICBhYm91dDogYWJvdXRcclxuICAgICAgfSlcclxuICAgICAgXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuICAvLyA0IEFERElORyBBIE5FVyBDQVJEXHJcbiAgLy8gUE9TVCBodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MS9jYXJkc1xyXG4gIC8vIGJvZHk6IEpTT04uc3RyaW5naWZ5ICh7TkFNRSBhbmQgTElOS30pXHJcbiAgZ2V0TmV3Q2FyZChuYW1lLCBsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5ICh7XHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBsaW5rOiBsaW5rXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxufVxyXG5cclxuLy8gNSAmIDYgQ1JFQVRJTkcgQSBORVcgUE9QVVAgRk9SIERFTEVUSU5HIEEgQ0FSRFxyXG4gIC8vIHNlbmQgREVMRVRFIHJlcXVlc3QgXHJcbiAgICAvLyBERUxFVEUgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMvY2FyZElkIFxyXG4gICAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuXHJcbiAgICBjaGFuZ2VBdmF0YXIoYXZhdGFyVXJsKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGF2YXRhclVybDogYXZhdGFyVXJsIH0pLFxyXG4gICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZUxpa2UoY2FyZElkLCBpc0xpa2VkKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XHJcbiAgICAgICAgbWV0aG9kOiBpc0xpa2VkID8gXCJERUxFVEVcIiA6IFwiUFVUXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuICBcclxuICAgIHVwZGF0ZUF2YXRhcihhdmF0YXIpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgIGF2YXRhcjogYXZhdGFyLFxyXG4gICAgICAgIH0pLFxyXG4gICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gIH1cclxuXHJcbiAgXHJcblxyXG5cclxuIiwiICBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICAgICAgYWx0OiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICAgIGFsdDogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgICAgIGFsdDogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gICAgICBhbHQ6IFwiTGF0ZW1hclwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnIFwiLFxyXG4gICAgICBhbHQ6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZyAgXCIsXHJcbiAgICAgIGFsdDogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgfSxcclxuICBdO1xyXG5cclxuICAgIGNvbnN0IHZhbGlkYXRpb25TZXR0aW5ncyA9IHtcclxuICAgIC8vIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvclwiXHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdmFyaWFibGVzID0ge1xyXG4gICAgICBwcm9maWxlRWRpdEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpLFxyXG4gICAgICBwcm9maWxlRWRpdE1vZGFsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiKSxcclxuICAgICAgcHJvZmlsZVRpdGxlSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS10aXRsZS1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZUltYWdlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2ltYWdlXCIpLFxyXG4gICAgICBhZGROZXdNb2RhbENhcmQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtbW9kYWxcIiksXHJcbiAgICAgIGNhcmRMaXN0RWw6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpc3RcIiksXHJcbiAgICAgIGFkZE5ld0NhcmRCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcGx1cy1idXR0b25cIiksXHJcbiAgICAgIGRlbGV0ZU1vZGFsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1tb2RhbFwiKSxcclxuICAgICAgYXZhdGFySW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLXVybC1pbnB1dFwiKSxcclxuICAgICAgYXZhdGFyTW9kYWw6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLW1vZGFsXCIpLFxyXG4gICAgICBhdmF0YXJNb2RhbEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWwtYnV0dG9uXCIpLFxyXG4gICAgXHJcbiAgICB9XHJcblxyXG5cclxuZXhwb3J0IHtpbml0aWFsQ2FyZHMsIHZhbGlkYXRpb25TZXR0aW5ncywgdmFyaWFibGVzfTsiLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRGVsZXRlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aERlbGV0ZS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcclxuaW1wb3J0IHtcclxuICBpbml0aWFsQ2FyZHMsIFxyXG4gIHZhbGlkYXRpb25TZXR0aW5ncywgXHJcbiAgdmFyaWFibGVzfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcblxyXG5cclxuXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcImYwMGRiZTRkLTNiY2YtNDBlMy1hNDZmLTllMWVkODIwNmJkNVwiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcclxuICB9XHJcbn0pOyBcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFxyXG4gIFwiLnByb2ZpbGVfX3RpdGxlXCIsXHJcbiAgXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIixcclxuICBcIi5wcm9maWxlX19pbWFnZVwiXHJcbik7XHJcblxyXG5hcGlcclxuICAuZ2V0SW5pdGlhbENhcmRzKClcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAgICAgIHtcclxuICAgICAgICBpdGVtczogcmVzLFxyXG4gICAgICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcclxuICAgICAgICAgIGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIFwiY2FyZHNfX2xpc3RcIlxyXG4gICAgKTtcclxuICAgIHNlY3Rpb24ucmVuZGVySXRlbXMoKTtcclxuICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgfSlcclxuICAuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcblxyXG4vLyBhcGlcclxuLy8gICAuZ2V0VXNlckluZm8oKVxyXG4vLyAgIC50aGVuKChyZXMpID0+IHtcclxuLy8gICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbi8vICAgICB1c2VySW5mby5zZXRVc2VySW5mbyhyZXMubmFtZSwgcmVzLmFib3V0KTtcclxuLy8gICAgIHVzZXJJbmZvLnNldEF2YXRhcihyZXMuYXZhdGFyKTtcclxuLy8gICB9KVxyXG4vLyAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuXHJcbmNvbnN0IGNhcmRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFyaWFibGVzLmFkZE5ld01vZGFsQ2FyZCwgdmFsaWRhdGlvblNldHRpbmdzKTtcclxuY2FyZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgcHJvZmlsZUVkaXRGb3JtID0gdmFyaWFibGVzLnByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICBwcm9maWxlRWRpdEZvcm0sXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzXHJcbik7XHJcblxyXG5sZXQgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gIHtcclxuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXHJcbiAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmRMaXN0RWwgPSBjcmVhdGVDYXJkKGNhcmREYXRhKTtcclxuICAgICAgc2VjdGlvbi5hZGRJdGVtKGNhcmRMaXN0RWwpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIFwiLmNhcmRzX19saXN0XCJcclxuKTtcclxuXHJcbi8vIGNvbnN0IHByb2ZpbGVFZGl0Rm9ybVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbi8vICAgXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIsXHJcbi8vICAgaGFuZGxlUHJvZmlsZUVkaXRGb3JtU3VibWl0XHJcbi8vICk7XHJcblxyXG5jb25zdCBhdmF0YXJNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI2F2YXRhci1tb2RhbFwiLFxyXG4gIGhhbmRsZUF2YXRhckZvcm1TdWJtaXRcclxuKTtcclxuYXZhdGFyTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vIGZ1bmN0aW9uIG9wZW5BdmF0YXJGb3JtKCkge1xyXG4vLyAgIGF2YXRhck1vZGFsLm9wZW4oKTtcclxuLy8gfVxyXG5cclxuLy8gdmFyaWFibGVzLnByb2ZpbGVJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4vLyAgIG9wZW5BdmF0YXJGb3JtKCk7XHJcbi8vIH0pO1xyXG5cclxuLy8gY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjbW9kYWwtcHJldmlld1wiKTtcclxuLy8gcG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vIGNvbnN0IGFkZENhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4vLyAgIFwiI2FkZC1jYXJkLW1vZGFsXCIsXHJcbi8vICAgaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXRcclxuLy8gKTtcclxuXHJcbi8vIGNvbnN0IGRlbGV0ZU1vZGFsID0gbmV3IFBvcHVwV2l0aERlbGV0ZShcIiNkZWxldGUtbW9kYWxcIik7XHJcbi8vIGRlbGV0ZU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vLyBmdW5jdGlvbiBzZXRCdXR0b25UZXh0KGJ1dHRvbiwgdGV4dCkge1xyXG4vLyAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IHRleHQ7XHJcbi8vIH1cclxuXHJcbi8vIGZ1bmN0aW9uIGhhbmRsZUltYWdlQ2xpY2soY2FyZERhdGEpIHtcclxuLy8gICBwb3B1cFdpdGhJbWFnZS5vcGVuKGNhcmREYXRhKTtcclxuLy8gfVxyXG5cclxuLy8gZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xyXG4vLyAgIC8vIG9wZW4gdGhlIG1vZGFsXHJcbi8vICAgZGVsZXRlTW9kYWwub3BlbigpO1xyXG4vLyAgIC8vIHNldCB0aGUgc3VibWl0IGFjdGlvblxyXG4vLyAgIGRlbGV0ZU1vZGFsLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbi8vICAgICBhcGlcclxuLy8gICAgICAgLmRlbGV0ZUNhcmQoY2FyZC5faWQpXHJcbi8vICAgICAgIC50aGVuKCgpID0+IHtcclxuLy8gICAgICAgICBkZWxldGVNb2RhbC5jbG9zZSgpO1xyXG4vLyAgICAgICAgIGNhcmQuaGFuZGxlRGVsZXRlKCk7XHJcbi8vICAgICAgIH0pXHJcbi8vICAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuLy8gICB9KTtcclxuLy8gfVxyXG5cclxuLy8gZnVuY3Rpb24gaGFuZGxlTGlrZUNsaWNrKGNhcmQpIHtcclxuLy8gICBhcGlcclxuLy8gICAgIC51cGRhdGVMaWtlKGNhcmQuX2lkLCBjYXJkLmlzTGlrZWQoKSlcclxuLy8gICAgIC50aGVuKCgpID0+IHtcclxuLy8gICAgICAgY2FyZC5oYW5kbGVMaWtlKCk7XHJcbi8vICAgICAgIGNvbnNvbGUubG9nKGNhcmQpO1xyXG4vLyAgICAgfSlcclxuLy8gICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuLy8gfVxyXG5cclxuLy8gZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUVkaXRGb3JtU3VibWl0KGZvcm1EYXRhKSB7XHJcbi8vICAgdXNlckluZm8uc2V0VXNlckluZm8oZm9ybURhdGEudGl0bGUsIGZvcm1EYXRhLmRlc2NyaXB0aW9uKTtcclxuLy8gICBwcm9maWxlRWRpdEZvcm1Qb3B1cC5jbG9zZSgpO1xyXG4vLyB9XHJcblxyXG4vLyBlZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG4vLyB2YXJpYWJsZXMucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuLy8gICBjb25zdCBwcm9maWxlVXNlckluZm8gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4vLyAgIHByb2ZpbGVUaXRsZUlucHV0LnZhbHVlID0gcHJvZmlsZVVzZXJJbmZvLnRpdGxlO1xyXG4vLyAgIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gcHJvZmlsZVVzZXJJbmZvLmRlc2NyaXB0aW9uO1xyXG4vLyAgIHByb2ZpbGVFZGl0Rm9ybVBvcHVwLm9wZW4oKTtcclxuLy8gfSk7XHJcblxyXG4vLyBhZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuLy8gcHJvZmlsZUVkaXRGb3JtUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vIHZhcmlhYmxlcy5hZGROZXdDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbi8vICAgY2FyZEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuLy8gICBhZGRDYXJkUG9wdXAub3BlbigpO1xyXG4vLyB9KTtcclxuXHJcbi8vIENyZWF0ZSBhIG5ldyBjYXJkXHJcblxyXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGNhcmREYXRhKSB7XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxyXG4gICAgY2FyZERhdGEsXHJcbiAgICBcIiNjYXJkLXRlbXBsYXRlXCIsXHJcbiAgICBoYW5kbGVJbWFnZUNsaWNrLFxyXG4gICAgaGFuZGxlRGVsZXRlQ2xpY2ssXHJcbiAgICBoYW5kbGVMaWtlQ2xpY2tcclxuICApO1xyXG4gIHNlY3Rpb24uYWRkSXRlbShjYXJkLmdldFZpZXcoKSk7XHJcbn1cclxuXHJcbnNlY3Rpb24ucmVuZGVySXRlbXMoKTtcclxuLy8gbGV0IHNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiY2FyZHNfX2xpc3RcIik7XHJcbmNyZWF0ZUNhcmQoY2FyZERhdGEpO1xyXG5cclxuLy8gT3BlbiB0aGUgYXZhdGFyIGZvcm1cclxuZnVuY3Rpb24gb3BlbkF2YXRhckZvcm0oKSB7XHJcbiAgYXZhdGFyTW9kYWwub3BlbigpO1xyXG59XHJcblxyXG4vLyBPcGVuIHRoZSBhZGQgY2FyZCBmb3JtXHJcbmZ1bmN0aW9uIG9wZW5BZGRDYXJkRm9ybSgpIHtcclxuICBhZGRDYXJkUG9wdXAub3BlbigpO1xyXG59XHJcblxyXG4vLyBPcGVuIHRoZSBwcm9maWxlIGVkaXQgZm9ybVxyXG5mdW5jdGlvbiBvcGVuUHJvZmlsZUVkaXRGb3JtKCkge1xyXG4gIGNvbnN0IHByb2ZpbGVVc2VySW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgcHJvZmlsZVRpdGxlSW5wdXQudmFsdWUgPSBwcm9maWxlVXNlckluZm8udGl0bGU7XHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBwcm9maWxlVXNlckluZm8uZGVzY3JpcHRpb247XHJcbiAgcHJvZmlsZUVkaXRGb3JtUG9wdXAub3BlbigpO1xyXG59XHJcblxyXG4vLyBFdmVudCBsaXN0ZW5lcnNcclxudmFyaWFibGVzLnByb2ZpbGVJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb3BlbkF2YXRhckZvcm0pO1xyXG52YXJpYWJsZXMuYWRkTmV3Q2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb3BlbkFkZENhcmRGb3JtKTtcclxudmFyaWFibGVzLnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvcGVuUHJvZmlsZUVkaXRGb3JtKTtcclxuXHJcbi8vIFBvcHVwIHdpdGggaW1hZ2VcclxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjbW9kYWwtcHJldmlld1wiKTtcclxucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vIFBvcHVwIHdpdGggZGVsZXRlXHJcbmNvbnN0IGRlbGV0ZU1vZGFsID0gbmV3IFBvcHVwV2l0aERlbGV0ZShcIiNkZWxldGUtbW9kYWxcIik7XHJcbmRlbGV0ZU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vLyBQb3B1cCB3aXRoIGZvcm1cclxuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjYWRkLWNhcmQtbW9kYWxcIixcclxuICBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdFxyXG4pO1xyXG5hZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIsXHJcbiAgaGFuZGxlUHJvZmlsZUVkaXRGb3JtU3VibWl0XHJcbik7XHJcbnByb2ZpbGVFZGl0Rm9ybVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vLyBGdW5jdGlvbnNcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUltYWdlQ2xpY2soY2FyZERhdGEpIHtcclxuICBwb3B1cFdpdGhJbWFnZS5vcGVuKGNhcmREYXRhKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xyXG4gIC8vIG9wZW4gdGhlIG1vZGFsXHJcbiAgZGVsZXRlTW9kYWwub3BlbigpO1xyXG4gIC8vIHNldCB0aGUgc3VibWl0IGFjdGlvblxyXG4gIGRlbGV0ZU1vZGFsLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZC5faWQpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICBkZWxldGVNb2RhbC5jbG9zZSgpO1xyXG4gICAgICAgIGNhcmQuaGFuZGxlRGVsZXRlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlTGlrZUNsaWNrKGNhcmQpIHtcclxuICBhcGlcclxuICAgIC51cGRhdGVMaWtlKGNhcmQuX2lkLCBjYXJkLmlzTGlrZWQoKSlcclxuICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgY2FyZC5oYW5kbGVMaWtlKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKGNhcmQpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQXZhdGFyRm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIHNldEJ1dHRvblRleHQodmFyaWFibGVzLmF2YXRhck1vZGFsQnV0dG9uLCBcIlNhdmluZy4uLlwiKTtcclxuICBhcGlcclxuICAgIC51cGRhdGVBdmF0YXIoaW5wdXRWYWx1ZXMubGluaylcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0QXZhdGFyKHJlcy5hdmF0YXIpO1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgICBhdmF0YXJNb2RhbC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBzZXRCdXR0b25UZXh0KHZhcmlhYmxlcy5hdmF0YXJNb2RhbEJ1dHRvbiwgXCJTYXZlXCIpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVFZGl0Rm9ybVN1Ym1pdChmb3JtRGF0YSkge1xyXG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGZvcm1EYXRhLnRpdGxlLCBmb3JtRGF0YS5kZXNjcmlwdGlvbik7XHJcbiAgcHJvZmlsZUVkaXRGb3JtUG9wdXAuY2xvc2UoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpIHtcclxuICBzZXRCdXR0b25UZXh0KHZhcmlhYmxlcy5hZGROZXdDYXJkQnV0dG9uLCBcIlNhdmluZy4uLlwiKTtcclxuICBhcGlcclxuICAgIC5hZGROZXdDYXJkKGlucHV0VmFsdWVzKVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBjcmVhdGVDYXJkKHJlcyk7XHJcbiAgICAgIHZhcmlhYmxlcy5hZGROZXdNb2RhbENhcmQucmVzZXQoKTtcclxuICAgICAgY2FyZEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgYWRkQ2FyZFBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHNldEJ1dHRvblRleHQodmFyaWFibGVzLmFkZE5ld0NhcmRCdXR0b24sIFwiU2F2ZVwiKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG4vLyBSZW5kZXIgdGhlIGNhcmQgc2VjdGlvblxyXG5jYXJkU2VjdGlvbi5yZW5kZXJJdGVtcygpO1xyXG5cclxuLy8gRW5hYmxlIHZhbGlkYXRpb24gZm9yIHRoZSBlZGl0IGZvcm1cclxuZWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpOyJdLCJuYW1lcyI6WyJDYXJkIiwiY2FyZERhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJoYW5kbGVMaWtlSWNvbiIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiX2hhbmRsZUxpa2VJY29uIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJrZXkiLCJ2YWx1ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImNsb25lTm9kZSIsIl90aGlzIiwiX2NhcmRFbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnNvbGUiLCJsb2ciLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJyZW1vdmUiLCJfZ2V0VGVtcGxhdGUiLCJjYXJkSW1hZ2VFTCIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiRm9ybVZhbGlkYXRvciIsImZvcm1TZWxlY3RvciIsInZhbGlkYXRpb25TZXR0aW5ncyIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9mb3JtRWwiLCJfaW5wdXRFbHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX3N1Ym1pdEJ1dHRvbnMiLCJpbnB1dEVsIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9zaG93SW5wdXRFcnJvciIsIl9oaWRlSW5wdXRFcnJvciIsImlucHV0IiwiZXJyb3JNZXNzYWdlRWwiLCJjb25jYXQiLCJpZCIsImFkZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiaW5wdXRMaXN0IiwiZXZlcnkiLCJfaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZWQiLCJmb3JFYWNoIiwiZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsInByZXZlbnREZWZhdWx0IiwiU2VjdGlvbiIsIl9yZWYiLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiY2xvc2UiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY0Nsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl90aGlzMiIsImV2dCIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoSW1hZ2UiLCJfUG9wdXAiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJjYWxsIiwiX3BvcHVwSW1hZ2UiLCJfcG9wdXBUaXRsZSIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX3BvcHVwRm9ybSIsInJlc2V0IiwiaW5wdXRWYWx1ZXMiLCJpbnB1dHMiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJQb3B1cFdpdGhEZWxldGUiLCJVc2VySW5mbyIsInRpdGxlU2VsZWN0b3IiLCJkZXNjcmlwdGlvblNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfdGl0bGVFbCIsIl9kZXNjcmlwdGlvbkVsIiwiX2F2YXRhckVsIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImF2YXRhciIsIkFwaSIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImZldGNoIiwiaGVhZGVycyIsInRoZW4iLCJfY2hlY2tSZXNwb25zZSIsImFib3V0IiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXJkSWQiLCJhdmF0YXJVcmwiLCJpc0xpa2VkIiwidmFyaWFibGVzIiwicHJvZmlsZUVkaXRCdXR0b24iLCJwcm9maWxlRWRpdE1vZGFsIiwicHJvZmlsZVRpdGxlSW5wdXQiLCJwcm9maWxlRGVzY3JpcHRpb25JbnB1dCIsInByb2ZpbGVJbWFnZSIsImFkZE5ld01vZGFsQ2FyZCIsImNhcmRMaXN0RWwiLCJhZGROZXdDYXJkQnV0dG9uIiwiZGVsZXRlTW9kYWwiLCJhdmF0YXJJbnB1dCIsImF2YXRhck1vZGFsIiwiYXZhdGFyTW9kYWxCdXR0b24iLCJhcGkiLCJiYXNlVXJsIiwidXNlckluZm8iLCJnZXRJbml0aWFsQ2FyZHMiLCJzZWN0aW9uIiwiY3JlYXRlQ2FyZCIsInJlbmRlckl0ZW1zIiwiY2F0Y2giLCJlcnJvciIsImNhcmRGb3JtVmFsaWRhdG9yIiwiZW5hYmxlVmFsaWRhdGlvbiIsImVkaXRGb3JtVmFsaWRhdG9yIiwiYWRkSXRlbSIsInNldEJ1dHRvblRleHQiLCJ1cGRhdGVBdmF0YXIiLCJzZXRBdmF0YXIiLCJmaW5hbGx5IiwiY2FyZCIsImhhbmRsZUxpa2VDbGljayIsImdldFZpZXciLCJzZXRFdmVudExpc3RlbmVycyIsIm9wZW4iLCJhZGRDYXJkUG9wdXAiLCJwcm9maWxlVXNlckluZm8iLCJnZXRVc2VySW5mbyIsInByb2ZpbGVFZGl0Rm9ybVBvcHVwIiwicG9wdXBXaXRoSW1hZ2UiLCJhZGROZXdDYXJkIiwiZm9ybURhdGEiLCJzZXRVc2VySW5mbyIsInNldFN1Ym1pdEFjdGlvbiIsImRlbGV0ZUNhcmQiLCJfaWQiLCJoYW5kbGVEZWxldGUiLCJ1cGRhdGVMaWtlIiwiaGFuZGxlTGlrZSIsImNhcmRTZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==