!function(){"use strict";var e={};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function r(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}(function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})})(e);var n=function(){function e(t,r,n){var o=t.name,i=t.link;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=o,this._link=i,this._cardSelector=r,this._handleImageClick=n}var t,n;return t=e,(n=[{key:"_setEventListeners",value:function(){var e=this;this._cardElement.querySelector(".card__like-button").addEventListener("click",(function(){e._handleLikeIcon()})),this._cardElement.querySelector(".card__button-remove").addEventListener("click",(function(){e._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(function(){e._handleImageClick({name:e._name,link:e._link})}))}},{key:"_handleLikeIcon",value:function(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}},{key:"_handleDeleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"getView",value:function(){var e={link:this._link,name:this._name};this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);var t=this._cardElement.querySelector(".card__image");return t.src=this._link,t.alt=this._name,this._cardElement.querySelector(".card__label-title").textContent=e.name,this._setEventListeners(),this._cardElement}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==o(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===o(i)?i:String(i)),n)}var i}var u=function(){function e(t,r){var n;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formEl=r,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputEls=function(e){if(Array.isArray(e))return i(e)}(n=this._formEl.querySelectorAll("modal__input"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(n)||function(e,t){if(e){if("string"==typeof e)return i(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var t,r;return t=e,(r=[{key:"_checkInputValidity",value:function(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}},{key:"_showInputError",value:function(e){var t=this._formEl.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formEl.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_setEventListeners",value:function(){var e=this;this._inputEls.forEach((function(t){t.addEventListener("input",(function(r){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"_hasInvalidInput",value:function(e){return!e.every((function(e){return e.validity.valid}))}},{key:"toggleButtonState",value:function(){if(this._hasInvalidInput(this._inputEls))return this._submitButtons.classList.add(this._inactiveButtonClass),void(this._submitButtons.disabled=!0);this._submitButtons.classList.remove(this._inactiveButtonClass),this._submitButtons.disabled=!1}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&a(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==l(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==l(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===l(o)?o:String(o)),n)}var o}var s=function(){function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&c(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,d(n.key),n)}}function d(e){var t=function(e,t){if("object"!==f(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===f(t)?t:String(t)}var y=function(){function e(t){var r,n,o,i=this,a=t.popupSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=this,o=function(e){"Escape"===e.key&&i.close()},(n=d(n="_handleEscClose"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._popupElement=document.querySelector(a)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){(t.target===e._popupElement||t.target.classList.contains("modal__close"))&&e.close()}))}}])&&p(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==m(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===m(o)?o:String(o)),n)}var o}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},h.apply(this,arguments)}function b(e,t){return b=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},b(e,t)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&b(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(n);if(o){var r=_(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,{popupSelector:e}))._popupImage=t._popupElement.querySelector(".modal__image"),t._popupTitle=t._popupElement.querySelector(".modal__preview-title"),t}return t=a,(r=[{key:"open",value:function(e,t){this._popupImage.src=e,this._popupImage.alt=t,this._popupTitle.textContent=t,h(_(a.prototype),"open",this).call(this)}}])&&v(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(y);function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function w(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==g(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},E.apply(this,arguments)}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function j(e){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},j(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(n);if(o){var r=j(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,{popupSelector:e}))._handleFormSubmit=t,r._popupForm=r._popupElement.querySelector(".modal__form"),r}return t=a,(r=[{key:"close",value:function(){this._popupForm.reset(),E(j(a.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((function(e){return t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var e=this;this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())})),E(j(a.prototype),"setEventListeners",this).call(this)}},{key:"getForm",value:function(){return this._popupForm}}])&&w(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(y);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function C(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===O(o)?o:String(o)),n)}var o}var L=function(){function e(t,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._titleEl=document.querySelector(t),this._descriptionEl=document.querySelector(r),this._avatarEl=document.querySelector(n)}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{title:this._titleEl.textContent,description:this._descriptionEl.textContent}}},{key:"setUserInfo",value:function(e,t){this._titleEl.textContent=e,this._descriptionEl.textContent=t}},{key:"setAvatar",value:function(e){this._avatarEl.src=e}}])&&C(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===I(o)?o:String(o)),n)}var o}var q=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl="https://around-api.en.tripleten-services.com/v1",this._headers={authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-type":"application/json"}}var t,r;return t=e,(r=[{key:"_getResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"getEditProfile",value:function(e,t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}},{key:"getNewCard",value:function(e,t){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})})}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatarUrl:e})}).then(this._checkResponse)}},{key:"updateLike",value:function(e,t){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:t?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"updateAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}])&&T(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),B={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},R={profileEditButton:document.querySelector("#profile-edit-button"),profileEditModal:document.querySelector("#profile-edit-modal"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),profileImage:document.querySelector(".profile__image"),addNewModalCard:document.querySelector("#add-card-form"),cardListEl:document.querySelector(".cards__list"),addNewCardButton:document.querySelector(".profile__plus-button"),deleteModal:document.querySelector("#delete-modal"),avatarInput:document.querySelector("#avatar-url-input"),avatarModal:document.querySelector("#avatar-modal"),avatarModalButton:document.querySelector("#avatar-modal-button")},U=new q({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-Type":"application/json"}}),M=new u(R.addNewModalCard,B);M.enableValidation(),new u(R.avatarModal,B).enableValidation();var A=new u(R.profileEditModal.querySelector(".modal__form"),B),N=new L(".profile__title",".profile__description"),V=new s({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"Yosemite Valley"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"Lake Louise"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg ",alt:"Vanoise National Park"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg  ",alt:"Lago di Braies"}],renderer:function(e){var t=H(e);V.addItem(t)}},".cards__list"),x=new P(R.profileEditModal,(function(e){N.setUserInfo(e.title,e.description),x.close()})),D=new S("#modal-preview");D.setEventListeners();var z=new P(R.addNewModalCard,(function(t){J(R.addNewCardButton,"Saving..."),U.addNewCard(t).then((function(e){console.log(e),H(e),R.addNewModalCard.reset(),M.toggleButtonState(),z.close()})).catch(console.error).finally((function(){J(R.addNewCardButton,"Save")})),new e.default(R.deleteModal).setEventListeners()})),F=new P(R.avatarModal,(function(e){J(R.avatarModalButton,"Saving..."),U.updateAvatar(e.link).then((function(e){N.setAvatar(e.avatar),console.log(e),F.close()})).catch(console.error).finally((function(){J(R.avatarModalButton,"Save")}))}));function J(e,t){e.textContent=t}function H(e){return new n(e,"#card-template",(function(){D.open(e.link,e.name)})).getView()}F.setEventListeners(),R.profileEditButton.addEventListener("click",(function(){F.open()})),V.renderItems(),A.enableValidation(),U.getUserInfo().then((function(e){N.getUserInfo(e.name,e.about)})),U.getInitialCards().then((function(e){e.forEach((function(e){var t=generateCard(e);V.addItem(t)}))})),U.getInitialCards().then((function(e){new s({items:e,renderer:function(e){H(e)}},"gallery__cards").renderItems(),console.log(e)})).catch(console.error),U.getUserInfo().then((function(e){console.log(e),N.setUserInfo(e.name,e.about),N.setAvatar(e.avatar)})).catch(console.error),profileEditButton.addEventListener("click",(function(){var e=N.getUserInfo();profileTitleInput.value=e.title,profileDescriptionInput.value=e.description,x.open()})),z.setEventListeners(),x.setEventListeners(),document.querySelector(".profile__plus-button").addEventListener("click",(function(){M.toggleButtonState(),z.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ekIsRUFBa0JELG1CQUVsQkgsRUFBSThCLGNBQWNyRCxNQUFLLFNBQUN0QixHQUN0QmtELEVBQVN5QixZQUFZM0UsRUFBU3hHLEtBQU13RyxFQUFTd0IsTUFDL0MsSUFFQXFCLEVBQUkrQixrQkFBa0J0RCxNQUFLLFNBQUN1RCxHQUMxQkEsRUFBTTdILFNBQVEsU0FBQzhILEdBQ2IsSUFBTUMsRUFBY0MsYUFBYUYsR0FDakMzQixFQUFZRSxRQUFRMEIsRUFDdEIsR0FDRixJQUlBbEMsRUFDRytCLGtCQUNBdEQsTUFBSyxTQUFDUixHQUNLLElBQUlyRCxFQUNaLENBQ0VFLE1BQU9tRCxFQUNQbEQsU0FBVSxTQUFDbEQsR0FDVDBJLEVBQVcxSSxFQUNiLEdBRUYsa0JBRU1nSyxjQUNSWixRQUFRQyxJQUFJakQsRUFDZCxJQUNDa0QsTUFBTUYsUUFBUUcsT0FFakJwQixFQUNHOEIsY0FDQXJELE1BQUssU0FBQ1IsR0FDTGdELFFBQVFDLElBQUlqRCxHQUNab0MsRUFBU00sWUFBWTFDLEVBQUl0SCxLQUFNc0gsRUFBSVUsT0FDbkMwQixFQUFTbUIsVUFBVXZELEVBQUlMLE9BQ3pCLElBQ0N1RCxNQUFNRixRQUFRRyxPQUlqQmhDLGtCQUFrQjdILGlCQUFpQixTQUFTLFdBQzFDLElBQU02SyxFQUFrQi9CLEVBQVN5QixjQUNqQ3hDLGtCQUFrQmhKLE1BQVE4TCxFQUFnQjFFLE1BQzFDNkIsd0JBQXdCakosTUFBUThMLEVBQWdCekUsWUFDaEQ4QyxFQUFxQmtCLE1BQ3ZCLElBRUFiLEVBQWFELG9CQUNiSixFQUFxQkksb0JBRXJCL0ksU0FBU1IsY0FBYyx5QkFBeUJDLGlCQUFpQixTQUFTLFdBQ3hFMkksRUFBa0I1RixvQkFDbEJ3RyxFQUFhYSxNQUNmLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbiIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGxpbmsgfSwgY2FyZFNlbGVjdG9yLCBoYW5kbGVJbWFnZUNsaWNrKSB7XHJcbiAgICAgIHRoaXMuX25hbWUgPSBuYW1lO1xyXG4gICAgICB0aGlzLl9saW5rID0gbGluaztcclxuICAgICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICAgIH1cclxuICBcclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxyXG4gICAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5faGFuZGxlTGlrZUljb24oKTtcclxuICAgICAgICB9KTtcclxuICBcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19idXR0b24tcmVtb3ZlXCIpXHJcbiAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgXHJcbiAgICAgIC8vIFVwZGF0ZSB0aGUgZXZlbnQgbGlzdGVuZXIgZm9yIGltYWdlIGNsaWNrXHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIilcclxuICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2soeyBuYW1lOiB0aGlzLl9uYW1lLCBsaW5rOiB0aGlzLl9saW5rIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2hhbmRsZUxpa2VJY29uKCkge1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfaGFuZGxlRGVsZXRlQ2FyZCgpIHtcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gbnVsbDtcclxuICAgIH1cclxuICBcclxuICAgIGdldFZpZXcoKSB7XHJcbiAgICAgIGNvbnN0IGNhcmREYXRhID0geyBsaW5rOiB0aGlzLl9saW5rLCBuYW1lOiB0aGlzLl9uYW1lIH07XHJcbiAgXHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXHJcbiAgICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXHJcbiAgICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICBcclxuICAgICAgY29uc3QgY2FyZEltYWdlRUwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xyXG4gICAgICBjYXJkSW1hZ2VFTC5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgICBjYXJkSW1hZ2VFTC5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gIFxyXG4gICAgICBjb25zdCBjYXJkVGl0bGVFTCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGFiZWwtdGl0bGVcIik7XHJcbiAgICAgIGNhcmRUaXRsZUVMLnRleHRDb250ZW50ID0gY2FyZERhdGEubmFtZTtcclxuICBcclxuICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICBcclxuICAgICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xyXG4gICAgfVxyXG4gIH0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKHZhbGlkYXRpb25TZXR0aW5ncywgZm9ybUVsKSB7XHJcbiAgICAgIHRoaXMuX2Zvcm1FbCA9IGZvcm1FbDtcclxuICAgICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gdmFsaWRhdGlvblNldHRpbmdzLmZvcm1TZWxlY3RvcjtcclxuICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHZhbGlkYXRpb25TZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHZhbGlkYXRpb25TZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgICB0aGlzLl9lcnJvckNsYXNzID0gdmFsaWRhdGlvblNldHRpbmdzLmVycm9yQ2xhc3M7XHJcbiAgICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yQWxsKFwibW9kYWxfX2lucHV0XCIpXTtcclxuICAgIH1cclxuICBcclxuICAgIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgICBpZiAoIWlucHV0RWwudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXQpIHtcclxuICAgICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XHJcbiAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuICBcclxuICAgIF9oaWRlSW5wdXRFcnJvcihpbnB1dCkge1xyXG4gICAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgIHRoaXMuX2lucHV0RWxzLmZvckVhY2goKGlucHV0RWwpID0+IHtcclxuICAgICAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xyXG4gICAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICBcclxuICAgIF9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XHJcbiAgICAgIHJldHVybiAhaW5wdXRMaXN0LmV2ZXJ5KChpbnB1dEVsKSA9PiBpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKTtcclxuICAgIH1cclxuICBcclxuICAgIHRvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuX2lucHV0RWxzKSkge1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbnMuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b25zLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucy5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25zLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG4gIH1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcygpIHtcclxuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGRhdGEpID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoZGF0YSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pICB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgfSBcclxuICAgIFxyXG4gICAgb3BlbigpIHtcclxuICAgICAgICAvL29wZW4gcG9wdXBzXHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIC8vY2xvc2UgcG9wdXBzXHJcbiAgICAgICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgX2hhbmRsZUVzY0Nsb3NlID0gKGUpID0+IHtcclxuICAgICAgICAvL2xpc3RlbnMgZm9yIGVzYyBidXR0b25cclxuICAgICAgICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICB9ICAgICAgXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgICAgIC8vc2V0cyBsaXN0ZW5lcnNcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgICAgICAgaWYoXHJcbiAgICAgICAgICAgICAgICBldnQudGFyZ2V0ID09PSB0aGlzLl9wb3B1cEVsZW1lbnQgfHwgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fY2xvc2VcIilcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbn1cclxuXHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBUaXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19wcmV2aWV3LXRpdGxlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIG9wZW4oIGxpbmssIG5hbWUgKXtcclxuICAgICAgICB0aGlzLl9wb3B1cEltYWdlLnNyYyA9IGxpbms7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwVGl0bGUudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yIChwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICAgICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpXHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICAgICAgY29uc3QgaW5wdXRzID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xyXG4gICAgICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XHJcbiAgICAgICAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiBcclxuICAgICAgICAgICAgKGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWUpKTtcclxuICAgICAgICAgICAgcmV0dXJuIGlucHV0VmFsdWVzO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEZvcm0oKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcG9wdXBGb3JtO1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgVXNlckluZm8ge1xyXG4gICAgY29uc3RydWN0b3IodGl0bGVTZWxlY3RvciwgZGVzY3JpcHRpb25TZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl90aXRsZUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aXRsZVNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbkVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkZXNjcmlwdGlvblNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9hdmF0YXJFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIGNvbnN0IHVzZXJJbmZvID0ge1xyXG4gICAgICAgICAgICB0aXRsZTogdGhpcy5fdGl0bGVFbC50ZXh0Q29udGVudCxcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHRoaXMuX2Rlc2NyaXB0aW9uRWwudGV4dENvbnRlbnQsXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gdXNlckluZm87XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VXNlckluZm8odGl0bGUsIGRlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5fdGl0bGVFbC50ZXh0Q29udGVudCA9IHRpdGxlO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uRWwudGV4dENvbnRlbnQgPSBkZXNjcmlwdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBzZXRBdmF0YXIoYXZhdGFyKSB7XHJcbiAgICAgICAgdGhpcy5fYXZhdGFyRWwuc3JjID0gYXZhdGFyO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlckluZm87IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuX2Jhc2VVcmwgPSBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCI7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0ge1xyXG4gICAgICBhdXRob3JpemF0aW9uOiBcImYwMGRiZTRkLTNiY2YtNDBlMy1hNDZmLTllMWVkODIwNmJkNVwiLFxyXG4gICAgICBcIkNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBfZ2V0UmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgLy8gMSBMT0FESU5HIFVTRVIgSU5GT1JNQVRJT04gSU5UTyBUSEUgU0VSVkVSXHJcbiAgLy8gR0VUIGh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL3VzZXJzL21lIFxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIC8vIDIgTE9BRElORyBDQVJEUyBGUk9NIFRIRSBTRVJWRVJcclxuICAvLyBHRVQgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMgXHJcbiAgLy8gaW5pdGlhbCByZXNwb25zZSB3aWxsIGJlIGFuIGVtcHR5IEpTT04gYXJyYXkgW11cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgLy8gMyAgRURJVElORyBUSEUgUFJPRklMRSBcclxuICAvLyAgUEFUQ0ggaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvdXNlcnMvbWUgXHJcbiAgLy8gQWRkIENvbnRlbnQtdHlwZSBhZnRlciB0aGUgYXV0aG9yaXphdGlvbiB0b2tlbiBcclxuICAvLyBib2R5OiBKU09OLnN0cmluZ2lmeSAoe05BTUUgYW5kIEFCT1VUfSkgXHJcbiAgZ2V0RWRpdFByb2ZpbGUobmFtZSwgYWJvdXQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lLCBcclxuICAgICAgICBhYm91dDogYWJvdXRcclxuICAgICAgfSlcclxuICAgICAgXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuICAvLyA0IEFERElORyBBIE5FVyBDQVJEXHJcbiAgLy8gUE9TVCBodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MS9jYXJkc1xyXG4gIC8vIGJvZHk6IEpTT04uc3RyaW5naWZ5ICh7TkFNRSBhbmQgTElOS30pXHJcbiAgZ2V0TmV3Q2FyZChuYW1lLCBsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5ICh7XHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBsaW5rOiBsaW5rXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxufVxyXG5cclxuLy8gNSAmIDYgQ1JFQVRJTkcgQSBORVcgUE9QVVAgRk9SIERFTEVUSU5HIEEgQ0FSRFxyXG4gIC8vIHNlbmQgREVMRVRFIHJlcXVlc3QgXHJcbiAgICAvLyBERUxFVEUgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMvY2FyZElkIFxyXG4gICAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuXHJcbiAgICBjaGFuZ2VBdmF0YXIoYXZhdGFyVXJsKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGF2YXRhclVybDogYXZhdGFyVXJsIH0pLFxyXG4gICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZUxpa2UoY2FyZElkLCBpc0xpa2VkKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XHJcbiAgICAgICAgbWV0aG9kOiBpc0xpa2VkID8gXCJERUxFVEVcIiA6IFwiUFVUXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuICBcclxuICAgIHVwZGF0ZUF2YXRhcihhdmF0YXIpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgIGF2YXRhcjogYXZhdGFyLFxyXG4gICAgICAgIH0pLFxyXG4gICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gIH1cclxuXHJcbiAgXHJcblxyXG5cclxuIiwiICBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICAgICAgYWx0OiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICAgIGFsdDogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgICAgIGFsdDogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gICAgICBhbHQ6IFwiTGF0ZW1hclwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnIFwiLFxyXG4gICAgICBhbHQ6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZyAgXCIsXHJcbiAgICAgIGFsdDogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgfSxcclxuICBdO1xyXG5cclxuICAgIGNvbnN0IHZhbGlkYXRpb25TZXR0aW5ncyA9IHtcclxuICAgIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvclwiXHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdmFyaWFibGVzID0ge1xyXG4gICAgICBwcm9maWxlRWRpdEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpLFxyXG4gICAgICBwcm9maWxlRWRpdE1vZGFsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiKSxcclxuICAgICAgcHJvZmlsZVRpdGxlSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS10aXRsZS1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZUltYWdlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2ltYWdlXCIpLFxyXG4gICAgICBhZGROZXdNb2RhbENhcmQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtZm9ybVwiKSxcclxuICAgICAgY2FyZExpc3RFbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKSxcclxuICAgICAgYWRkTmV3Q2FyZEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19wbHVzLWJ1dHRvblwiKSxcclxuICAgICAgZGVsZXRlTW9kYWw6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVsZXRlLW1vZGFsXCIpLFxyXG4gICAgICBhdmF0YXJJbnB1dDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItdXJsLWlucHV0XCIpLFxyXG4gICAgICBhdmF0YXJNb2RhbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWxcIiksXHJcbiAgICAgIGF2YXRhck1vZGFsQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1tb2RhbC1idXR0b25cIiksXHJcbiAgICBcclxuICAgIH1cclxuXHJcblxyXG5leHBvcnQge2luaXRpYWxDYXJkcywgdmFsaWRhdGlvblNldHRpbmdzLCB2YXJpYWJsZXN9OyIsImltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhEZWxldGUgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRGVsZXRlLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGluaXRpYWxDYXJkcywgXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLCBcclxuICB2YXJpYWJsZXN9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuXHJcbi8vVmFyaWFibGVzXHJcblxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCJmMDBkYmU0ZC0zYmNmLTQwZTMtYTQ2Zi05ZTFlZDgyMDZiZDVcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcbiAgfVxyXG59KTsgXHJcblxyXG5jb25zdCBjYXJkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhcmlhYmxlcy5hZGROZXdNb2RhbENhcmQsIHZhbGlkYXRpb25TZXR0aW5ncyk7XHJcbmNhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YXJpYWJsZXMuYXZhdGFyTW9kYWwsIHZhbGlkYXRpb25TZXR0aW5ncyk7XHJcbmF2YXRhckZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgcHJvZmlsZUVkaXRGb3JtID0gdmFyaWFibGVzLnByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICBwcm9maWxlRWRpdEZvcm0sXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzXHJcbik7XHJcblxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhcIi5wcm9maWxlX190aXRsZVwiLCBcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiKTtcclxuXHJcbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcclxuICAgICAgY29uc3QgY2FyZExpc3RFbCA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xyXG4gICAgICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRMaXN0RWwpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIFwiLmNhcmRzX19saXN0XCJcclxuKTtcclxuXHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgdmFyaWFibGVzLnByb2ZpbGVFZGl0TW9kYWwsXHJcbiAgaGFuZGxlUHJvZmlsZUVkaXRGb3JtU3VibWl0XHJcbik7XHJcblxyXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNtb2RhbC1wcmV2aWV3XCIpO1xyXG5wb3B1cFdpdGhJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgdmFyaWFibGVzLmFkZE5ld01vZGFsQ2FyZCxcclxuICBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdFxyXG4pO1xyXG5cclxuY29uc3QgYXZhdGFyTW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybSh2YXJpYWJsZXMuYXZhdGFyTW9kYWwsIGhhbmRsZUF2YXRhckZvcm1TdWJtaXQpO1xyXG5hdmF0YXJNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy9mdW5jdGlvbnNcclxuXHJcbi8vIGZ1bmN0aW9uIGNyZWF0ZUNhcmQoY2FyZERhdGEpIHtcclxuLy8gICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbi8vICAgICBjYXJkRGF0YSxcclxuLy8gICAgIFwiI2NhcmQtdGVtcGxhdGVcIixcclxuLy8gICAgIGhhbmRsZUltYWdlQ2xpY2ssXHJcbi8vICAgICBoYW5kbGVEZWxldGVDbGljayxcclxuLy8gICAgIGhhbmRsZUxpa2VDbGlja1xyXG4vLyAgICk7XHJcbi8vICAgc2VjdGlvbi5hZGRJdGVtKGNhcmQuZ2VuZXJhdGVDYXJkKCkpO1xyXG4vLyB9XHJcbmZ1bmN0aW9uIG9wZW5BdmF0YXJGb3JtKCkge1xyXG4gIGF2YXRhck1vZGFsLm9wZW4oKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2V0QnV0dG9uVGV4dChidXR0b24sIHRleHQpIHtcclxuICBidXR0b24udGV4dENvbnRlbnQgPSB0ZXh0O1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIHNldEJ1dHRvblRleHQodmFyaWFibGVzLmFkZE5ld0NhcmRCdXR0b24sIFwiU2F2aW5nLi4uXCIpO1xyXG4gIGFwaVxyXG4gICAgLmFkZE5ld0NhcmQoaW5wdXRWYWx1ZXMpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICAgIC8vIGNyZWF0ZSBhIG5ldyBjYXJkXHJcbiAgICAgIGNyZWF0ZUNhcmQocmVzKTtcclxuICAgICAgLy8gcmVuZGVyIGl0XHJcbiAgICAgIHZhcmlhYmxlcy5hZGROZXdNb2RhbENhcmQucmVzZXQoKTtcclxuICAgICAgLy8gdG9nZ2xlIGJ1dHRvbiBzdGF0ZVxyXG4gICAgICBjYXJkRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAvLyBjbG9zZSBtb2RhbFxyXG4gICAgICBhZGRDYXJkUG9wdXAuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgc2V0QnV0dG9uVGV4dCh2YXJpYWJsZXMuYWRkTmV3Q2FyZEJ1dHRvbiwgXCJTYXZlXCIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgZGVsZXRlTW9kYWwgPSBuZXcgUG9wdXBXaXRoRGVsZXRlKHZhcmlhYmxlcy5kZWxldGVNb2RhbCk7XHJcbiAgICBkZWxldGVNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xyXG4gIC8vIG9wZW4gdGhlIG1vZGFsXHJcbiAgZGVsZXRlTW9kYWwub3BlbigpO1xyXG4gIC8vIHNldCB0aGUgc3VibWl0IGFjdGlvblxyXG4gIGRlbGV0ZU1vZGFsLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZC5faWQpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICBkZWxldGVNb2RhbC5jbG9zZSgpO1xyXG4gICAgICAgIGNhcmQuX2hhbmRsZURlbGV0ZUNhcmQoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gIH0pO1xyXG59XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUF2YXRhckZvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpIHtcclxuICBzZXRCdXR0b25UZXh0KHZhcmlhYmxlcy5hdmF0YXJNb2RhbEJ1dHRvbiwgXCJTYXZpbmcuLi5cIik7XHJcbiAgYXBpXHJcbiAgICAudXBkYXRlQXZhdGFyKGlucHV0VmFsdWVzLmxpbmspXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldEF2YXRhcihyZXMuYXZhdGFyKTtcclxuICAgICAgY29uc29sZS5sb2cocmVzKTtcclxuICAgICAgYXZhdGFyTW9kYWwuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgc2V0QnV0dG9uVGV4dCh2YXJpYWJsZXMuYXZhdGFyTW9kYWxCdXR0b24sIFwiU2F2ZVwiKTtcclxuICAgIH0pO1xyXG59XHJcbi8vIGZ1bmN0aW9uIGhhbmRsZUFkZENhcmRGb3JtU3VibWl0KGZvcm1EYXRhKSB7XHJcbi8vICAgY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoeyBuYW1lOiBmb3JtRGF0YS50aXRsZSwgbGluazogZm9ybURhdGEudXJsIH0pO1xyXG4vLyAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZCk7XHJcbi8vICAgYWRkQ2FyZFBvcHVwLmNsb3NlKCk7XHJcbi8vIH1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoY2FyZERhdGEpIHtcclxuICByZXR1cm4gbmV3IENhcmQoY2FyZERhdGEsIFwiI2NhcmQtdGVtcGxhdGVcIiwgKCkgPT4ge1xyXG4gICAgcG9wdXBXaXRoSW1hZ2Uub3BlbihjYXJkRGF0YS5saW5rLCBjYXJkRGF0YS5uYW1lKTtcclxuICB9KS5nZXRWaWV3KCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVFZGl0Rm9ybVN1Ym1pdChmb3JtRGF0YSkge1xyXG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGZvcm1EYXRhLnRpdGxlLCBmb3JtRGF0YS5kZXNjcmlwdGlvbik7XHJcbiAgcHJvZmlsZUVkaXRGb3JtUG9wdXAuY2xvc2UoKTtcclxufVxyXG5cclxudmFyaWFibGVzLnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgb3BlbkF2YXRhckZvcm0oKTtcclxufSlcclxuXHJcbmNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcblxyXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5hcGkuZ2V0VXNlckluZm8oKS50aGVuKChVc2VySW5mbykgPT4ge1xyXG4gIHVzZXJJbmZvLmdldFVzZXJJbmZvKFVzZXJJbmZvLm5hbWUsIFVzZXJJbmZvLmFib3V0KTtcclxufSk7XHJcblxyXG5hcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigoY2FyZHMpID0+IHtcclxuICBjYXJkcy5mb3JFYWNoKChjYXJkKSA9PiB7XHJcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGdlbmVyYXRlQ2FyZChjYXJkKTtcclxuICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmxldCBzZWN0aW9uO1xyXG5cclxuYXBpXHJcbiAgLmdldEluaXRpYWxDYXJkcygpXHJcbiAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gICAgICB7XHJcbiAgICAgICAgaXRlbXM6IHJlcyxcclxuICAgICAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgICAgICBjcmVhdGVDYXJkKGNhcmREYXRhKTtcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgICBcImdhbGxlcnlfX2NhcmRzXCJcclxuICAgICk7XHJcbiAgICBzZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcbiAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG5cclxuYXBpXHJcbiAgLmdldFVzZXJJbmZvKClcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzLm5hbWUsIHJlcy5hYm91dCk7XHJcbiAgICB1c2VySW5mby5zZXRBdmF0YXIocmVzLmF2YXRhcik7XHJcbiAgfSlcclxuICAuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcblxyXG4vL0V2ZW50IExpc3RlbmVyc1xyXG5cclxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBjb25zdCBwcm9maWxlVXNlckluZm8gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIHByb2ZpbGVUaXRsZUlucHV0LnZhbHVlID0gcHJvZmlsZVVzZXJJbmZvLnRpdGxlO1xyXG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gcHJvZmlsZVVzZXJJbmZvLmRlc2NyaXB0aW9uO1xyXG4gIHByb2ZpbGVFZGl0Rm9ybVBvcHVwLm9wZW4oKTtcclxufSk7XHJcblxyXG5hZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxucHJvZmlsZUVkaXRGb3JtUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcGx1cy1idXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBjYXJkRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gIGFkZENhcmRQb3B1cC5vcGVuKCk7XHJcbn0pOyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiQ2FyZCIsIl9yZWYiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwibmFtZSIsImxpbmsiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX25hbWUiLCJfbGluayIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlSW1hZ2VDbGljayIsImtleSIsIl90aGlzIiwiX2NhcmRFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlTGlrZUljb24iLCJfaGFuZGxlRGVsZXRlQ2FyZCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInJlbW92ZSIsImNhcmREYXRhIiwiZG9jdW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiY2FyZEltYWdlRUwiLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsIl9zZXRFdmVudExpc3RlbmVycyIsIkZvcm1WYWxpZGF0b3IiLCJ2YWxpZGF0aW9uU2V0dGluZ3MiLCJmb3JtRWwiLCJfZm9ybUVsIiwiX2Zvcm1TZWxlY3RvciIsImZvcm1TZWxlY3RvciIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9pbnB1dEVscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dEVsIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9zaG93SW5wdXRFcnJvciIsIl9oaWRlSW5wdXRFcnJvciIsImlucHV0IiwiZXJyb3JNZXNzYWdlRWwiLCJjb25jYXQiLCJpZCIsImFkZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiZm9yRWFjaCIsImUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJpbnB1dExpc3QiLCJldmVyeSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfc3VibWl0QnV0dG9ucyIsImRpc2FibGVkIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJkYXRhIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJjbG9zZSIsIl9wb3B1cEVsZW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiX3RoaXMyIiwiZXZ0IiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhJbWFnZSIsIl9Qb3B1cCIsIl9pbmhlcml0cyIsIl9zdXBlciIsImNhbGwiLCJfcG9wdXBJbWFnZSIsIl9wb3B1cFRpdGxlIiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0IiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfcG9wdXBGb3JtIiwicmVzZXQiLCJpbnB1dHMiLCJpbnB1dFZhbHVlcyIsInByZXZlbnREZWZhdWx0IiwiX2dldElucHV0VmFsdWVzIiwiVXNlckluZm8iLCJ0aXRsZVNlbGVjdG9yIiwiZGVzY3JpcHRpb25TZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX3RpdGxlRWwiLCJfZGVzY3JpcHRpb25FbCIsIl9hdmF0YXJFbCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJhdmF0YXIiLCJBcGkiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJmZXRjaCIsImhlYWRlcnMiLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJhYm91dCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY2FyZElkIiwiYXZhdGFyVXJsIiwiaXNMaWtlZCIsInZhcmlhYmxlcyIsInByb2ZpbGVFZGl0QnV0dG9uIiwicHJvZmlsZUVkaXRNb2RhbCIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlSW1hZ2UiLCJhZGROZXdNb2RhbENhcmQiLCJjYXJkTGlzdEVsIiwiYWRkTmV3Q2FyZEJ1dHRvbiIsImRlbGV0ZU1vZGFsIiwiYXZhdGFySW5wdXQiLCJhdmF0YXJNb2RhbCIsImF2YXRhck1vZGFsQnV0dG9uIiwiYXBpIiwiYmFzZVVybCIsImNhcmRGb3JtVmFsaWRhdG9yIiwiZW5hYmxlVmFsaWRhdGlvbiIsImVkaXRGb3JtVmFsaWRhdG9yIiwidXNlckluZm8iLCJjYXJkU2VjdGlvbiIsImNyZWF0ZUNhcmQiLCJhZGRJdGVtIiwicHJvZmlsZUVkaXRGb3JtUG9wdXAiLCJmb3JtRGF0YSIsInNldFVzZXJJbmZvIiwicG9wdXBXaXRoSW1hZ2UiLCJzZXRFdmVudExpc3RlbmVycyIsImFkZENhcmRQb3B1cCIsInNldEJ1dHRvblRleHQiLCJhZGROZXdDYXJkIiwiY29uc29sZSIsImxvZyIsImNhdGNoIiwiZXJyb3IiLCJmaW5hbGx5IiwiUG9wdXBXaXRoRGVsZXRlIiwidXBkYXRlQXZhdGFyIiwic2V0QXZhdGFyIiwiYnV0dG9uIiwidGV4dCIsIm9wZW4iLCJnZXRWaWV3IiwicmVuZGVySXRlbXMiLCJnZXRVc2VySW5mbyIsImdldEluaXRpYWxDYXJkcyIsImNhcmRzIiwiY2FyZCIsImNhcmRFbGVtZW50IiwiZ2VuZXJhdGVDYXJkIiwicHJvZmlsZVVzZXJJbmZvIl0sInNvdXJjZVJvb3QiOiIifQ==