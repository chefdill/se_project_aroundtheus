!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var r=function(){function t(e,r,n,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._cardSelector=r,this._handleDeleteClick=o,this._handleLikeIcon=i,this._handleImageClick=n}var r,n;return r=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}},{key:"_setEventListeners",value:function(){var t=this;this._cardElement.querySelector("card__button-remove").addEventListener("click",(function(){t._handleDeleteClick()})),this._cardElement.querySelector("card__like-button").addEventListener("click",(function(){t._handleLikeIcon()})),this._cardElement.querySelector(".card__image").addEventListener("click",(function(){t._handleImageClick({name:t._name,link:t._link})}))}},{key:"_handleLike",value:function(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}},{key:"_handleDelete",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"getView",value:function(){var t={link:this._link,name:this._name};this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);var e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._cardElement.querySelector(".card__label-title").textContent=t.name,this._setEventListeners(),this._cardElement}}])&&e(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function i(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var a=function(){function t(e,r){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=r.inputSelector,this._submitButtonSelector=r.submitButtonSelector,this._inactiveButtonClass=r.inactiveButtonClass,this._inputErrorClass=r.inputErrorClass,this._errorClass=r.errorClass,this._formEl=e,this._inputEls=function(t){if(Array.isArray(t))return o(t)}(n=this._formEl.querySelectorAll("modal__input"))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,e){if(t){if("string"==typeof t)return o(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(t,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._submitButtons=this._formEl.querySelector(this._submitButtonSelector)}var e,r;return e=t,(r=[{key:"_checkInputValidity",value:function(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}},{key:"_showInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}},{key:"_hasInvalidInput",value:function(t){return!t.every((function(t){return t.validity.valid}))}},{key:"toggleButtonState",value:function(){if(this._hasInvalidInput(this._inputEls))return this._submitButtons.classList.add(this._inactiveButtonClass),void(this._submitButtons.disabled=!0);this._submitButtons.classList.remove(this._inactiveButtonClass),this._submitButtons.disabled=!1}},{key:"_setEventListeners",value:function(){var t=this;this._inputEls.forEach((function(e){e.addEventListener("input",(function(r){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&i(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),u=a;function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==c(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===c(o)?o:String(o)),n)}var o}var s=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"renderItems",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&l(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,y(n.key),n)}}function y(t){var e=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===f(e)?e:String(e)}var d=function(){function t(e){var r,n,o,i=this,a=e.popupSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,o=function(t){"Escape"===t.key&&i.close()},(n=y(n="_handleEscClose"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._popupElement=document.querySelector(a)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._popupElement.addEventListener("click",(function(e){(e.target===t._popupElement||e.target.classList.contains("modal__close"))&&t.close()}))}}])&&p(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===m(o)?o:String(o)),n)}var o}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},v.apply(this,arguments)}function b(t,e){return b=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},b(t,e)}function _(t){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},_(t)}var S=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&b(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=_(n);if(o){var r=_(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===m(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,{popupSelector:t}))._popupImage=e._popupElement.querySelector(".modal__image"),e._popupTitle=e._popupElement.querySelector(".modal__preview-title"),e}return e=a,(r=[{key:"open",value:function(t,e){this._popupImage.src=t,this._popupImage.alt=e,this._popupTitle.textContent=e,v(_(a.prototype),"open",this).call(this)}}])&&h(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(d);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function w(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function E(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=O(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},k.apply(this,arguments)}function j(t,e){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},j(t,e)}function O(t){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},O(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&j(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=O(n);if(o){var r=O(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var r,n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,{popupSelector:t}))._handleFormSubmit=e,r._popupForm=r._popupElement.querySelector(".modal__form"),r._inputEls=function(t){if(Array.isArray(t))return w(t)}(n=r._popupForm.querySelectorAll(".modal__input"))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,e){if(t){if("string"==typeof t)return w(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?w(t,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r}return e=a,(r=[{key:"close",value:function(){this._popupForm.reset(),k(O(a.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var t={};return inputs.forEach((function(e){return t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var t=this;this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues())})),k(O(a.prototype),"setEventListeners",this).call(this)}},{key:"getForm",value:function(){return this._popupForm}}])&&E(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(d);function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function L(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==C(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==C(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===C(o)?o:String(o)),n)}var o}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=B(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},I.apply(this,arguments)}function T(t,e){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},T(t,e)}function B(t){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},B(t)}var q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&T(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=B(n);if(o){var r=B(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===C(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,{popupSelector:t}))._formEl=e._popupElement.querySelector(".modal__form"),e}return e=a,(r=[{key:"setEventListeners",value:function(){var t=this;this._formEl.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit()})),I(B(a.prototype),"setEventListeners",this).call(this)}},{key:"setSubmitAction",value:function(t){this._handleFormSubmit=t}}])&&L(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(d);function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function A(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==R(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===R(o)?o:String(o)),n)}var o}var U=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._titleEl=document.querySelector(e),this._descriptionEl=document.querySelector(r),this._avatarEl=document.querySelector(n)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{title:this._titleEl.textContent,description:this._descriptionEl.textContent}}},{key:"setUserInfo",value:function(t,e){this._titleEl.textContent=t,this._descriptionEl.textContent=e}},{key:"setAvatar",value:function(t){this._avatarEl.src=t}}])&&A(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function D(t){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},D(t)}function N(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==D(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==D(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===D(o)?o:String(o)),n)}var o}var x,M=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl="https://around-api.en.tripleten-services.com/v1",this._headers={authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-type":"application/json"}}var e,r;return e=t,(r=[{key:"_getResponse",value:function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"getEditProfile",value:function(t,e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:e})}).then(this._checkResponse)}},{key:"getNewCard",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:e})})}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"changeAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatarUrl:t})}).then(this._checkResponse)}},{key:"updateLike",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:e?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"updateAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}}])&&N(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),V={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},F={profileEditButton:document.querySelector("#profile-edit-button"),profileEditModal:document.querySelector("#profile-edit-modal"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),profileImage:document.querySelector(".profile__image"),addNewModalCard:document.querySelector("#add-card-modal"),cardListEl:document.querySelector(".cards__list"),addNewCardButton:document.querySelector(".profile__plus-button"),deleteModal:document.querySelector("#delete-modal"),avatarInput:document.querySelector("#avatar-url-input"),avatarModal:document.querySelector("#avatar-modal"),avatarModalButton:document.querySelector("#avatar-modal-button")},z=new M({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-Type":"application/json"}});z.getInitialCards().then((function(t){(x=new s({items:t,renderer:function(t){Z(t)}},"cards__list")).renderItems(),console.log(t)})).catch(console.error),z.getUserInfo().then((function(t){console.log(t),Y.setUserInfo(t.name,t.about),Y.setAvatar(t.avatar)})).catch(console.error);var J=new u(F.addNewModalCard,V);J.enableValidation();var H=new u(F.profileEditModal.querySelector(".modal__form"),V),Y=new U(".profile__title",".profile__description"),$=new s({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"Yosemite Valley"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"Lake Louise"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg ",alt:"Vanoise National Park"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg  ",alt:"Lago di Braies"}],renderer:function(t){var e=Z(t);$.addItem(e)}},".cards__list"),G=new P("#profile-edit-modal",(function(t){Y.setUserInfo(t.title,t.description),G.close()})),K=new P("#avatar-modal",(function(t){tt(F.avatarModalButton,"Saving..."),z.updateAvatar(t.link).then((function(t){Y.setAvatar(t.avatar),console.log(t),K.close()})).catch(console.error).finally((function(){tt(F.avatarModalButton,"Save")}))}));K.setEventListeners(),F.profileImage.addEventListener("click",(function(){K.open()}));var Q=new S("#modal-preview");Q.setEventListeners();var W=new P("#add-card-modal",(function(t){tt(F.addNewCardButton,"Saving..."),z.addNewCard(t).then((function(t){console.log(t),Z(t),F.addNewModalCard.reset(),J.toggleButtonState(),W.close()})).catch(console.error).finally((function(){tt(F.addNewCardButton,"Save")}))})),X=new q("#delete-modal");function Z(t){var e=new r(t,"#card-template",et,rt,nt);x.addItem(e.getView(t))}function tt(t,e){t.textContent=e}function et(t){Q.open(t)}function rt(t){X.open(),X.setSubmitAction((function(){z.deleteCard(t._id).then((function(){X.close(),t.handleDelete()})).catch(console.error)}))}function nt(t){z.updateLike(t._id,t.isLiked()).then((function(){t.handleLike(),console.log(t)})).catch(console.error)}X.setEventListeners(),$.renderItems(),H.enableValidation(),z.getUserInfo().then((function(t){Y.getUserInfo(t.name,t.about)})),z.getInitialCards().then((function(t){t.forEach((function(t){var e=getView(t);$.addItem(e)}))})),profileEditButton.addEventListener("click",(function(){var t=Y.getUserInfo();profileTitleInput.value=t.title,profileDescriptionInput.value=t.description,G.open()})),W.setEventListeners(),G.setEventListeners(),F.addNewCardButton.addEventListener("click",(function(){J.toggleButtonState(),W.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QzFCakMsRUFDR2tDLFdBQVdOLEVBQUtPLEtBQ2hCMUQsTUFBSyxXQUNKbUIsRUFBWXJFLFFBQ1pxRyxFQUFLUSxjQUNQLElBQ0M3QixNQUFNRixRQUFRRyxNQUNuQixHQUNGLENBRUEsU0FBU3FCLEdBQWdCRCxHQUN2QjVCLEVBQ0dxQyxXQUFXVCxFQUFLTyxJQUFLUCxFQUFLMUMsV0FDMUJULE1BQUssV0FDSm1ELEVBQUtVLGFBQ0xqQyxRQUFRQyxJQUFJc0IsRUFDZCxJQUNDckIsTUFBTUYsUUFBUUcsTUFDbkIsQ0FuRUFaLEVBQVkyQixvQkErRlpQLEVBQVlaLGNBRVpXLEVBQWtCRCxtQkFFbEJkLEVBQUlTLGNBQWNoQyxNQUFLLFNBQUN2QixHQUN0QndELEVBQVNELFlBQVl2RCxFQUFTdEcsS0FBTXNHLEVBQVN5QixNQUMvQyxJQUVBcUIsRUFBSUUsa0JBQWtCekIsTUFBSyxTQUFDOEQsR0FDMUJBLEVBQU1sSSxTQUFRLFNBQUN1SCxHQUNiLElBQU1ZLEVBQWNWLFFBQVFGLEdBQzVCWixFQUFZQyxRQUFRdUIsRUFDdEIsR0FDRixJQUlBcEQsa0JBQWtCeEgsaUJBQWlCLFNBQVMsV0FDMUMsSUFBTTZLLEVBQWtCL0IsRUFBU0QsY0FDakNuQixrQkFBa0JsSSxNQUFRcUwsRUFBZ0JoRixNQUMxQzhCLHdCQUF3Qm5JLE1BQVFxTCxFQUFnQi9FLFlBQ2hEd0QsRUFBcUJNLE1BQ3ZCLElBRUFFLEVBQWFILG9CQUNiTCxFQUFxQkssb0JBRXJCcEMsRUFBVVEsaUJBQWlCL0gsaUJBQWlCLFNBQVMsV0FDbkRpSixFQUFrQnJHLG9CQUNsQmtILEVBQWFGLE1BQ2YsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRGVsZXRlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICBjYXJkRGF0YSwgXHJcbiAgICAgIGNhcmRTZWxlY3RvciwgXHJcbiAgICAgIGhhbmRsZUltYWdlQ2xpY2ssIFxyXG4gICAgICBoYW5kbGVEZWxldGVDbGljaywgXHJcbiAgICAgIGhhbmRsZUxpa2VJY29uXHJcbiAgICAgICkgXHJcbiAgICAgIFxyXG4gICAgICB7XHJcbiAgICAgIHRoaXMuX25hbWUgPSBjYXJkRGF0YS5uYW1lO1xyXG4gICAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcclxuICAgICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xyXG4gICAgICB0aGlzLl9oYW5kbGVMaWtlSWNvbiA9IGhhbmRsZUxpa2VJY29uO1xyXG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXHJcbiAgICAgICAgLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQuY2xvbmVOb2RlKHRydWUpO1xyXG4gIFxyXG4gICAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiY2FyZF9fYnV0dG9uLXJlbW92ZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljaygpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiY2FyZF9fbGlrZS1idXR0b25cIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlTGlrZUljb24oKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHsgbmFtZTogdGhpcy5fbmFtZSwgbGluazogdGhpcy5fbGluayB9KTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBfaGFuZGxlTGlrZSgpIHtcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxyXG4gICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2hhbmRsZURlbGV0ZSgpIHtcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gbnVsbDtcclxuICAgIH1cclxuICBcclxuICAgIGdldFZpZXcoKSB7XHJcbiAgICAgIGNvbnN0IGNhcmREYXRhID0geyBsaW5rOiB0aGlzLl9saW5rLCBuYW1lOiB0aGlzLl9uYW1lIH07XHJcbiAgXHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXHJcbiAgICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXHJcbiAgICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICBcclxuICAgICAgY29uc3QgY2FyZEltYWdlRUwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xyXG4gICAgICBjYXJkSW1hZ2VFTC5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgICBjYXJkSW1hZ2VFTC5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gIFxyXG4gICAgICBjb25zdCBjYXJkVGl0bGVFTCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGFiZWwtdGl0bGVcIik7XHJcbiAgICAgIGNhcmRUaXRsZUVMLnRleHRDb250ZW50ID0gY2FyZERhdGEubmFtZTtcclxuICBcclxuICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICBcclxuICAgICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xyXG4gICAgfVxyXG4gIH0iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKCBmb3JtU2VsZWN0b3IsIHZhbGlkYXRpb25TZXR0aW5ncyApIHtcclxuICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHZhbGlkYXRpb25TZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHZhbGlkYXRpb25TZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgICB0aGlzLl9lcnJvckNsYXNzID0gdmFsaWRhdGlvblNldHRpbmdzLmVycm9yQ2xhc3M7XHJcbiAgICAgIHRoaXMuX2Zvcm1FbCA9IGZvcm1TZWxlY3RvcjtcclxuICAgICAgdGhpcy5faW5wdXRFbHMgPSBbLi4udGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCJtb2RhbF9faW5wdXRcIildO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25zID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKSB7XHJcbiAgICAgIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgIH1cclxuICBcclxuICAgIF9zaG93SW5wdXRFcnJvcihpbnB1dCkge1xyXG4gICAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IGlucHV0LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2hpZGVJbnB1dEVycm9yKGlucHV0KSB7XHJcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xyXG4gICAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuICBcclxuICAgIF9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XHJcbiAgICAgIHJldHVybiAhaW5wdXRMaXN0LmV2ZXJ5KChpbnB1dEVsKSA9PiBpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKTtcclxuICAgIH1cclxuICBcclxuICAgIHRvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuX2lucHV0RWxzKSkge1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbnMuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b25zLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucy5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25zLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgIHRoaXMuX2lucHV0RWxzLmZvckVhY2goKGlucHV0RWwpID0+IHtcclxuICAgICAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xyXG4gICAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICBcclxuICAgIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICAgIHRoaXMuX2Zvcm1FbC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH1cclxuICB9XHJcbiAgZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcclxuXHJcbiIsImNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2VjdGlvbjsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkgIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB9IFxyXG4gICAgXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIC8vb3BlbiBwb3B1cHNcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgLy9jbG9zZSBwb3B1cHNcclxuICAgICAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICBfaGFuZGxlRXNjQ2xvc2UgPSAoZSkgPT4ge1xyXG4gICAgICAgIC8vbGlzdGVucyBmb3IgZXNjIGJ1dHRvblxyXG4gICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgIH0gICAgICBcclxuICAgICAgICB9O1xyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgLy9zZXRzIGxpc3RlbmVyc1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBpZihcclxuICAgICAgICAgICAgICAgIGV2dC50YXJnZXQgPT09IHRoaXMuX3BvcHVwRWxlbWVudCB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX19jbG9zZVwiKVxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxufVxyXG5cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcclxuICAgICAgICB0aGlzLl9wb3B1cFRpdGxlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3ByZXZpZXctdGl0bGVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbiggbGluaywgbmFtZSApe1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2Uuc3JjID0gbGluaztcclxuICAgICAgICB0aGlzLl9wb3B1cEltYWdlLmFsdCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBUaXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IgKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgICAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIilcclxuICAgICAgICB0aGlzLl9pbnB1dEVscyA9IFsuLi50aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIildO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XHJcbiAgICAgICAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiBcclxuICAgICAgICAgICAgKGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWUpKTtcclxuICAgICAgICAgICAgcmV0dXJuIGlucHV0VmFsdWVzO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEZvcm0oKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcG9wdXBGb3JtO1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aERlbGV0ZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICB0aGlzLl9mb3JtRWwgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fZm9ybUVsLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KCk7XHJcbiAgICB9KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICBzZXRTdWJtaXRBY3Rpb24oaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZVNlbGVjdG9yLCBkZXNjcmlwdGlvblNlbGVjdG9yLCBhdmF0YXJTZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX3RpdGxlRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRpdGxlU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGRlc2NyaXB0aW9uU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2F2YXRhckVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICAgICAgY29uc3QgdXNlckluZm8gPSB7XHJcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLl90aXRsZUVsLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5fZGVzY3JpcHRpb25FbC50ZXh0Q29udGVudCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiB1c2VySW5mbztcclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VySW5mbyh0aXRsZSwgZGVzY3JpcHRpb24pIHtcclxuICAgICAgICB0aGlzLl90aXRsZUVsLnRleHRDb250ZW50ID0gdGl0bGU7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb25FbC50ZXh0Q29udGVudCA9IGRlc2NyaXB0aW9uO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEF2YXRhcihhdmF0YXIpIHtcclxuICAgICAgICB0aGlzLl9hdmF0YXJFbC5zcmMgPSBhdmF0YXI7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVc2VySW5mbzsiLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRGVsZXRlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aERlbGV0ZS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcclxuaW1wb3J0IHtcclxuICBpbml0aWFsQ2FyZHMsIFxyXG4gIHZhbGlkYXRpb25TZXR0aW5ncywgXHJcbiAgdmFyaWFibGVzfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcblxyXG4vL1ZhcmlhYmxlc1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IFwiZjAwZGJlNGQtM2JjZi00MGUzLWE0NmYtOWUxZWQ4MjA2YmQ1XCIsXHJcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG4gIH1cclxufSk7IFxyXG5cclxubGV0IHNlY3Rpb247XHJcblxyXG5hcGlcclxuICAuZ2V0SW5pdGlhbENhcmRzKClcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAgICAgIHtcclxuICAgICAgICBpdGVtczogcmVzLFxyXG4gICAgICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcclxuICAgICAgICAgIGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIFwiY2FyZHNfX2xpc3RcIlxyXG4gICAgKTtcclxuICAgIHNlY3Rpb24ucmVuZGVySXRlbXMoKTtcclxuICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgfSlcclxuICAuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcblxyXG5hcGlcclxuICAuZ2V0VXNlckluZm8oKVxyXG4gIC50aGVuKChyZXMpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyhyZXMubmFtZSwgcmVzLmFib3V0KTtcclxuICAgIHVzZXJJbmZvLnNldEF2YXRhcihyZXMuYXZhdGFyKTtcclxuICB9KVxyXG4gIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuXHJcbmNvbnN0IGNhcmRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFyaWFibGVzLmFkZE5ld01vZGFsQ2FyZCwgdmFsaWRhdGlvblNldHRpbmdzKTtcclxuY2FyZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgcHJvZmlsZUVkaXRGb3JtID0gdmFyaWFibGVzLnByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICBwcm9maWxlRWRpdEZvcm0sXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzXHJcbik7XHJcblxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhcIi5wcm9maWxlX190aXRsZVwiLCBcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiKTtcclxuXHJcbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcclxuICAgICAgY29uc3QgY2FyZExpc3RFbCA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xyXG4gICAgICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRMaXN0RWwpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIFwiLmNhcmRzX19saXN0XCJcclxuKTtcclxuXHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIsXHJcbiAgaGFuZGxlUHJvZmlsZUVkaXRGb3JtU3VibWl0XHJcbik7XHJcblxyXG5jb25zdCBhdmF0YXJNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI2F2YXRhci1tb2RhbFwiLFxyXG4gIGhhbmRsZUF2YXRhckZvcm1TdWJtaXRcclxuKTtcclxuYXZhdGFyTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmZ1bmN0aW9uIG9wZW5BdmF0YXJGb3JtKCkge1xyXG4gIGF2YXRhck1vZGFsLm9wZW4oKTtcclxufVxyXG5cclxudmFyaWFibGVzLnByb2ZpbGVJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIG9wZW5BdmF0YXJGb3JtKCk7XHJcbn0pO1xyXG5cclxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjbW9kYWwtcHJldmlld1wiKTtcclxucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGFkZENhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI2FkZC1jYXJkLW1vZGFsXCIsXHJcbiAgaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXRcclxuKTtcclxuXHJcbmNvbnN0IGRlbGV0ZU1vZGFsID0gbmV3IFBvcHVwV2l0aERlbGV0ZShcIiNkZWxldGUtbW9kYWxcIik7XHJcbmRlbGV0ZU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL2Z1bmN0aW9uc1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChjYXJkRGF0YSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgIGNhcmREYXRhLFxyXG4gICAgXCIjY2FyZC10ZW1wbGF0ZVwiLFxyXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcclxuICAgIGhhbmRsZURlbGV0ZUNsaWNrLFxyXG4gICAgaGFuZGxlTGlrZUNsaWNrXHJcbiAgKTtcclxuICBzZWN0aW9uLmFkZEl0ZW0oY2FyZC5nZXRWaWV3KGNhcmREYXRhKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNldEJ1dHRvblRleHQoYnV0dG9uLCB0ZXh0KSB7XHJcbiAgYnV0dG9uLnRleHRDb250ZW50ID0gdGV4dDtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpIHtcclxuICBzZXRCdXR0b25UZXh0KHZhcmlhYmxlcy5hZGROZXdDYXJkQnV0dG9uLCBcIlNhdmluZy4uLlwiKTtcclxuICBhcGlcclxuICAgIC5hZGROZXdDYXJkKGlucHV0VmFsdWVzKVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgICAvLyBjcmVhdGUgYSBuZXcgY2FyZFxyXG4gICAgICBjcmVhdGVDYXJkKHJlcyk7XHJcbiAgICAgIC8vIHJlbmRlciBpdFxyXG4gICAgICB2YXJpYWJsZXMuYWRkTmV3TW9kYWxDYXJkLnJlc2V0KCk7XHJcbiAgICAgIC8vIHRvZ2dsZSBidXR0b24gc3RhdGVcclxuICAgICAgY2FyZEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgLy8gY2xvc2UgbW9kYWxcclxuICAgICAgYWRkQ2FyZFBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHNldEJ1dHRvblRleHQodmFyaWFibGVzLmFkZE5ld0NhcmRCdXR0b24sIFwiU2F2ZVwiKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUltYWdlQ2xpY2soY2FyZERhdGEpIHtcclxuICBwb3B1cFdpdGhJbWFnZS5vcGVuKGNhcmREYXRhKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xyXG4gIC8vIG9wZW4gdGhlIG1vZGFsXHJcbiAgZGVsZXRlTW9kYWwub3BlbigpO1xyXG4gIC8vIHNldCB0aGUgc3VibWl0IGFjdGlvblxyXG4gIGRlbGV0ZU1vZGFsLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZC5faWQpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICBkZWxldGVNb2RhbC5jbG9zZSgpO1xyXG4gICAgICAgIGNhcmQuaGFuZGxlRGVsZXRlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlTGlrZUNsaWNrKGNhcmQpIHtcclxuICBhcGlcclxuICAgIC51cGRhdGVMaWtlKGNhcmQuX2lkLCBjYXJkLmlzTGlrZWQoKSlcclxuICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgY2FyZC5oYW5kbGVMaWtlKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKGNhcmQpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUF2YXRhckZvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpIHtcclxuICBzZXRCdXR0b25UZXh0KHZhcmlhYmxlcy5hdmF0YXJNb2RhbEJ1dHRvbiwgXCJTYXZpbmcuLi5cIik7XHJcbiAgYXBpXHJcbiAgICAudXBkYXRlQXZhdGFyKGlucHV0VmFsdWVzLmxpbmspXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldEF2YXRhcihyZXMuYXZhdGFyKTtcclxuICAgICAgY29uc29sZS5sb2cocmVzKTtcclxuICAgICAgYXZhdGFyTW9kYWwuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgc2V0QnV0dG9uVGV4dCh2YXJpYWJsZXMuYXZhdGFyTW9kYWxCdXR0b24sIFwiU2F2ZVwiKTtcclxuICAgIH0pO1xyXG59XHJcbi8vIGZ1bmN0aW9uIGhhbmRsZUFkZENhcmRGb3JtU3VibWl0KGZvcm1EYXRhKSB7XHJcbi8vICAgY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoeyBuYW1lOiBmb3JtRGF0YS50aXRsZSwgbGluazogZm9ybURhdGEudXJsIH0pO1xyXG4vLyAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZCk7XHJcbi8vICAgYWRkQ2FyZFBvcHVwLmNsb3NlKCk7XHJcbi8vIH1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVFZGl0Rm9ybVN1Ym1pdChmb3JtRGF0YSkge1xyXG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGZvcm1EYXRhLnRpdGxlLCBmb3JtRGF0YS5kZXNjcmlwdGlvbik7XHJcbiAgcHJvZmlsZUVkaXRGb3JtUG9wdXAuY2xvc2UoKTtcclxufVxyXG5cclxuY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMoKTtcclxuXHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmFwaS5nZXRVc2VySW5mbygpLnRoZW4oKFVzZXJJbmZvKSA9PiB7XHJcbiAgdXNlckluZm8uZ2V0VXNlckluZm8oVXNlckluZm8ubmFtZSwgVXNlckluZm8uYWJvdXQpO1xyXG59KTtcclxuXHJcbmFwaS5nZXRJbml0aWFsQ2FyZHMoKS50aGVuKChjYXJkcykgPT4ge1xyXG4gIGNhcmRzLmZvckVhY2goKGNhcmQpID0+IHtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZ2V0VmlldyhjYXJkKTtcclxuICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbi8vRXZlbnQgTGlzdGVuZXJzXHJcblxyXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNvbnN0IHByb2ZpbGVVc2VySW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgcHJvZmlsZVRpdGxlSW5wdXQudmFsdWUgPSBwcm9maWxlVXNlckluZm8udGl0bGU7XHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBwcm9maWxlVXNlckluZm8uZGVzY3JpcHRpb247XHJcbiAgcHJvZmlsZUVkaXRGb3JtUG9wdXAub3BlbigpO1xyXG59KTtcclxuXHJcbmFkZENhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5wcm9maWxlRWRpdEZvcm1Qb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxudmFyaWFibGVzLmFkZE5ld0NhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBjYXJkRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gIGFkZENhcmRQb3B1cC5vcGVuKCk7XHJcbn0pOyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiO1xyXG4gICAgdGhpcy5faGVhZGVycyA9IHtcclxuICAgICAgYXV0aG9yaXphdGlvbjogXCJmMDBkYmU0ZC0zYmNmLTQwZTMtYTQ2Zi05ZTFlZDgyMDZiZDVcIixcclxuICAgICAgXCJDb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgX2dldFJlc3BvbnNlKHJlcykge1xyXG4gICAgaWYgKHJlcy5vaykge1xyXG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgIH1cclxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcblxyXG4gIC8vIDEgTE9BRElORyBVU0VSIElORk9STUFUSU9OIElOVE8gVEhFIFNFUlZFUlxyXG4gIC8vIEdFVCBodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MS91c2Vycy9tZSBcclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICAvLyAyIExPQURJTkcgQ0FSRFMgRlJPTSBUSEUgU0VSVkVSXHJcbiAgLy8gR0VUIGh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL2NhcmRzIFxyXG4gIC8vIGluaXRpYWwgcmVzcG9uc2Ugd2lsbCBiZSBhbiBlbXB0eSBKU09OIGFycmF5IFtdXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIC8vIDMgIEVESVRJTkcgVEhFIFBST0ZJTEUgXHJcbiAgLy8gIFBBVENIIGh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL3VzZXJzL21lIFxyXG4gIC8vIEFkZCBDb250ZW50LXR5cGUgYWZ0ZXIgdGhlIGF1dGhvcml6YXRpb24gdG9rZW4gXHJcbiAgLy8gYm9keTogSlNPTi5zdHJpbmdpZnkgKHtOQU1FIGFuZCBBQk9VVH0pIFxyXG4gIGdldEVkaXRQcm9maWxlKG5hbWUsIGFib3V0KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZSwgXHJcbiAgICAgICAgYWJvdXQ6IGFib3V0XHJcbiAgICAgIH0pXHJcbiAgICAgIFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcbiAgLy8gNCBBRERJTkcgQSBORVcgQ0FSRFxyXG4gIC8vIFBPU1QgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHNcclxuICAvLyBib2R5OiBKU09OLnN0cmluZ2lmeSAoe05BTUUgYW5kIExJTkt9KVxyXG4gIGdldE5ld0NhcmQobmFtZSwgbGluaykge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSAoe1xyXG4gICAgICAgIG5hbWU6IG5hbWUsXHJcbiAgICAgICAgbGluazogbGlua1xyXG4gICAgICB9KVxyXG4gICAgfSlcclxuXHJcbn1cclxuXHJcbi8vIDUgJiA2IENSRUFUSU5HIEEgTkVXIFBPUFVQIEZPUiBERUxFVElORyBBIENBUkRcclxuICAvLyBzZW5kIERFTEVURSByZXF1ZXN0IFxyXG4gICAgLy8gREVMRVRFIGh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL2NhcmRzL2NhcmRJZCBcclxuICAgIGRlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgICB9XHJcblxyXG4gICAgY2hhbmdlQXZhdGFyKGF2YXRhclVybCkge1xyXG4gICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBhdmF0YXJVcmw6IGF2YXRhclVybCB9KSxcclxuICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVMaWtlKGNhcmRJZCwgaXNMaWtlZCkge1xyXG4gICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xyXG4gICAgICAgIG1ldGhvZDogaXNMaWtlZCA/IFwiREVMRVRFXCIgOiBcIlBVVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICB1cGRhdGVBdmF0YXIoYXZhdGFyKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICBhdmF0YXI6IGF2YXRhcixcclxuICAgICAgICB9KSxcclxuICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuICB9XHJcblxyXG4gIFxyXG5cclxuXHJcbiIsIiAgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgICAgIGFsdDogXCJZb3NlbWl0ZSBWYWxsZXlcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xha2UtbG91aXNlLmpwZ1wiLFxyXG4gICAgICBhbHQ6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxyXG4gICAgICBhbHQ6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGF0ZW1hci5qcGdcIixcclxuICAgICAgYWx0OiBcIkxhdGVtYXJcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC92YW5vaXNlLmpwZyBcIixcclxuICAgICAgYWx0OiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFnby5qcGcgIFwiLFxyXG4gICAgICBhbHQ6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgIH0sXHJcbiAgXTtcclxuXHJcbiAgICBjb25zdCB2YWxpZGF0aW9uU2V0dGluZ3MgPSB7XHJcbiAgICAvLyBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fYnV0dG9uXCIsXHJcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcclxuICAgIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gICAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JcIlxyXG4gIH07XHJcblxyXG4gIGNvbnN0IHZhcmlhYmxlcyA9IHtcclxuICAgICAgcHJvZmlsZUVkaXRCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWJ1dHRvblwiKSxcclxuICAgICAgcHJvZmlsZUVkaXRNb2RhbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtbW9kYWxcIiksXHJcbiAgICAgIHByb2ZpbGVUaXRsZUlucHV0OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtdGl0bGUtaW5wdXRcIiksXHJcbiAgICAgIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZGVzY3JpcHRpb24taW5wdXRcIiksXHJcbiAgICAgIHByb2ZpbGVJbWFnZTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWFnZVwiKSxcclxuICAgICAgYWRkTmV3TW9kYWxDYXJkOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZC1jYXJkLW1vZGFsXCIpLFxyXG4gICAgICBjYXJkTGlzdEVsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpLFxyXG4gICAgICBhZGROZXdDYXJkQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3BsdXMtYnV0dG9uXCIpLFxyXG4gICAgICBkZWxldGVNb2RhbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkZWxldGUtbW9kYWxcIiksXHJcbiAgICAgIGF2YXRhcklucHV0OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci11cmwtaW5wdXRcIiksXHJcbiAgICAgIGF2YXRhck1vZGFsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1tb2RhbFwiKSxcclxuICAgICAgYXZhdGFyTW9kYWxCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLW1vZGFsLWJ1dHRvblwiKSxcclxuICAgIFxyXG4gICAgfVxyXG5cclxuXHJcbmV4cG9ydCB7aW5pdGlhbENhcmRzLCB2YWxpZGF0aW9uU2V0dGluZ3MsIHZhcmlhYmxlc307Il0sIm5hbWVzIjpbIkNhcmQiLCJjYXJkRGF0YSIsImNhcmRTZWxlY3RvciIsImhhbmRsZUltYWdlQ2xpY2siLCJoYW5kbGVEZWxldGVDbGljayIsImhhbmRsZUxpa2VJY29uIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlRGVsZXRlQ2xpY2siLCJfaGFuZGxlTGlrZUljb24iLCJfaGFuZGxlSW1hZ2VDbGljayIsImtleSIsInZhbHVlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImZpcnN0RWxlbWVudENoaWxkIiwiY2xvbmVOb2RlIiwiX3RoaXMiLCJfY2FyZEVsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwicmVtb3ZlIiwiY2FyZEltYWdlRUwiLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsIl9zZXRFdmVudExpc3RlbmVycyIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtU2VsZWN0b3IiLCJ2YWxpZGF0aW9uU2V0dGluZ3MiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsIiwiX2lucHV0RWxzIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdXR0b25zIiwiaW5wdXRFbCIsInZhbGlkaXR5IiwidmFsaWQiLCJfc2hvd0lucHV0RXJyb3IiLCJfaGlkZUlucHV0RXJyb3IiLCJpbnB1dCIsImVycm9yTWVzc2FnZUVsIiwiY29uY2F0IiwiaWQiLCJhZGQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImlucHV0TGlzdCIsImV2ZXJ5IiwiX2hhc0ludmFsaWRJbnB1dCIsImRpc2FibGVkIiwiZm9yRWFjaCIsImUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJwcmV2ZW50RGVmYXVsdCIsIlNlY3Rpb24iLCJfcmVmIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImNsb3NlIiwiX3BvcHVwRWxlbWVudCIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfdGhpczIiLCJldnQiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiY2FsbCIsIl9wb3B1cEltYWdlIiwiX3BvcHVwVGl0bGUiLCJfZ2V0IiwiX2dldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9wb3B1cEZvcm0iLCJyZXNldCIsImlucHV0VmFsdWVzIiwiaW5wdXRzIiwiX2dldElucHV0VmFsdWVzIiwiUG9wdXBXaXRoRGVsZXRlIiwiVXNlckluZm8iLCJ0aXRsZVNlbGVjdG9yIiwiZGVzY3JpcHRpb25TZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX3RpdGxlRWwiLCJfZGVzY3JpcHRpb25FbCIsIl9hdmF0YXJFbCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJhdmF0YXIiLCJzZWN0aW9uIiwiQXBpIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZmV0Y2giLCJoZWFkZXJzIiwidGhlbiIsIl9jaGVja1Jlc3BvbnNlIiwiYWJvdXQiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJZCIsImF2YXRhclVybCIsImlzTGlrZWQiLCJ2YXJpYWJsZXMiLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVFZGl0TW9kYWwiLCJwcm9maWxlVGl0bGVJbnB1dCIsInByb2ZpbGVEZXNjcmlwdGlvbklucHV0IiwicHJvZmlsZUltYWdlIiwiYWRkTmV3TW9kYWxDYXJkIiwiY2FyZExpc3RFbCIsImFkZE5ld0NhcmRCdXR0b24iLCJkZWxldGVNb2RhbCIsImF2YXRhcklucHV0IiwiYXZhdGFyTW9kYWwiLCJhdmF0YXJNb2RhbEJ1dHRvbiIsImFwaSIsImJhc2VVcmwiLCJnZXRJbml0aWFsQ2FyZHMiLCJjcmVhdGVDYXJkIiwicmVuZGVySXRlbXMiLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnJvciIsImdldFVzZXJJbmZvIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsInNldEF2YXRhciIsImNhcmRGb3JtVmFsaWRhdG9yIiwiZW5hYmxlVmFsaWRhdGlvbiIsImVkaXRGb3JtVmFsaWRhdG9yIiwiY2FyZFNlY3Rpb24iLCJhZGRJdGVtIiwicHJvZmlsZUVkaXRGb3JtUG9wdXAiLCJmb3JtRGF0YSIsInNldEJ1dHRvblRleHQiLCJ1cGRhdGVBdmF0YXIiLCJmaW5hbGx5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJvcGVuIiwicG9wdXBXaXRoSW1hZ2UiLCJhZGRDYXJkUG9wdXAiLCJhZGROZXdDYXJkIiwiY2FyZCIsImhhbmRsZUxpa2VDbGljayIsImdldFZpZXciLCJidXR0b24iLCJ0ZXh0Iiwic2V0U3VibWl0QWN0aW9uIiwiZGVsZXRlQ2FyZCIsIl9pZCIsImhhbmRsZURlbGV0ZSIsInVwZGF0ZUxpa2UiLCJoYW5kbGVMaWtlIiwiY2FyZHMiLCJjYXJkRWxlbWVudCIsInByb2ZpbGVVc2VySW5mbyJdLCJzb3VyY2VSb290IjoiIn0=