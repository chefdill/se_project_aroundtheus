!function(){"use strict";var t={};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function r(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,r){if("object"!==e(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}(function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})})(t);var n=function(){function t(e,r,n){var o=e.name,i=e.link;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=o,this._link=i,this._cardSelector=r,this._handleImageClick=n}var e,n;return e=t,(n=[{key:"_setEventListeners",value:function(){var t=this;this._cardElement.querySelector(".card__like-button").addEventListener("click",(function(){t._handleLikeIcon()})),this._cardElement.querySelector(".card__button-remove").addEventListener("click",(function(){t._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(function(){t._handleImageClick({name:t._name,link:t._link})}))}},{key:"_handleLikeIcon",value:function(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}},{key:"_handleDeleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"getView",value:function(){var t={link:this._link,name:this._name};this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);var e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._cardElement.querySelector(".card__label-title").textContent=t.name,this._setEventListeners(),this._cardElement}}])&&r(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function a(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===o(i)?i:String(i)),n)}var i}var u=function(){function t(e,r){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=r.inputSelector,this._submitButtonSelector=r.submitButtonSelector,this._inactiveButtonClass=r.inactiveButtonClass,this._inputErrorClass=r.inputErrorClass,this._errorClass=r.errorClass,this._formEl=e,this._inputEls=function(t){if(Array.isArray(t))return i(t)}(n=this._formEl.querySelectorAll(this._inputSelector))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,e){if(t){if("string"==typeof t)return i(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(t,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._submitButtons=this._formEl.querySelector(this._submitButtonSelector)}var e,r;return e=t,(r=[{key:"_checkInputValidity",value:function(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}},{key:"_showInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}},{key:"_hasInvalidInput",value:function(t){return!t.every((function(t){return t.validity.valid}))}},{key:"toggleButtonState",value:function(){if(this._hasInvalidInput(this._inputEls))return this._submitButtons.classList.add(this._inactiveButtonClass),void(this._submitButtons.disabled=!0);this._submitButtons.classList.remove(this._inactiveButtonClass),this._submitButtons.disabled=!1}},{key:"_setEventListeners",value:function(){var t=this;this._inputEls.forEach((function(e){e.addEventListener("input",(function(r){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&a(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),l=u;function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function s(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==c(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===c(o)?o:String(o)),n)}var o}var f=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"renderItems",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&s(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function d(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,y(n.key),n)}}function y(t){var e=function(t,e){if("object"!==p(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===p(e)?e:String(e)}var m=function(){function t(e){var r,n,o,i=this,a=e.popupSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,o=function(t){"Escape"===t.key&&i.close()},(n=y(n="_handleEscClose"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._popupElement=document.querySelector(a)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._popupElement.addEventListener("click",(function(e){(e.target===t._popupElement||e.target.classList.contains("modal__close"))&&t.close()}))}}])&&d(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function v(t){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},v(t)}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==v(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==v(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===v(o)?o:String(o)),n)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},b.apply(this,arguments)}function _(t,e){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},_(t,e)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}var g=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&_(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(n);if(o){var r=S(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===v(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,{popupSelector:t}))._popupImage=e._popupElement.querySelector(".modal__image"),e._popupTitle=e._popupElement.querySelector(".modal__preview-title"),e}return e=a,(r=[{key:"open",value:function(t,e){this._popupImage.src=t,this._popupImage.alt=e,this._popupTitle.textContent=e,b(S(a.prototype),"open",this).call(this)}}])&&h(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(m);function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function E(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function k(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===w(o)?o:String(o)),n)}var o}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=P(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},j.apply(this,arguments)}function O(t,e){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},O(t,e)}function P(t){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},P(t)}var C=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&O(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=P(n);if(o){var r=P(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===w(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var r,n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,{popupSelector:t}))._handleFormSubmit=e,r._popupForm=r._popupElement.querySelector(".modal__form"),r._inputEls=function(t){if(Array.isArray(t))return E(t)}(n=r._popupForm.querySelectorAll(".modal__input"))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,e){if(t){if("string"==typeof t)return E(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?E(t,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r}return e=a,(r=[{key:"close",value:function(){this._popupForm.reset(),j(P(a.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var t={};return inputs.forEach((function(e){return t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var t=this;this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues())})),j(P(a.prototype),"setEventListeners",this).call(this)}},{key:"getForm",value:function(){return this._popupForm}}])&&k(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(m);function I(t){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},I(t)}function L(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==I(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===I(o)?o:String(o)),n)}var o}var T=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._titleEl=document.querySelector(e),this._descriptionEl=document.querySelector(r),this._avatarEl=document.querySelector(n)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{title:this._titleEl.textContent,description:this._descriptionEl.textContent}}},{key:"setUserInfo",value:function(t,e){this._titleEl.textContent=t,this._descriptionEl.textContent=e}},{key:"setAvatar",value:function(t){this._avatarEl.src=t}}])&&L(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function B(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===q(o)?o:String(o)),n)}var o}var R=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl="https://around-api.en.tripleten-services.com/v1",this._headers={authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-type":"application/json"}}var e,r;return e=t,(r=[{key:"_getResponse",value:function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"getEditProfile",value:function(t,e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:e})}).then(this._checkResponse)}},{key:"getNewCard",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:e})})}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"changeAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatarUrl:t})}).then(this._checkResponse)}},{key:"updateLike",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:e?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"updateAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}}])&&B(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),A={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},U={profileEditButton:document.querySelector("#profile-edit-button"),profileEditModal:document.querySelector("#profile-edit-modal"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),profileImage:document.querySelector(".profile__image"),addNewModalCard:document.querySelector("#add-card-form"),cardListEl:document.querySelector(".cards__list"),addNewCardButton:document.querySelector(".profile__plus-button"),deleteModal:document.querySelector("#delete-modal"),avatarInput:document.querySelector("#avatar-url-input"),avatarModal:document.querySelector("#avatar-modal"),avatarModalButton:document.querySelector("#avatar-modal-button")},M=new R({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-Type":"application/json"}}),N=new l(U.addNewModalCard,A);N.enableValidation(),new l(U.avatarModal,A).enableValidation();var V=new l(U.profileEditModal.querySelector(".modal__form"),A),x=new T(".profile__title",".profile__description"),D=new f({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"Yosemite Valley"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"Lake Louise"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg ",alt:"Vanoise National Park"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg  ",alt:"Lago di Braies"}],renderer:function(t){var e=$(t);D.addItem(e)}},".cards__list"),z=new C(U.profileEditModal,(function(t){x.setUserInfo(t.title,t.description),z.close()})),F=new g("#modal-preview");F.setEventListeners();var J=new C(U.addNewModalCard,(function(e){Y(U.addNewCardButton,"Saving..."),M.addNewCard(e).then((function(t){console.log(t),$(t),U.addNewModalCard.reset(),N.toggleButtonState(),J.close()})).catch(console.error).finally((function(){Y(U.addNewCardButton,"Save")})),new t.default(U.deleteModal).setEventListeners()})),H=new C(U.avatarModal,(function(t){Y(U.avatarModalButton,"Saving..."),M.updateAvatar(t.link).then((function(t){x.setAvatar(t.avatar),console.log(t),H.close()})).catch(console.error).finally((function(){Y(U.avatarModalButton,"Save")}))}));function Y(t,e){t.textContent=e}function $(t){return new n(t,"#card-template",(function(){F.open(t.link,t.name)})).getView()}H.setEventListeners(),U.profileEditButton.addEventListener("click",(function(){H.open()})),D.renderItems(),V.enableValidation(),M.getUserInfo().then((function(t){x.getUserInfo(t.name,t.about)})),M.getInitialCards().then((function(t){t.forEach((function(t){var e=generateCard(t);D.addItem(e)}))})),M.getInitialCards().then((function(t){new f({items:t,renderer:function(t){$(t)}},"gallery__cards").renderItems(),console.log(t)})).catch(console.error),M.getUserInfo().then((function(t){console.log(t),x.setUserInfo(t.name,t.about),x.setAvatar(t.avatar)})).catch(console.error),profileEditButton.addEventListener("click",(function(){var t=x.getUserInfo();profileTitleInput.value=t.title,profileDescriptionInput.value=t.description,z.open()})),J.setEventListeners(),z.setEventListeners(),document.querySelector(".profile__plus-button").addEventListener("click",(function(){N.toggleButtonState(),J.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Y2svYm9vdHN0cmFwIiwid2VicGFjazovL3ByYWN0aWN1bS93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gICAgY29uc3RydWN0b3IoeyBuYW1lLCBsaW5rIH0sIGNhcmRTZWxlY3RvciwgaGFuZGxlSW1hZ2VDbGljaykge1xyXG4gICAgICB0aGlzLl9uYW1lID0gbmFtZTtcclxuICAgICAgdGhpcy5fbGluayA9IGxpbms7XHJcbiAgICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIilcclxuICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICAgIHRoaXMuX2hhbmRsZUxpa2VJY29uKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgXHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fYnV0dG9uLXJlbW92ZVwiKVxyXG4gICAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCgpO1xyXG4gICAgICAgIH0pO1xyXG4gIFxyXG4gICAgICAvLyBVcGRhdGUgdGhlIGV2ZW50IGxpc3RlbmVyIGZvciBpbWFnZSBjbGlja1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpXHJcbiAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHsgbmFtZTogdGhpcy5fbmFtZSwgbGluazogdGhpcy5fbGluayB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICBcclxuICAgIF9oYW5kbGVMaWtlSWNvbigpIHtcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxyXG4gICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2hhbmRsZURlbGV0ZUNhcmQoKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBnZXRWaWV3KCkge1xyXG4gICAgICBjb25zdCBjYXJkRGF0YSA9IHsgbGluazogdGhpcy5fbGluaywgbmFtZTogdGhpcy5fbmFtZSB9O1xyXG4gIFxyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudCA9IGRvY3VtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxyXG4gICAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgXHJcbiAgICAgIGNvbnN0IGNhcmRJbWFnZUVMID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgICAgY2FyZEltYWdlRUwuc3JjID0gdGhpcy5fbGluaztcclxuICAgICAgY2FyZEltYWdlRUwuYWx0ID0gdGhpcy5fbmFtZTtcclxuICBcclxuICAgICAgY29uc3QgY2FyZFRpdGxlRUwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xhYmVsLXRpdGxlXCIpO1xyXG4gICAgICBjYXJkVGl0bGVFTC50ZXh0Q29udGVudCA9IGNhcmREYXRhLm5hbWU7XHJcbiAgXHJcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgXHJcbiAgICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICAgIH1cclxuICB9IiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgICBjb25zdHJ1Y3RvciggZm9ybVNlbGVjdG9yLCB2YWxpZGF0aW9uU2V0dGluZ3MgKSB7XHJcbiAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSB2YWxpZGF0aW9uU2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gdmFsaWRhdGlvblNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgICAgdGhpcy5fZXJyb3JDbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgICB0aGlzLl9mb3JtRWwgPSBmb3JtU2VsZWN0b3I7XHJcbiAgICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucyA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIH1cclxuICBcclxuICAgIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgICBpZiAoIWlucHV0RWwudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXQpIHtcclxuICAgICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XHJcbiAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuICBcclxuICAgIF9oaWRlSW5wdXRFcnJvcihpbnB1dCkge1xyXG4gICAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkge1xyXG4gICAgICByZXR1cm4gIWlucHV0TGlzdC5ldmVyeSgoaW5wdXRFbCkgPT4gaW5wdXRFbC52YWxpZGl0eS52YWxpZCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCh0aGlzLl9pbnB1dEVscykpIHtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b25zLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucy5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbnMuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucy5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIFxyXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XHJcbiAgICAgICAgaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGUpID0+IHtcclxuICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKTtcclxuICAgICAgICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgICB0aGlzLl9mb3JtRWwuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7XHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCgoZGF0YSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihkYXRhKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkgIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB9IFxyXG4gICAgXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIC8vb3BlbiBwb3B1cHNcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgLy9jbG9zZSBwb3B1cHNcclxuICAgICAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICBfaGFuZGxlRXNjQ2xvc2UgPSAoZSkgPT4ge1xyXG4gICAgICAgIC8vbGlzdGVucyBmb3IgZXNjIGJ1dHRvblxyXG4gICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgIH0gICAgICBcclxuICAgICAgICB9O1xyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgLy9zZXRzIGxpc3RlbmVyc1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBpZihcclxuICAgICAgICAgICAgICAgIGV2dC50YXJnZXQgPT09IHRoaXMuX3BvcHVwRWxlbWVudCB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX19jbG9zZVwiKVxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxufVxyXG5cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcclxuICAgICAgICB0aGlzLl9wb3B1cFRpdGxlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3ByZXZpZXctdGl0bGVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbiggbGluaywgbmFtZSApe1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2Uuc3JjID0gbGluaztcclxuICAgICAgICB0aGlzLl9wb3B1cEltYWdlLmFsdCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBUaXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IgKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgICAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIilcclxuICAgICAgICB0aGlzLl9pbnB1dEVscyA9IFsuLi50aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIildO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XHJcbiAgICAgICAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiBcclxuICAgICAgICAgICAgKGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWUpKTtcclxuICAgICAgICAgICAgcmV0dXJuIGlucHV0VmFsdWVzO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEZvcm0oKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcG9wdXBGb3JtO1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgVXNlckluZm8ge1xyXG4gICAgY29uc3RydWN0b3IodGl0bGVTZWxlY3RvciwgZGVzY3JpcHRpb25TZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl90aXRsZUVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aXRsZVNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbkVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkZXNjcmlwdGlvblNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9hdmF0YXJFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIGNvbnN0IHVzZXJJbmZvID0ge1xyXG4gICAgICAgICAgICB0aXRsZTogdGhpcy5fdGl0bGVFbC50ZXh0Q29udGVudCxcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IHRoaXMuX2Rlc2NyaXB0aW9uRWwudGV4dENvbnRlbnQsXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gdXNlckluZm87XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VXNlckluZm8odGl0bGUsIGRlc2NyaXB0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5fdGl0bGVFbC50ZXh0Q29udGVudCA9IHRpdGxlO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uRWwudGV4dENvbnRlbnQgPSBkZXNjcmlwdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBzZXRBdmF0YXIoYXZhdGFyKSB7XHJcbiAgICAgICAgdGhpcy5fYXZhdGFyRWwuc3JjID0gYXZhdGFyO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlckluZm87IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuX2Jhc2VVcmwgPSBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCI7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0ge1xyXG4gICAgICBhdXRob3JpemF0aW9uOiBcImYwMGRiZTRkLTNiY2YtNDBlMy1hNDZmLTllMWVkODIwNmJkNVwiLFxyXG4gICAgICBcIkNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBfZ2V0UmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgLy8gMSBMT0FESU5HIFVTRVIgSU5GT1JNQVRJT04gSU5UTyBUSEUgU0VSVkVSXHJcbiAgLy8gR0VUIGh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL3VzZXJzL21lIFxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIC8vIDIgTE9BRElORyBDQVJEUyBGUk9NIFRIRSBTRVJWRVJcclxuICAvLyBHRVQgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMgXHJcbiAgLy8gaW5pdGlhbCByZXNwb25zZSB3aWxsIGJlIGFuIGVtcHR5IEpTT04gYXJyYXkgW11cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgLy8gMyAgRURJVElORyBUSEUgUFJPRklMRSBcclxuICAvLyAgUEFUQ0ggaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvdXNlcnMvbWUgXHJcbiAgLy8gQWRkIENvbnRlbnQtdHlwZSBhZnRlciB0aGUgYXV0aG9yaXphdGlvbiB0b2tlbiBcclxuICAvLyBib2R5OiBKU09OLnN0cmluZ2lmeSAoe05BTUUgYW5kIEFCT1VUfSkgXHJcbiAgZ2V0RWRpdFByb2ZpbGUobmFtZSwgYWJvdXQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lLCBcclxuICAgICAgICBhYm91dDogYWJvdXRcclxuICAgICAgfSlcclxuICAgICAgXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuICAvLyA0IEFERElORyBBIE5FVyBDQVJEXHJcbiAgLy8gUE9TVCBodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MS9jYXJkc1xyXG4gIC8vIGJvZHk6IEpTT04uc3RyaW5naWZ5ICh7TkFNRSBhbmQgTElOS30pXHJcbiAgZ2V0TmV3Q2FyZChuYW1lLCBsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5ICh7XHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBsaW5rOiBsaW5rXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxufVxyXG5cclxuLy8gNSAmIDYgQ1JFQVRJTkcgQSBORVcgUE9QVVAgRk9SIERFTEVUSU5HIEEgQ0FSRFxyXG4gIC8vIHNlbmQgREVMRVRFIHJlcXVlc3QgXHJcbiAgICAvLyBERUxFVEUgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMvY2FyZElkIFxyXG4gICAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuXHJcbiAgICBjaGFuZ2VBdmF0YXIoYXZhdGFyVXJsKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGF2YXRhclVybDogYXZhdGFyVXJsIH0pLFxyXG4gICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZUxpa2UoY2FyZElkLCBpc0xpa2VkKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XHJcbiAgICAgICAgbWV0aG9kOiBpc0xpa2VkID8gXCJERUxFVEVcIiA6IFwiUFVUXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuICBcclxuICAgIHVwZGF0ZUF2YXRhcihhdmF0YXIpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgIGF2YXRhcjogYXZhdGFyLFxyXG4gICAgICAgIH0pLFxyXG4gICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gIH1cclxuXHJcbiAgXHJcblxyXG5cclxuIiwiICBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICAgICAgYWx0OiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICAgIGFsdDogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgICAgIGFsdDogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gICAgICBhbHQ6IFwiTGF0ZW1hclwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnIFwiLFxyXG4gICAgICBhbHQ6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZyAgXCIsXHJcbiAgICAgIGFsdDogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgfSxcclxuICBdO1xyXG5cclxuICAgIGNvbnN0IHZhbGlkYXRpb25TZXR0aW5ncyA9IHtcclxuICAgIC8vIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvclwiXHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdmFyaWFibGVzID0ge1xyXG4gICAgICBwcm9maWxlRWRpdEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpLFxyXG4gICAgICBwcm9maWxlRWRpdE1vZGFsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiKSxcclxuICAgICAgcHJvZmlsZVRpdGxlSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS10aXRsZS1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZUltYWdlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2ltYWdlXCIpLFxyXG4gICAgICBhZGROZXdNb2RhbENhcmQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtZm9ybVwiKSxcclxuICAgICAgY2FyZExpc3RFbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKSxcclxuICAgICAgYWRkTmV3Q2FyZEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19wbHVzLWJ1dHRvblwiKSxcclxuICAgICAgZGVsZXRlTW9kYWw6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVsZXRlLW1vZGFsXCIpLFxyXG4gICAgICBhdmF0YXJJbnB1dDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItdXJsLWlucHV0XCIpLFxyXG4gICAgICBhdmF0YXJNb2RhbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWxcIiksXHJcbiAgICAgIGF2YXRhck1vZGFsQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1tb2RhbC1idXR0b25cIiksXHJcbiAgICBcclxuICAgIH1cclxuXHJcblxyXG5leHBvcnQge2luaXRpYWxDYXJkcywgdmFsaWRhdGlvblNldHRpbmdzLCB2YXJpYWJsZXN9OyIsImltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhEZWxldGUgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRGVsZXRlLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGluaXRpYWxDYXJkcywgXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLCBcclxuICB2YXJpYWJsZXN9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuXHJcbi8vVmFyaWFibGVzXHJcblxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCJmMDBkYmU0ZC0zYmNmLTQwZTMtYTQ2Zi05ZTFlZDgyMDZiZDVcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcbiAgfVxyXG59KTsgXHJcblxyXG5jb25zdCBjYXJkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhcmlhYmxlcy5hZGROZXdNb2RhbENhcmQsIHZhbGlkYXRpb25TZXR0aW5ncyk7XHJcbmNhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YXJpYWJsZXMuYXZhdGFyTW9kYWwsIHZhbGlkYXRpb25TZXR0aW5ncyk7XHJcbmF2YXRhckZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgcHJvZmlsZUVkaXRGb3JtID0gdmFyaWFibGVzLnByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICBwcm9maWxlRWRpdEZvcm0sXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzXHJcbik7XHJcblxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhcIi5wcm9maWxlX190aXRsZVwiLCBcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiKTtcclxuXHJcbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcclxuICAgICAgY29uc3QgY2FyZExpc3RFbCA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xyXG4gICAgICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRMaXN0RWwpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIFwiLmNhcmRzX19saXN0XCJcclxuKTtcclxuXHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgdmFyaWFibGVzLnByb2ZpbGVFZGl0TW9kYWwsXHJcbiAgaGFuZGxlUHJvZmlsZUVkaXRGb3JtU3VibWl0XHJcbik7XHJcblxyXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNtb2RhbC1wcmV2aWV3XCIpO1xyXG5wb3B1cFdpdGhJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgdmFyaWFibGVzLmFkZE5ld01vZGFsQ2FyZCxcclxuICBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdFxyXG4pO1xyXG5cclxuY29uc3QgYXZhdGFyTW9kYWwgPSBuZXcgUG9wdXBXaXRoRm9ybSh2YXJpYWJsZXMuYXZhdGFyTW9kYWwsIGhhbmRsZUF2YXRhckZvcm1TdWJtaXQpO1xyXG5hdmF0YXJNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy9mdW5jdGlvbnNcclxuXHJcbi8vIGZ1bmN0aW9uIGNyZWF0ZUNhcmQoY2FyZERhdGEpIHtcclxuLy8gICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbi8vICAgICBjYXJkRGF0YSxcclxuLy8gICAgIFwiI2NhcmQtdGVtcGxhdGVcIixcclxuLy8gICAgIGhhbmRsZUltYWdlQ2xpY2ssXHJcbi8vICAgICBoYW5kbGVEZWxldGVDbGljayxcclxuLy8gICAgIGhhbmRsZUxpa2VDbGlja1xyXG4vLyAgICk7XHJcbi8vICAgc2VjdGlvbi5hZGRJdGVtKGNhcmQuZ2VuZXJhdGVDYXJkKCkpO1xyXG4vLyB9XHJcbmZ1bmN0aW9uIG9wZW5BdmF0YXJGb3JtKCkge1xyXG4gIGF2YXRhck1vZGFsLm9wZW4oKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2V0QnV0dG9uVGV4dChidXR0b24sIHRleHQpIHtcclxuICBidXR0b24udGV4dENvbnRlbnQgPSB0ZXh0O1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIHNldEJ1dHRvblRleHQodmFyaWFibGVzLmFkZE5ld0NhcmRCdXR0b24sIFwiU2F2aW5nLi4uXCIpO1xyXG4gIGFwaVxyXG4gICAgLmFkZE5ld0NhcmQoaW5wdXRWYWx1ZXMpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICAgIC8vIGNyZWF0ZSBhIG5ldyBjYXJkXHJcbiAgICAgIGNyZWF0ZUNhcmQocmVzKTtcclxuICAgICAgLy8gcmVuZGVyIGl0XHJcbiAgICAgIHZhcmlhYmxlcy5hZGROZXdNb2RhbENhcmQucmVzZXQoKTtcclxuICAgICAgLy8gdG9nZ2xlIGJ1dHRvbiBzdGF0ZVxyXG4gICAgICBjYXJkRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAvLyBjbG9zZSBtb2RhbFxyXG4gICAgICBhZGRDYXJkUG9wdXAuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgc2V0QnV0dG9uVGV4dCh2YXJpYWJsZXMuYWRkTmV3Q2FyZEJ1dHRvbiwgXCJTYXZlXCIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgZGVsZXRlTW9kYWwgPSBuZXcgUG9wdXBXaXRoRGVsZXRlKHZhcmlhYmxlcy5kZWxldGVNb2RhbCk7XHJcbiAgICBkZWxldGVNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xyXG4gIC8vIG9wZW4gdGhlIG1vZGFsXHJcbiAgZGVsZXRlTW9kYWwub3BlbigpO1xyXG4gIC8vIHNldCB0aGUgc3VibWl0IGFjdGlvblxyXG4gIGRlbGV0ZU1vZGFsLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZC5faWQpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICBkZWxldGVNb2RhbC5jbG9zZSgpO1xyXG4gICAgICAgIGNhcmQuX2hhbmRsZURlbGV0ZUNhcmQoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gIH0pO1xyXG59XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUF2YXRhckZvcm1TdWJtaXQoaW5wdXRWYWx1ZXMpIHtcclxuICBzZXRCdXR0b25UZXh0KHZhcmlhYmxlcy5hdmF0YXJNb2RhbEJ1dHRvbiwgXCJTYXZpbmcuLi5cIik7XHJcbiAgYXBpXHJcbiAgICAudXBkYXRlQXZhdGFyKGlucHV0VmFsdWVzLmxpbmspXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldEF2YXRhcihyZXMuYXZhdGFyKTtcclxuICAgICAgY29uc29sZS5sb2cocmVzKTtcclxuICAgICAgYXZhdGFyTW9kYWwuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgc2V0QnV0dG9uVGV4dCh2YXJpYWJsZXMuYXZhdGFyTW9kYWxCdXR0b24sIFwiU2F2ZVwiKTtcclxuICAgIH0pO1xyXG59XHJcbi8vIGZ1bmN0aW9uIGhhbmRsZUFkZENhcmRGb3JtU3VibWl0KGZvcm1EYXRhKSB7XHJcbi8vICAgY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoeyBuYW1lOiBmb3JtRGF0YS50aXRsZSwgbGluazogZm9ybURhdGEudXJsIH0pO1xyXG4vLyAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZCk7XHJcbi8vICAgYWRkQ2FyZFBvcHVwLmNsb3NlKCk7XHJcbi8vIH1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoY2FyZERhdGEpIHtcclxuICByZXR1cm4gbmV3IENhcmQoY2FyZERhdGEsIFwiI2NhcmQtdGVtcGxhdGVcIiwgKCkgPT4ge1xyXG4gICAgcG9wdXBXaXRoSW1hZ2Uub3BlbihjYXJkRGF0YS5saW5rLCBjYXJkRGF0YS5uYW1lKTtcclxuICB9KS5nZXRWaWV3KCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVFZGl0Rm9ybVN1Ym1pdChmb3JtRGF0YSkge1xyXG4gIHVzZXJJbmZvLnNldFVzZXJJbmZvKGZvcm1EYXRhLnRpdGxlLCBmb3JtRGF0YS5kZXNjcmlwdGlvbik7XHJcbiAgcHJvZmlsZUVkaXRGb3JtUG9wdXAuY2xvc2UoKTtcclxufVxyXG5cclxudmFyaWFibGVzLnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgb3BlbkF2YXRhckZvcm0oKTtcclxufSlcclxuXHJcbmNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcblxyXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5hcGkuZ2V0VXNlckluZm8oKS50aGVuKChVc2VySW5mbykgPT4ge1xyXG4gIHVzZXJJbmZvLmdldFVzZXJJbmZvKFVzZXJJbmZvLm5hbWUsIFVzZXJJbmZvLmFib3V0KTtcclxufSk7XHJcblxyXG5hcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigoY2FyZHMpID0+IHtcclxuICBjYXJkcy5mb3JFYWNoKChjYXJkKSA9PiB7XHJcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGdlbmVyYXRlQ2FyZChjYXJkKTtcclxuICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmxldCBzZWN0aW9uO1xyXG5cclxuYXBpXHJcbiAgLmdldEluaXRpYWxDYXJkcygpXHJcbiAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gICAgICB7XHJcbiAgICAgICAgaXRlbXM6IHJlcyxcclxuICAgICAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgICAgICBjcmVhdGVDYXJkKGNhcmREYXRhKTtcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgICBcImdhbGxlcnlfX2NhcmRzXCJcclxuICAgICk7XHJcbiAgICBzZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcbiAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG5cclxuYXBpXHJcbiAgLmdldFVzZXJJbmZvKClcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzLm5hbWUsIHJlcy5hYm91dCk7XHJcbiAgICB1c2VySW5mby5zZXRBdmF0YXIocmVzLmF2YXRhcik7XHJcbiAgfSlcclxuICAuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcblxyXG4vL0V2ZW50IExpc3RlbmVyc1xyXG5cclxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBjb25zdCBwcm9maWxlVXNlckluZm8gPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIHByb2ZpbGVUaXRsZUlucHV0LnZhbHVlID0gcHJvZmlsZVVzZXJJbmZvLnRpdGxlO1xyXG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gcHJvZmlsZVVzZXJJbmZvLmRlc2NyaXB0aW9uO1xyXG4gIHByb2ZpbGVFZGl0Rm9ybVBvcHVwLm9wZW4oKTtcclxufSk7XHJcblxyXG5hZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxucHJvZmlsZUVkaXRGb3JtUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcGx1cy1idXR0b25cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBjYXJkRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gIGFkZENhcmRQb3B1cC5vcGVuKCk7XHJcbn0pOyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiQ2FyZCIsIl9yZWYiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwibmFtZSIsImxpbmsiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX25hbWUiLCJfbGluayIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlSW1hZ2VDbGljayIsImtleSIsIl90aGlzIiwiX2NhcmRFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlTGlrZUljb24iLCJfaGFuZGxlRGVsZXRlQ2FyZCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInJlbW92ZSIsImNhcmREYXRhIiwiZG9jdW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiY2FyZEltYWdlRUwiLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsIl9zZXRFdmVudExpc3RlbmVycyIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtU2VsZWN0b3IiLCJ2YWxpZGF0aW9uU2V0dGluZ3MiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybUVsIiwiX2lucHV0RWxzIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdXR0b25zIiwiaW5wdXRFbCIsInZhbGlkaXR5IiwidmFsaWQiLCJfc2hvd0lucHV0RXJyb3IiLCJfaGlkZUlucHV0RXJyb3IiLCJpbnB1dCIsImVycm9yTWVzc2FnZUVsIiwiY29uY2F0IiwiaWQiLCJhZGQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImlucHV0TGlzdCIsImV2ZXJ5IiwiX2hhc0ludmFsaWRJbnB1dCIsImRpc2FibGVkIiwiZm9yRWFjaCIsImUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJwcmV2ZW50RGVmYXVsdCIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiZGF0YSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiY2xvc2UiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY0Nsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl90aGlzMiIsImV2dCIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoSW1hZ2UiLCJfUG9wdXAiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJjYWxsIiwiX3BvcHVwSW1hZ2UiLCJfcG9wdXBUaXRsZSIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX3BvcHVwRm9ybSIsInJlc2V0IiwiaW5wdXRWYWx1ZXMiLCJpbnB1dHMiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJVc2VySW5mbyIsInRpdGxlU2VsZWN0b3IiLCJkZXNjcmlwdGlvblNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfdGl0bGVFbCIsIl9kZXNjcmlwdGlvbkVsIiwiX2F2YXRhckVsIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImF2YXRhciIsIkFwaSIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImZldGNoIiwiaGVhZGVycyIsInRoZW4iLCJfY2hlY2tSZXNwb25zZSIsImFib3V0IiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXJkSWQiLCJhdmF0YXJVcmwiLCJpc0xpa2VkIiwidmFyaWFibGVzIiwicHJvZmlsZUVkaXRCdXR0b24iLCJwcm9maWxlRWRpdE1vZGFsIiwicHJvZmlsZVRpdGxlSW5wdXQiLCJwcm9maWxlRGVzY3JpcHRpb25JbnB1dCIsInByb2ZpbGVJbWFnZSIsImFkZE5ld01vZGFsQ2FyZCIsImNhcmRMaXN0RWwiLCJhZGROZXdDYXJkQnV0dG9uIiwiZGVsZXRlTW9kYWwiLCJhdmF0YXJJbnB1dCIsImF2YXRhck1vZGFsIiwiYXZhdGFyTW9kYWxCdXR0b24iLCJhcGkiLCJiYXNlVXJsIiwiY2FyZEZvcm1WYWxpZGF0b3IiLCJlbmFibGVWYWxpZGF0aW9uIiwiZWRpdEZvcm1WYWxpZGF0b3IiLCJ1c2VySW5mbyIsImNhcmRTZWN0aW9uIiwiY3JlYXRlQ2FyZCIsImFkZEl0ZW0iLCJwcm9maWxlRWRpdEZvcm1Qb3B1cCIsImZvcm1EYXRhIiwic2V0VXNlckluZm8iLCJwb3B1cFdpdGhJbWFnZSIsInNldEV2ZW50TGlzdGVuZXJzIiwiYWRkQ2FyZFBvcHVwIiwic2V0QnV0dG9uVGV4dCIsImFkZE5ld0NhcmQiLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnJvciIsImZpbmFsbHkiLCJQb3B1cFdpdGhEZWxldGUiLCJ1cGRhdGVBdmF0YXIiLCJzZXRBdmF0YXIiLCJidXR0b24iLCJ0ZXh0Iiwib3BlbiIsImdldFZpZXciLCJyZW5kZXJJdGVtcyIsImdldFVzZXJJbmZvIiwiZ2V0SW5pdGlhbENhcmRzIiwiY2FyZHMiLCJjYXJkIiwiY2FyZEVsZW1lbnQiLCJnZW5lcmF0ZUNhcmQiLCJwcm9maWxlVXNlckluZm8iXSwic291cmNlUm9vdCI6IiJ9