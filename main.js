!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,r(o.key),o)}}function r(e){var r=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===t(r)?r:String(r)}var n=function(){function t(e){var n,o,i,a=this,u=e.popupSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,i=function(t){"Escape"===t.key&&a.close()},(o=r(o="_handleEscClose"))in n?Object.defineProperty(n,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[o]=i,this._popupElement=document.querySelector(u)}var n,o;return n=t,(o=[{key:"open",value:function(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._popupElement.addEventListener("click",(function(e){(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&t.close()}))}}])&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function a(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===o(i)?i:String(i)),n)}var i}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=c(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},u.apply(this,arguments)}function l(t,e){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},l(t,e)}function c(t){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},c(t)}var s=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&l(t,e)}(p,t);var e,r,n,s,f=(n=p,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=c(n);if(s){var r=c(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===o(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function p(t,e){var r,n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,p),(r=f.call(this,{popupSelector:t}))._handleFormSubmit=e,r._popupForm=r._popupElement.querySelector(".modal__form"),r._inputEls=function(t){if(Array.isArray(t))return i(t)}(n=r._popupForm.querySelectorAll(".modal__input"))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,e){if(t){if("string"==typeof t)return i(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(t,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r}return e=p,(r=[{key:"close",value:function(){this._popupForm.reset(),u(c(p.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var t={};return this._inputEls.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var t=this;this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues())})),u(c(p.prototype),"setEventListeners",this).call(this)}},{key:"getForm",value:function(){return this._popupForm}}])&&a(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),p}(n);function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===f(o)?o:String(o)),n)}var o}function y(){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=m(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},y.apply(this,arguments)}function d(t,e){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},d(t,e)}function m(t){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},m(t)}var h=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&d(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=m(n);if(o){var r=m(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===f(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,{popupSelector:t}))._popupImage=e._popupElement.querySelector(".modal__image"),e._popupTitle=e._popupElement.querySelector(".modal__preview-title"),e}return e=a,(r=[{key:"open",value:function(t,e){this._popupImage.src=t,this._popupImage.alt="A photo of ".concat(e),this._popupTitle.textContent="".concat(e),y(m(a.prototype),"open",this).call(this)}}])&&p(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(n);function v(t){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},v(t)}function b(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==v(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==v(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===v(o)?o:String(o)),n)}var o}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=g(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},_.apply(this,arguments)}function S(t,e){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},S(t,e)}function g(t){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},g(t)}var E=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&S(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=g(n);if(o){var r=g(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===v(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,{popupSelector:t}))._formEl=e._popupElement.querySelector(".modal__form"),e}return e=a,(r=[{key:"setEventListeners",value:function(){var t=this;this._formEl.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit()})),_(g(a.prototype),"setEventListeners",this).call(this)}},{key:"setSubmitAction",value:function(t){this._handleFormSubmit=t}}])&&b(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(n);function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function k(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function j(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===w(o)?o:String(o)),n)}var o}var O=function(){function t(e,r){var n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=document.querySelector(r),this._submitButtons=this._formEl.querySelector(this._submitButtonSelector),this._inputEls=function(t){if(Array.isArray(t))return k(t)}(n=this._formEl.querySelectorAll(this._inputSelector))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(n)||function(t,e){if(t){if("string"==typeof t)return k(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?k(t,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var e,r;return e=t,(r=[{key:"_checkInputValidity",value:function(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}},{key:"_showInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}},{key:"_hasInvalidInput",value:function(t){return!t.every((function(t){return t.validity.valid}))}},{key:"toggleButtonState",value:function(){if(this._hasInvalidInput(this._inputEls))return this._submitButtons.classList.add(this._inactiveButtonClass),void(this._submitButtons.disabled=!0);this._submitButtons.classList.remove(this._inactiveButtonClass),this._submitButtons.disabled=!1}},{key:"_setEventListeners",value:function(){var t=this;this._inputEls.forEach((function(e){e.addEventListener("input",(function(r){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&j(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),P=O;function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function L(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==C(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==C(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===C(o)?o:String(o)),n)}var o}var I=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._titleEl=document.querySelector(e),this._descriptionEl=document.querySelector(r),this._avatarEl=document.querySelector(n)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{title:this._titleEl.textContent,description:this._descriptionEl.textContent}}},{key:"setUserInfo",value:function(t,e){this._titleEl.textContent=t,this._descriptionEl.textContent=e}},{key:"setAvatar",value:function(t){console.log(this._avatarEl),this._avatarEl.src=t}}])&&L(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function B(t){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},B(t)}function T(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==B(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===B(o)?o:String(o)),n)}var o}var R=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"renderItems",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&T(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function A(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,U(n.key),n)}}function M(t,e,r){return(e=U(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function U(t){var e=function(t,e){if("object"!==q(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===q(e)?e:String(e)}var D=function(){function t(e,r,n,o,i){var a=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),M(this,"handleLike",(function(){a._likeButton.classList.toggle("card__like-button_active")})),M(this,"handleDelete",(function(){a._element.remove(),a._element=null})),this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._handleImageClick=n,this._handleDeleteClick=o,this._handleLikeClick=i,this._cardSelector=r}var e,r;return e=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}},{key:"isLiked",value:function(){return this._isLiked}},{key:"updateLikeView",value:function(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}},{key:"_setEventListeners",value:function(){var t=this;this._cardTrash.addEventListener("click",(function(){t._handleDeleteClick(t)})),this._likeButton.addEventListener("click",(function(){t._handleLikeClick(t)})),this._cardImageEl.addEventListener("click",(function(){t._handleImageClick({name:t._name,link:t._link})}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._removeButton=this._element.querySelector(".card__button-remove"),this._cardImageEl=this._element.querySelector(".card__image"),this._setEventListeners(),this._cardImageEl.src=this._link,this._cardImageEl.alt="Photo of ".concat(this._name),this._element.querySelector(".card__label-title").textContent=this._name,this.updateLikeView(),this._element}}])&&A(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),x=D;function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function N(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==F(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===F(o)?o:String(o)),n)}var o}var V,J=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._headers=e.headers,this.baseUrl=e.baseUrl}var e,r;return e=t,(r=[{key:"_checkResponse",value:function(t){return t.ok?t.json():Promise.reject("Error ".concat(t.status))}},{key:"getInitialCards",value:function(){return fetch(this.baseUrl+"/cards",{headers:this._headers}).then(this._checkResponse)}},{key:"loadInfo",value:function(){return fetch(this.baseUrl+"/users/me",{method:"GET",cohort:"group-42",headers:this._headers}).then(this._checkResponse)}},{key:"editProfile",value:function(t,e){return fetch(this.baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:e})}).then(this._checkResponse)}},{key:"addNewCard",value:function(t){return fetch(this.baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:t.name,link:t.link})}).then(this._checkResponse)}},{key:"deleteCard",value:function(t){return fetch(this.baseUrl+"/cards/".concat(t),{method:"DELETE",headers:this._headers,body:JSON.stringify({_id:t})}).then(this._checkResponse)}},{key:"updateLike",value:function(t,e){return fetch(this.baseUrl+"/cards/".concat(t,"/likes"),{method:e?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"updateAvatar",value:function(t){return fetch(this.baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}}])&&N(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),H={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},$={profileEditButton:document.querySelector("#profile-edit-button"),profileEditModal:"#profile-edit-modal",profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),profileEditForm:document.querySelector("#edit-card-form"),profileAddForm:document.querySelector("#add-card-form"),profileImage:document.querySelector(".profile__image"),addNewModalCard:"#add-card-modal",cardListEl:document.querySelector(".cards__list"),profileAddButton:document.querySelector(".profile__plus-button"),deleteCard:"#delete-modal",avatarInput:document.querySelector("#avatar-url-input"),avatarModal:"#avatar-modal",avatarModalButton:document.querySelector("#avatar-modal-button"),addModalButton:document.querySelector(".modal__button"),editModalButton:document.querySelector("#edit-button")},z=new J({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-Type":"application/json"}});z.getInitialCards().then((function(t){(V=new R({items:t,renderer:function(t){W(t)}},"cards__list")).renderItems(),console.log(t)})).catch(console.error),z.loadInfo().then((function(t){console.log(t),ot.setUserInfo(t.name,t.about),ot.setAvatar(t.avatar)})).catch(console.error);var G=new h("#modal-preview");function K(t,e){t.textContent=e}function Q(t){G.open(t)}function W(t){var e=new x(t,"#card-template",Q,Y,Z);V.addItem(e.generateCard())}G.setEventListeners();var X=new E($.deleteCard);function Y(t){X.open(),X.setSubmitAction((function(){z.deleteCard(t._id).then((function(){X.close(),t.handleDelete()})).catch(console.error)}))}function Z(t){z.updateLike(t._id,t.isLiked()).then((function(){t.handleLike(),console.log(t)})).catch(console.error)}X.setEventListeners();var tt=new P(H,$.addNewModalCard);tt.enableValidation(),new P(H,$.profileEditModal).enableValidation(),new P(H,$.avatarModal).enableValidation();var et=new s($.addNewModalCard,(function(t){K($.addModalButton,"Saving..."),z.addNewCard(t).then((function(t){console.log(t),W(t),$.addNewModalCard.reset(),tt.toggleButtonState(),et.close()})).catch(console.error).finally((function(){K($.addModalButton,"Save")}))}));et.setEventListeners(),$.profileAddButton.addEventListener("click",(function(){et.open()}));var rt=new s($.profileEditModal,(function(t){K($.editModalButton,"Saving..."),z.editProfile(t.name,t.description).then((function(t){ot.setUserInfo(t.name,t.about),console.log(t),rt.close()})).catch(console.error).finally((function(){K($.editModalButton,"Save")}))}));rt.setEventListeners(),$.profileEditButton.addEventListener("click",(function(){var t;t=ot.getUserInfo(),$.nameInput.value=t.name,$.descriptionInput.value=t.description,rt.open()}));var nt=new s($.avatarModal,(function(t){K($.avatarModalButton,"Saving..."),z.updateAvatar(t.link).then((function(t){ot.setAvatar(t.avatar),console.log(t),nt.close()})).catch(console.error).finally((function(){K($.avatarModalButton,"Save")}))}));nt.setEventListeners(),$.profileImage.addEventListener("click",(function(){nt.open()}));var ot=new I(".profile__title",".profile__description",".profile__avatar")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQzNDLEdBQ0osSUExREFnQyxHQUFVWCxvQkFFVnJDLEVBQVVDLGtCQUFrQjNJLGlCQUFpQixTQUFTLFdBVHRELElBQ1E0TCxJQUFPeEIsR0FBU3lCLGNBQ3RCbkQsRUFBVW9ELFVBQVVqTSxNQUFRK0wsRUFBS25LLEtBQ2pDaUgsRUFBVXFELGlCQUFpQmxNLE1BQVErTCxFQUFLakgsWUFDeEMrRyxHQUFVZixNQU9aLElBSUEsSUFBTXBCLEdBQWMsSUFBSS9JLEVBQ3RCa0ksRUFBVWEsYUFhWixTQUFnQ2pJLEdBQzlCa0osRUFBYzlCLEVBQVVjLGtCQUFtQixhQUMzQ0csRUFDR3FDLGFBQWExSyxFQUFZUyxNQUN6QmtHLE1BQUssU0FBQ1AsR0FDTDBDLEdBQVNFLFVBQVU1QyxFQUFJOUMsUUFDdkJDLFFBQVFDLElBQUk0QyxHQUNaNkIsR0FBWS9KLE9BQ2QsSUFDQ3lLLE1BQU1wRixRQUFRcUYsT0FDZHVCLFNBQVEsV0FDUGpCLEVBQWM5QixFQUFVYyxrQkFBbUIsT0FDN0MsR0FDSixJQXZCQUQsR0FBWXdCLG9CQU1ackMsRUFBVU8sYUFBYWpKLGlCQUFpQixTQUFTLFdBSC9DdUosR0FBWW9CLE1BS2QsSUFtQkEsSUFBTVAsR0FBVyxJQUFJakcsRUFDbkIsa0JBQ0Esd0JBQ0EsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aERlbGV0ZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pICB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgfSBcclxuICAgIFxyXG4gICAgb3BlbigpIHtcclxuICAgICAgICAvL29wZW4gcG9wdXBzXHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIC8vY2xvc2UgcG9wdXBzXHJcbiAgICAgICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgX2hhbmRsZUVzY0Nsb3NlID0gKGUpID0+IHtcclxuICAgICAgICAvL2xpc3RlbnMgZm9yIGVzYyBidXR0b25cclxuICAgICAgICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICB9ICAgICAgXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgICAgIC8vc2V0cyBsaXN0ZW5lcnNcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+e1xyXG4gICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbFwiKSB8fFxyXG4gICAgICAgICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlXCIpXHJcbiAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxufVxyXG5cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IgKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgICAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIilcclxuICAgICAgICB0aGlzLl9pbnB1dEVscyA9IFsuLi50aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIildO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XHJcbiAgICAgICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICAgICAgaW5wdXRWYWx1ZXNbaW5wdXRFbC5uYW1lXSA9IGlucHV0RWwudmFsdWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGlucHV0VmFsdWVzO1xyXG4gICAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Rm9ybSgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9wb3B1cEZvcm07XHJcbiAgICB9XHJcblxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBUaXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19wcmV2aWV3LXRpdGxlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIG9wZW4oIGxpbmssIG5hbWUgKXtcclxuICAgICAgICB0aGlzLl9wb3B1cEltYWdlLnNyYyA9IGxpbms7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJbWFnZS5hbHQgPSBgQSBwaG90byBvZiAke25hbWV9YDtcclxuICAgICAgICB0aGlzLl9wb3B1cFRpdGxlLnRleHRDb250ZW50ID0gYCR7bmFtZX1gO1xyXG4gICAgICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRGVsZXRlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuICAgIHRoaXMuX2Zvcm1FbCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gIH1cclxuXHJcbiAgXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9mb3JtRWwuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQoKTtcclxuICAgIH0pO1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcblxyXG4gIHNldFN1Ym1pdEFjdGlvbihoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICB9XHJcbn0iLCJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKCB2YWxpZGF0aW9uU2V0dGluZ3MsIGZvcm1TZWxlY3RvciApIHtcclxuICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHZhbGlkYXRpb25TZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHZhbGlkYXRpb25TZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgICB0aGlzLl9lcnJvckNsYXNzID0gdmFsaWRhdGlvblNldHRpbmdzLmVycm9yQ2xhc3M7XHJcbiAgICAgIHRoaXMuX2Zvcm1FbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIGZvcm1TZWxlY3RvciApO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25zID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgICB0aGlzLl9pbnB1dEVscyA9IFsuLi50aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpIHtcclxuICAgICAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX3Nob3dJbnB1dEVycm9yKGlucHV0KSB7XHJcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xyXG4gICAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfaGlkZUlucHV0RXJyb3IoaW5wdXQpIHtcclxuICAgICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XHJcbiAgICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpIHtcclxuICAgICAgcmV0dXJuICFpbnB1dExpc3QuZXZlcnkoKGlucHV0RWwpID0+IGlucHV0RWwudmFsaWRpdHkudmFsaWQpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRFbHMpKSB7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucy5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbnMuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25zLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbnMuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBcclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIChlKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCk7XHJcbiAgICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgICAgdGhpcy5fZm9ybUVsLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG4gIH1cclxuICBleHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xyXG5cclxuIiwiZXhwb3J0IGNsYXNzIFVzZXJJbmZvIHtcclxuICAgIGNvbnN0cnVjdG9yKHRpdGxlU2VsZWN0b3IsIGRlc2NyaXB0aW9uU2VsZWN0b3IsIGF2YXRhckVsKSB7XHJcbiAgICAgICAgdGhpcy5fdGl0bGVFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGl0bGVTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb25FbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGVzY3JpcHRpb25TZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fYXZhdGFyRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhckVsKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRVc2VySW5mbygpIHtcclxuICAgICAgICBjb25zdCB1c2VySW5mbyA9IHtcclxuICAgICAgICAgICAgdGl0bGU6IHRoaXMuX3RpdGxlRWwudGV4dENvbnRlbnQsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLl9kZXNjcmlwdGlvbkVsLnRleHRDb250ZW50LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHVzZXJJbmZvO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJJbmZvKHRpdGxlLCBkZXNjcmlwdGlvbikge1xyXG4gICAgICAgIHRoaXMuX3RpdGxlRWwudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbkVsLnRleHRDb250ZW50ID0gZGVzY3JpcHRpb247XHJcbiAgICB9XHJcblxyXG4gICAgc2V0QXZhdGFyKGF2YXRhcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuX2F2YXRhckVsKTtcclxuICAgICAgICB0aGlzLl9hdmF0YXJFbC5zcmMgPSBhdmF0YXI7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVc2VySW5mbzsiLCJjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb247IiwiY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBkYXRhLFxyXG4gICAgY2FyZFNlbGVjdG9yLFxyXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcclxuICAgIGhhbmRsZURlbGV0ZUNsaWNrLFxyXG4gICAgaGFuZGxlTGlrZUNsaWNrXHJcbiAgKSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgIHRoaXMuX2lkID0gZGF0YS5faWQ7XHJcbiAgICB0aGlzLl9pc0xpa2VkID0gZGF0YS5pc0xpa2VkO1xyXG4gICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xyXG4gICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrID0gaGFuZGxlTGlrZUNsaWNrO1xyXG5cclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICB9XHJcblxyXG4gIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZC5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgaXNMaWtlZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9pc0xpa2VkO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlTGlrZSA9ICgpID0+IHtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICB9O1xyXG5cclxuICBoYW5kbGVEZWxldGUgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XHJcbiAgfTtcclxuXHJcbiAgdXBkYXRlTGlrZVZpZXcoKSB7XHJcbiAgICBpZiAodGhpcy5faXNMaWtlZCkge1xyXG4gICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9jYXJkVHJhc2guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sodGhpcyk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrKHRoaXMpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHsgbmFtZTogdGhpcy5fbmFtZSwgbGluazogdGhpcy5fbGluayB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fcmVtb3ZlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2J1dHRvbi1yZW1vdmVcIik7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsLnNyYyA9IHRoaXMuX2xpbms7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbC5hbHQgPSBgUGhvdG8gb2YgJHt0aGlzLl9uYW1lfWA7XHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGFiZWwtdGl0bGVcIikudGV4dENvbnRlbnQgPVxyXG4gICAgICB0aGlzLl9uYW1lO1xyXG5cclxuICAgIHRoaXMudXBkYXRlTGlrZVZpZXcoKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmQ7XHJcbiIsImltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhEZWxldGUgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRGVsZXRlLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgeyB2YWxpZGF0aW9uU2V0dGluZ3MsIHZhcmlhYmxlcyB9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuXHJcbi8vIEFQSVxyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IFwiZjAwZGJlNGQtM2JjZi00MGUzLWE0NmYtOWUxZWQ4MjA2YmQ1XCIsXHJcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICB9LFxyXG59KTtcclxuXHJcbi8vIFNFQ1RJT05cclxuXHJcbmxldCBzZWN0aW9uO1xyXG5cclxuYXBpXHJcbiAgLmdldEluaXRpYWxDYXJkcygpXHJcbiAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gICAgICB7XHJcbiAgICAgICAgaXRlbXM6IHJlcyxcclxuICAgICAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgICAgICBjcmVhdGVDYXJkKGNhcmREYXRhKTtcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgICBcImNhcmRzX19saXN0XCJcclxuICAgICk7XHJcbiAgICBzZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcbiAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG5cclxuYXBpXHJcbiAgLmxvYWRJbmZvKClcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzLm5hbWUsIHJlcy5hYm91dCk7XHJcbiAgICB1c2VySW5mby5zZXRBdmF0YXIocmVzLmF2YXRhcik7XHJcbiAgfSlcclxuICAuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcblxyXG4vLyBQT1BVUCBXSVRIIElNQUdFXHJcblxyXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcclxuICBcIiNtb2RhbC1wcmV2aWV3XCIpO1xyXG5wb3B1cFdpdGhJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy8gU0FWRSBCVVRUT04gVEVYVCBDSEFOR0UgRlVOQ1RJT04gRk9SIEZPUk1TXHJcblxyXG5mdW5jdGlvbiBzZXRCdXR0b25UZXh0KGJ1dHRvbiwgdGV4dCkge1xyXG4gIGJ1dHRvbi50ZXh0Q29udGVudCA9IHRleHQ7XHJcbn1cclxuXHJcbi8vIENBUkRcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUltYWdlQ2xpY2soY2FyZERhdGEpIHtcclxuICBwb3B1cFdpdGhJbWFnZS5vcGVuKGNhcmREYXRhKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChjYXJkRGF0YSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgIGNhcmREYXRhLFxyXG4gICAgXCIjY2FyZC10ZW1wbGF0ZVwiLFxyXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcclxuICAgIGhhbmRsZURlbGV0ZUNsaWNrLFxyXG4gICAgaGFuZGxlTGlrZUNsaWNrXHJcbiAgKTtcclxuICBzZWN0aW9uLmFkZEl0ZW0oY2FyZC5nZW5lcmF0ZUNhcmQoKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUFkZENhcmRTdWJtaXQoaW5wdXRWYWx1ZXMpIHtcclxuICBzZXRCdXR0b25UZXh0KHZhcmlhYmxlcy5hZGRNb2RhbEJ1dHRvbiwgXCJTYXZpbmcuLi5cIik7XHJcbiAgYXBpXHJcbiAgICAuYWRkTmV3Q2FyZChpbnB1dFZhbHVlcylcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgY29uc29sZS5sb2cocmVzKTtcclxuICAgICAgLy8gY3JlYXRlIGEgbmV3IGNhcmRcclxuICAgICAgY3JlYXRlQ2FyZChyZXMpO1xyXG4gICAgICAvLyByZW5kZXIgaXRcclxuICAgICAgdmFyaWFibGVzLmFkZE5ld01vZGFsQ2FyZC5yZXNldCgpO1xyXG4gICAgICAvLyB0b2dnbGUgYnV0dG9uIHN0YXRlXHJcbiAgICAgIGFkZEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgLy8gY2xvc2UgbW9kYWxcclxuICAgICAgYWRkUG9wdXAuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgc2V0QnV0dG9uVGV4dCh2YXJpYWJsZXMuYWRkTW9kYWxCdXR0b24sIFwiU2F2ZVwiKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG4vLyBIQU5ETEUgREVMRVRFIE1PREFMXHJcblxyXG5jb25zdCBkZWxldGVNb2RhbCA9IG5ldyBQb3B1cFdpdGhEZWxldGUoXHJcbiAgdmFyaWFibGVzLmRlbGV0ZUNhcmQpO1xyXG5kZWxldGVNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xyXG4gIC8vIG9wZW4gdGhlIG1vZGFsXHJcbiAgZGVsZXRlTW9kYWwub3BlbigpO1xyXG4gIC8vIHNldCB0aGUgc3VibWl0IGFjdGlvblxyXG4gIGRlbGV0ZU1vZGFsLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZC5faWQpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICBkZWxldGVNb2RhbC5jbG9zZSgpO1xyXG4gICAgICAgIGNhcmQuaGFuZGxlRGVsZXRlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuICB9KTtcclxufVxyXG5cclxuLy8gQ0FSRCBMSUtFXHJcblxyXG5mdW5jdGlvbiBoYW5kbGVMaWtlQ2xpY2soY2FyZCkge1xyXG4gIGFwaVxyXG4gICAgLnVwZGF0ZUxpa2UoY2FyZC5faWQsIGNhcmQuaXNMaWtlZCgpKVxyXG4gICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICBjYXJkLmhhbmRsZUxpa2UoKTtcclxuICAgICAgY29uc29sZS5sb2coY2FyZCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG59XHJcblxyXG4vLyBGT1JNIFZBTElEQVRPUlxyXG5cclxuY29uc3QgYWRkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxyXG4gIHZhbGlkYXRpb25TZXR0aW5ncyxcclxuICB2YXJpYWJsZXMuYWRkTmV3TW9kYWxDYXJkKTtcclxuYWRkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxyXG4gIHZhbGlkYXRpb25TZXR0aW5ncywgXHJcbiAgdmFyaWFibGVzLnByb2ZpbGVFZGl0TW9kYWwpO1xyXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5jb25zdCBhdmF0YXJGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLCBcclxuICB2YXJpYWJsZXMuYXZhdGFyTW9kYWwpO1xyXG5hdmF0YXJGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbi8vIEFERCBGT1JNXHJcblxyXG5jb25zdCBhZGRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIHZhcmlhYmxlcy5hZGROZXdNb2RhbENhcmQsIFxyXG4gIGhhbmRsZUFkZENhcmRTdWJtaXQpO1xyXG5cclxuZnVuY3Rpb24gb3BlbkFkZEZvcm0oKSB7XHJcbiAgYWRkUG9wdXAub3BlbigpO1xyXG59XHJcblxyXG5hZGRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxudmFyaWFibGVzLnByb2ZpbGVBZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcclxuICBcImNsaWNrXCIsICgpID0+IG9wZW5BZGRGb3JtKCkpO1xyXG5cclxuLy8gRURJVCBGT1JNXHJcblxyXG5jb25zdCBlZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICB2YXJpYWJsZXMucHJvZmlsZUVkaXRNb2RhbCxcclxuICBoYW5kbGVFZGl0Rm9ybVN1Ym1pdFxyXG4pO1xyXG5cclxuZnVuY3Rpb24gb3BlbkVkaXRGb3JtKCkge1xyXG4gIGNvbnN0IHVzZXIgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIHZhcmlhYmxlcy5uYW1lSW5wdXQudmFsdWUgPSB1c2VyLm5hbWU7XHJcbiAgdmFyaWFibGVzLmRlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSB1c2VyLmRlc2NyaXB0aW9uO1xyXG4gIGVkaXRQb3B1cC5vcGVuKCk7XHJcbn1cclxuXHJcbmVkaXRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxudmFyaWFibGVzLnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgb3BlbkVkaXRGb3JtKCk7XHJcbn0pO1xyXG5cclxuLy8gQVZBVEFSIEZPUk1cclxuXHJcbmNvbnN0IGF2YXRhck1vZGFsID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgdmFyaWFibGVzLmF2YXRhck1vZGFsLFxyXG4gIGhhbmRsZUF2YXRhckZvcm1TdWJtaXRcclxuKTtcclxuYXZhdGFyTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmZ1bmN0aW9uIG9wZW5BdmF0YXJGb3JtKCkge1xyXG4gIGF2YXRhck1vZGFsLm9wZW4oKTtcclxufVxyXG5cclxudmFyaWFibGVzLnByb2ZpbGVJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIG9wZW5BdmF0YXJGb3JtKCk7XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlQXZhdGFyRm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIHNldEJ1dHRvblRleHQodmFyaWFibGVzLmF2YXRhck1vZGFsQnV0dG9uLCBcIlNhdmluZy4uLlwiKTtcclxuICBhcGlcclxuICAgIC51cGRhdGVBdmF0YXIoaW5wdXRWYWx1ZXMubGluaylcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0QXZhdGFyKHJlcy5hdmF0YXIpO1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgICBhdmF0YXJNb2RhbC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBzZXRCdXR0b25UZXh0KHZhcmlhYmxlcy5hdmF0YXJNb2RhbEJ1dHRvbiwgXCJTYXZlXCIpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vIFVTRVIgSU5GT1xyXG5cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oXHJcbiAgXCIucHJvZmlsZV9fdGl0bGVcIixcclxuICBcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiLFxyXG4gIFwiLnByb2ZpbGVfX2F2YXRhclwiXHJcbik7XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVFZGl0Rm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIHNldEJ1dHRvblRleHQodmFyaWFibGVzLmVkaXRNb2RhbEJ1dHRvbiwgXCJTYXZpbmcuLi5cIik7XHJcbiAgYXBpXHJcbiAgICAuZWRpdFByb2ZpbGUoaW5wdXRWYWx1ZXMubmFtZSwgaW5wdXRWYWx1ZXMuZGVzY3JpcHRpb24pXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHJlcy5uYW1lLCByZXMuYWJvdXQpO1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgICBlZGl0UG9wdXAuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgc2V0QnV0dG9uVGV4dCh2YXJpYWJsZXMuZWRpdE1vZGFsQnV0dG9uLCBcIlNhdmVcIik7XHJcbiAgICB9KTtcclxufVxyXG5cclxuIiwiY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICAvLyBjb25zdHJ1Y3RvciBib2R5XHJcbiAgICB0aGlzLl9oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzO1xyXG4gICAgdGhpcy5iYXNlVXJsID0gb3B0aW9ucy5iYXNlVXJsO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvciAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgfVxyXG5cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2godGhpcy5iYXNlVXJsICsgXCIvY2FyZHNcIiwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIC8vIG90aGVyIG1ldGhvZHMgZm9yIHdvcmtpbmcgd2l0aCB0aGUgQVBJXHJcblxyXG4gIGxvYWRJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKHRoaXMuYmFzZVVybCArIFwiL3VzZXJzL21lXCIsIHtcclxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICBjb2hvcnQ6IFwiZ3JvdXAtNDJcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBlZGl0UHJvZmlsZShuYW1lLCBhYm91dCkge1xyXG4gICAgcmV0dXJuIGZldGNoKHRoaXMuYmFzZVVybCArIFwiL3VzZXJzL21lXCIsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBuYW1lLFxyXG4gICAgICAgIGFib3V0OiBhYm91dCxcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgLy8gcGFzcyBuYW1lIGFuZCBsaW5rIGFzIGFyZ3VtZW50XHJcbiAgYWRkTmV3Q2FyZChkYXRhKSB7XHJcbiAgICByZXR1cm4gZmV0Y2godGhpcy5iYXNlVXJsICsgXCIvY2FyZHNcIiwge1xyXG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICAgIGxpbms6IGRhdGEubGluayxcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaCh0aGlzLmJhc2VVcmwgKyBgL2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgX2lkOiBjYXJkSWQsXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZUxpa2UoY2FyZElkLCBpc0xpa2VkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2godGhpcy5iYXNlVXJsICsgYC9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogaXNMaWtlZCA/IFwiREVMRVRFXCIgOiBcIlBVVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZUF2YXRhcihhdmF0YXIpIHtcclxuICAgIHJldHVybiBmZXRjaCh0aGlzLmJhc2VVcmwgKyBcIi91c2Vycy9tZS9hdmF0YXJcIiwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogYXZhdGFyLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcGk7IiwiICBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICAgICAgYWx0OiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICAgIGFsdDogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgICAgIGFsdDogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gICAgICBhbHQ6IFwiTGF0ZW1hclwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnIFwiLFxyXG4gICAgICBhbHQ6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZyAgXCIsXHJcbiAgICAgIGFsdDogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgfSxcclxuICBdO1xyXG5cclxuICAgIGNvbnN0IHZhbGlkYXRpb25TZXR0aW5ncyA9IHtcclxuICAgIC8vIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvclwiXHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdmFyaWFibGVzID0ge1xyXG4gICAgICBwcm9maWxlRWRpdEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpLFxyXG4gICAgICBwcm9maWxlRWRpdE1vZGFsOiBcIiNwcm9maWxlLWVkaXQtbW9kYWxcIixcclxuICAgICAgcHJvZmlsZVRpdGxlSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS10aXRsZS1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZUVkaXRGb3JtOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtY2FyZC1mb3JtXCIpLFxyXG4gICAgICBwcm9maWxlQWRkRm9ybTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1mb3JtXCIpLFxyXG4gICAgICBwcm9maWxlSW1hZ2U6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2VcIiksXHJcbiAgICAgIGFkZE5ld01vZGFsQ2FyZDogXCIjYWRkLWNhcmQtbW9kYWxcIixcclxuICAgICAgY2FyZExpc3RFbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKSxcclxuICAgICAgcHJvZmlsZUFkZEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19wbHVzLWJ1dHRvblwiKSxcclxuICAgICAgZGVsZXRlQ2FyZDogXCIjZGVsZXRlLW1vZGFsXCIsXHJcbiAgICAgIGF2YXRhcklucHV0OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci11cmwtaW5wdXRcIiksXHJcbiAgICAgIGF2YXRhck1vZGFsOiBcIiNhdmF0YXItbW9kYWxcIixcclxuICAgICAgYXZhdGFyTW9kYWxCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLW1vZGFsLWJ1dHRvblwiKSxcclxuICAgICAgYWRkTW9kYWxCdXR0b246IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKSxcclxuICAgICAgZWRpdE1vZGFsQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtYnV0dG9uXCIpLFxyXG4gICAgfVxyXG5cclxuXHJcbmV4cG9ydCB7aW5pdGlhbENhcmRzLCB2YWxpZGF0aW9uU2V0dGluZ3MsIHZhcmlhYmxlc307XHJcblxyXG4iXSwibmFtZXMiOlsiUG9wdXAiLCJfcmVmIiwiX3RoaXMiLCJwb3B1cFNlbGVjdG9yIiwiX2NsYXNzQ2FsbENoZWNrIiwiZSIsImtleSIsImNsb3NlIiwidGhpcyIsIl9wb3B1cEVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ2YWx1ZSIsImNsYXNzTGlzdCIsImFkZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiX3RoaXMyIiwiZXZ0IiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiaGFuZGxlRm9ybVN1Ym1pdCIsImNhbGwiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9wb3B1cEZvcm0iLCJfaW5wdXRFbHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVzZXQiLCJfZ2V0IiwiX2dldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIiwiaW5wdXRWYWx1ZXMiLCJmb3JFYWNoIiwiaW5wdXRFbCIsIm5hbWUiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsIlBvcHVwV2l0aEltYWdlIiwiX3BvcHVwSW1hZ2UiLCJfcG9wdXBUaXRsZSIsImxpbmsiLCJzcmMiLCJhbHQiLCJjb25jYXQiLCJ0ZXh0Q29udGVudCIsIlBvcHVwV2l0aERlbGV0ZSIsIl9mb3JtRWwiLCJGb3JtVmFsaWRhdG9yIiwidmFsaWRhdGlvblNldHRpbmdzIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX3N1Ym1pdEJ1dHRvbnMiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX3Nob3dJbnB1dEVycm9yIiwiX2hpZGVJbnB1dEVycm9yIiwiaW5wdXQiLCJlcnJvck1lc3NhZ2VFbCIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJpbnB1dExpc3QiLCJldmVyeSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlZCIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIlVzZXJJbmZvIiwidGl0bGVTZWxlY3RvciIsImRlc2NyaXB0aW9uU2VsZWN0b3IiLCJhdmF0YXJFbCIsIl90aXRsZUVsIiwiX2Rlc2NyaXB0aW9uRWwiLCJfYXZhdGFyRWwiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiYXZhdGFyIiwiY29uc29sZSIsImxvZyIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiQ2FyZCIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJfZGVmaW5lUHJvcGVydHkiLCJfbGlrZUJ1dHRvbiIsInRvZ2dsZSIsIl9lbGVtZW50IiwiX25hbWUiLCJfbGluayIsIl9pZCIsIl9pc0xpa2VkIiwiaXNMaWtlZCIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9jYXJkU2VsZWN0b3IiLCJjb250ZW50IiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJjbG9uZU5vZGUiLCJfY2FyZFRyYXNoIiwiX2NhcmRJbWFnZUVsIiwiX2dldFRlbXBsYXRlIiwiX3JlbW92ZUJ1dHRvbiIsInVwZGF0ZUxpa2VWaWV3Iiwic2VjdGlvbiIsIkFwaSIsIm9wdGlvbnMiLCJfaGVhZGVycyIsImhlYWRlcnMiLCJiYXNlVXJsIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImZldGNoIiwidGhlbiIsIl9jaGVja1Jlc3BvbnNlIiwibWV0aG9kIiwiY29ob3J0IiwiYWJvdXQiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJZCIsInZhcmlhYmxlcyIsInByb2ZpbGVFZGl0QnV0dG9uIiwicHJvZmlsZUVkaXRNb2RhbCIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlRWRpdEZvcm0iLCJwcm9maWxlQWRkRm9ybSIsInByb2ZpbGVJbWFnZSIsImFkZE5ld01vZGFsQ2FyZCIsImNhcmRMaXN0RWwiLCJwcm9maWxlQWRkQnV0dG9uIiwiZGVsZXRlQ2FyZCIsImF2YXRhcklucHV0IiwiYXZhdGFyTW9kYWwiLCJhdmF0YXJNb2RhbEJ1dHRvbiIsImFkZE1vZGFsQnV0dG9uIiwiZWRpdE1vZGFsQnV0dG9uIiwiYXBpIiwiYXV0aG9yaXphdGlvbiIsImdldEluaXRpYWxDYXJkcyIsImNhcmREYXRhIiwiY3JlYXRlQ2FyZCIsInJlbmRlckl0ZW1zIiwiY2F0Y2giLCJlcnJvciIsImxvYWRJbmZvIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsInNldEF2YXRhciIsInBvcHVwV2l0aEltYWdlIiwic2V0QnV0dG9uVGV4dCIsImJ1dHRvbiIsInRleHQiLCJvcGVuIiwiY2FyZCIsImFkZEl0ZW0iLCJnZW5lcmF0ZUNhcmQiLCJzZXRFdmVudExpc3RlbmVycyIsImRlbGV0ZU1vZGFsIiwic2V0U3VibWl0QWN0aW9uIiwiaGFuZGxlRGVsZXRlIiwidXBkYXRlTGlrZSIsImhhbmRsZUxpa2UiLCJhZGRGb3JtVmFsaWRhdG9yIiwiZW5hYmxlVmFsaWRhdGlvbiIsImFkZFBvcHVwIiwiYWRkTmV3Q2FyZCIsImZpbmFsbHkiLCJlZGl0UG9wdXAiLCJlZGl0UHJvZmlsZSIsInVzZXIiLCJnZXRVc2VySW5mbyIsIm5hbWVJbnB1dCIsImRlc2NyaXB0aW9uSW5wdXQiLCJ1cGRhdGVBdmF0YXIiXSwic291cmNlUm9vdCI6IiJ9