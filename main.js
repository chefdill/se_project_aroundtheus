!function(){"use strict";var t={};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function r(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,r){if("object"!==e(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}(function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})})(t);var n=function(){function t(e,r,n){var o=e.name,i=e.link;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=o,this._link=i,this._cardSelector=r,this._handleImageClick=n}var e,n;return e=t,(n=[{key:"_setEventListeners",value:function(){var t=this;this._cardElement.querySelector(".card__like-button").addEventListener("click",(function(){t._handleLikeIcon()})),this._cardElement.querySelector(".card__button-remove").addEventListener("click",(function(){t._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(function(){t._handleImageClick({name:t._name,link:t._link})}))}},{key:"_handleLikeIcon",value:function(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}},{key:"_handleDeleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"getView",value:function(){var t={link:this._link,name:this._name};this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);var e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._cardElement.querySelector(".card__label-title").textContent=t.name,this._setEventListeners(),this._cardElement}}])&&r(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function a(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===o(i)?i:String(i)),n)}var i}var u=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formEl=e,this._formSelector=r.formSelector,this._inputSelector=r.inputSelector,this._submitButtonSelector=r.submitButtonSelector,this._inactiveButtonClass=r.inactiveButtonClass,this._inputErrorClass=r.inputErrorClass,this._errorClass=r.errorClass}var e,r;return e=t,(r=[{key:"_checkInputValidity",value:function(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}},{key:"_showInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formEl.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}},{key:"_setEventListeners",value:function(){var t,e=this;this._inputEls=function(t){if(Array.isArray(t))return i(t)}(t=this._formEl.querySelectorAll(this._inputSelector))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return i(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._submitButtons=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((function(t){t.addEventListener("input",(function(r){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"_hasInvalidInput",value:function(t){return!t.every((function(t){return t.validity.valid}))}},{key:"toggleButtonState",value:function(){if(this._hasInvalidInput(this._inputEls))return this._submitButtons.classList.add(this._inactiveButtonClass),void(this._submitButtons.disabled=!0);this._submitButtons.classList.remove(this._inactiveButtonClass),this._submitButtons.disabled=!1}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&a(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function c(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==l(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==l(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===l(o)?o:String(o)),n)}var o}var s=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"renderItems",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&c(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,y(n.key),n)}}function y(t){var e=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===f(e)?e:String(e)}var d=function(){function t(e){var r,n,o,i=this,a=e.popupSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,o=function(t){"Escape"===t.key&&i.close()},(n=y(n="_handleEscClose"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._popupElement=document.querySelector(a)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._popupElement.addEventListener("click",(function(e){(e.target===t._popupElement||e.target.classList.contains("modal__close"))&&t.close()}))}}])&&p(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function v(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===m(o)?o:String(o)),n)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},b.apply(this,arguments)}function h(t,e){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},h(t,e)}function _(t){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},_(t)}var S=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&h(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=_(n);if(o){var r=_(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===m(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,{popupSelector:t}))._popupImage=e._popupElement.querySelector(".modal__image"),e._popupTitle=e._popupElement.querySelector(".modal__preview-title"),e}return e=a,(r=[{key:"open",value:function(t,e){this._popupImage.src=t,this._popupImage.alt=e,this._popupTitle.textContent=e,b(_(a.prototype),"open",this).call(this)}}])&&v(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(d);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function w(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},E.apply(this,arguments)}function k(t,e){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},k(t,e)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&k(t,e)}(a,t);var e,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=j(n);if(o){var r=j(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t,e){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,{popupSelector:t}))._handleFormSubmit=e,r._popupForm=r._popupElement.querySelector(".modal__form"),r}return e=a,(r=[{key:"close",value:function(){this._popupForm.reset(),E(j(a.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var t=this._popupForm.querySelectorAll(".modal__input"),e={};return t.forEach((function(t){return e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var t=this;this._popupForm.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues())})),E(j(a.prototype),"setEventListeners",this).call(this)}},{key:"getForm",value:function(){return this._popupForm}}])&&w(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(d);function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function C(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===O(o)?o:String(o)),n)}var o}var I=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._titleEl=document.querySelector(e),this._descriptionEl=document.querySelector(r)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{title:this._titleEl.textContent,description:this._descriptionEl.textContent}}},{key:"setUserInfo",value:function(t,e){this._titleEl.textContent=t,this._descriptionEl.textContent=e}}])&&C(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function q(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==L(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==L(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===L(o)?o:String(o)),n)}var o}var B=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl="https://around-api.en.tripleten-services.com/v1",this._headers={authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-type":"application/json"}}var e,r;return e=t,(r=[{key:"_getResponse",value:function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"getEditProfile",value:function(t,e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:e})}).then(this._checkResponse)}},{key:"getNewCard",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:e})})}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"changeAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatarUrl:t})}).then(this._checkResponse)}}])&&q(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),T={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},R={profileEditButton:document.querySelector("#profile-edit-button"),profileEditModal:document.querySelector("#profile-edit-modal"),profileTitleInput:document.querySelector("#profile-title-input"),profileDescriptionInput:document.querySelector("#profile-description-input"),profileImage:document.querySelector(".profile__image"),addNewModalCard:document.querySelector("#add-card-form"),cardListEl:document.querySelector(".cards__list"),addNewCardButton:document.querySelector(".profile__plus-button"),deleteModal:document.querySelector("#delete-modal"),avatarInput:document.querySelector("#avatar-url-input"),avatarModal:document.querySelector("#avatar-modal"),avatarModalButton:document.querySelector("#avatar-modal-button")},U=new B({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f00dbe4d-3bcf-40e3-a46f-9e1ed8206bd5","Content-Type":"application/json"}}),M=new u(R.addNewModalCard,T);M.enableValidation();var N=new u(R.profileEditModal.querySelector(".modal__form"),T),x=new I(".profile__title",".profile__description"),A=new s({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"Yosemite Valley"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"Lake Louise"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg ",alt:"Vanoise National Park"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg  ",alt:"Lago di Braies"}],renderer:function(t){var e=J(t);A.addItem(e)}},".cards__list"),V=new P("#profile-edit-modal",(function(t){x.setUserInfo(t.title,t.description),V.close()})),D=new S("#modal-preview");D.setEventListeners();var z=new P("#add-card-modal",(function(e){F(R.addNewCardButton,"Saving..."),U.addNewCard(e).then((function(t){console.log(t),J(t),R.addNewModalCard.reset(),M.toggleButtonState(),z.close()})).catch(console.error).finally((function(){F(R.addNewCardButton,"Save")})),new t.default(R.deleteModal).setEventListeners()}));function F(t,e){t.textContent=e}function J(t){return new n(t,"#card-template",(function(){D.open(t.link,t.name)})).getView()}A.renderItems(),N.enableValidation(),U.getUserInfo().then((function(t){x.getUserInfo(t.name,t.about)})),U.getInitialCards().then((function(t){t.forEach((function(t){var e=generateCard(t);A.addItem(e)}))})),U.getInitialCards().then((function(t){new s({items:t,renderer:function(t){J(t)}},"gallery__cards").renderItems(),console.log(t)})).catch(console.error),U.getUserInfo().then((function(t){console.log(t),x.setUserInfo(t.name,t.about),x.setAvatar(t.avatar)})).catch(console.error),profileEditButton.addEventListener("click",(function(){var t=x.getUserInfo();profileTitleInput.value=t.title,profileDescriptionInput.value=t.description,V.open()})),z.setEventListeners(),V.setEventListeners(),document.querySelector(".profile__plus-button").addEventListener("click",(function(){M.toggleButtonState(),z.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Y2svYm9vdHN0cmFwIiwid2VicGFjazovL3ByYWN0aWN1bS93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gICAgY29uc3RydWN0b3IoeyBuYW1lLCBsaW5rIH0sIGNhcmRTZWxlY3RvciwgaGFuZGxlSW1hZ2VDbGljaykge1xyXG4gICAgICB0aGlzLl9uYW1lID0gbmFtZTtcclxuICAgICAgdGhpcy5fbGluayA9IGxpbms7XHJcbiAgICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayA9IGhhbmRsZUltYWdlQ2xpY2s7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIilcclxuICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICAgIHRoaXMuX2hhbmRsZUxpa2VJY29uKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgXHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fYnV0dG9uLXJlbW92ZVwiKVxyXG4gICAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCgpO1xyXG4gICAgICAgIH0pO1xyXG4gIFxyXG4gICAgICAvLyBVcGRhdGUgdGhlIGV2ZW50IGxpc3RlbmVyIGZvciBpbWFnZSBjbGlja1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpXHJcbiAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHsgbmFtZTogdGhpcy5fbmFtZSwgbGluazogdGhpcy5fbGluayB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICBcclxuICAgIF9oYW5kbGVMaWtlSWNvbigpIHtcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxyXG4gICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2hhbmRsZURlbGV0ZUNhcmQoKSB7XHJcbiAgICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBnZXRWaWV3KCkge1xyXG4gICAgICBjb25zdCBjYXJkRGF0YSA9IHsgbGluazogdGhpcy5fbGluaywgbmFtZTogdGhpcy5fbmFtZSB9O1xyXG4gIFxyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudCA9IGRvY3VtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxyXG4gICAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgXHJcbiAgICAgIGNvbnN0IGNhcmRJbWFnZUVMID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgICAgY2FyZEltYWdlRUwuc3JjID0gdGhpcy5fbGluaztcclxuICAgICAgY2FyZEltYWdlRUwuYWx0ID0gdGhpcy5fbmFtZTtcclxuICBcclxuICAgICAgY29uc3QgY2FyZFRpdGxlRUwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xhYmVsLXRpdGxlXCIpO1xyXG4gICAgICBjYXJkVGl0bGVFTC50ZXh0Q29udGVudCA9IGNhcmREYXRhLm5hbWU7XHJcbiAgXHJcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgXHJcbiAgICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICAgIH1cclxuICB9IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcihmb3JtRWwsIHZhbGlkYXRpb25TZXR0aW5ncykge1xyXG4gICAgICB0aGlzLl9mb3JtRWwgPSBmb3JtRWw7XHJcbiAgICAgIHRoaXMuX2Zvcm1TZWxlY3RvciA9IHZhbGlkYXRpb25TZXR0aW5ncy5mb3JtU2VsZWN0b3I7XHJcbiAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSB2YWxpZGF0aW9uU2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSB2YWxpZGF0aW9uU2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gdmFsaWRhdGlvblNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgICAgdGhpcy5fZXJyb3JDbGFzcyA9IHZhbGlkYXRpb25TZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKSB7XHJcbiAgICAgIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgIH1cclxuICBcclxuICAgIF9zaG93SW5wdXRFcnJvcihpbnB1dCkge1xyXG4gICAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IGlucHV0LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2hpZGVJbnB1dEVycm9yKGlucHV0KSB7XHJcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xyXG4gICAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgIH1cclxuICBcclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgdGhpcy5faW5wdXRFbHMgPSBbLi4udGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcildO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25zID0gdGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3JcclxuICAgICAgKTtcclxuICBcclxuICAgICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIChlKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCk7XHJcbiAgICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpIHtcclxuICAgICAgcmV0dXJuICFpbnB1dExpc3QuZXZlcnkoKGlucHV0RWwpID0+IGlucHV0RWwudmFsaWRpdHkudmFsaWQpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRFbHMpKSB7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9ucy5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbnMuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25zLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbnMuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIH1cclxuICBcclxuICAgIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcbiAgfVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCgoZGF0YSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihkYXRhKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkgIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB9IFxyXG4gICAgXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIC8vb3BlbiBwb3B1cHNcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgLy9jbG9zZSBwb3B1cHNcclxuICAgICAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICBfaGFuZGxlRXNjQ2xvc2UgPSAoZSkgPT4ge1xyXG4gICAgICAgIC8vbGlzdGVucyBmb3IgZXNjIGJ1dHRvblxyXG4gICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgIH0gICAgICBcclxuICAgICAgICB9O1xyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgLy9zZXRzIGxpc3RlbmVyc1xyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgICAgICBpZihcclxuICAgICAgICAgICAgICAgIGV2dC50YXJnZXQgPT09IHRoaXMuX3BvcHVwRWxlbWVudCB8fCBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX19jbG9zZVwiKVxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxufVxyXG5cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcclxuICAgICAgICB0aGlzLl9wb3B1cFRpdGxlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3ByZXZpZXctdGl0bGVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbiggbGluaywgbmFtZSApe1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2Uuc3JjID0gbGluaztcclxuICAgICAgICB0aGlzLl9wb3B1cEltYWdlLmFsdCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBUaXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gICAgY29uc3RydWN0b3IgKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgICAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIilcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcclxuICAgICAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgICAgICBjb25zdCBpbnB1dHMgPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIik7XHJcbiAgICAgICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgICAgICBpbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IFxyXG4gICAgICAgICAgICAoaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZSkpO1xyXG4gICAgICAgICAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Rm9ybSgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9wb3B1cEZvcm07XHJcbiAgICB9XHJcblxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZVNlbGVjdG9yLCBkZXNjcmlwdGlvblNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5fdGl0bGVFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGl0bGVTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb25FbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZGVzY3JpcHRpb25TZWxlY3Rvcik7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICAgICAgY29uc3QgdXNlckluZm8gPSB7XHJcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLl90aXRsZUVsLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5fZGVzY3JpcHRpb25FbC50ZXh0Q29udGVudCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiB1c2VySW5mbztcclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VySW5mbyh0aXRsZSwgZGVzY3JpcHRpb24pIHtcclxuICAgICAgICB0aGlzLl90aXRsZUVsLnRleHRDb250ZW50ID0gdGl0bGU7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb25FbC50ZXh0Q29udGVudCA9IGRlc2NyaXB0aW9uO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlckluZm87IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuX2Jhc2VVcmwgPSBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCI7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0ge1xyXG4gICAgICBhdXRob3JpemF0aW9uOiBcImYwMGRiZTRkLTNiY2YtNDBlMy1hNDZmLTllMWVkODIwNmJkNVwiLFxyXG4gICAgICBcIkNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBfZ2V0UmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgLy8gMSBMT0FESU5HIFVTRVIgSU5GT1JNQVRJT04gSU5UTyBUSEUgU0VSVkVSXHJcbiAgLy8gR0VUIGh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL3VzZXJzL21lIFxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIC8vIDIgTE9BRElORyBDQVJEUyBGUk9NIFRIRSBTRVJWRVJcclxuICAvLyBHRVQgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMgXHJcbiAgLy8gaW5pdGlhbCByZXNwb25zZSB3aWxsIGJlIGFuIGVtcHR5IEpTT04gYXJyYXkgW11cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgLy8gMyAgRURJVElORyBUSEUgUFJPRklMRSBcclxuICAvLyAgUEFUQ0ggaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvdXNlcnMvbWUgXHJcbiAgLy8gQWRkIENvbnRlbnQtdHlwZSBhZnRlciB0aGUgYXV0aG9yaXphdGlvbiB0b2tlbiBcclxuICAvLyBib2R5OiBKU09OLnN0cmluZ2lmeSAoe05BTUUgYW5kIEFCT1VUfSkgXHJcbiAgZ2V0RWRpdFByb2ZpbGUobmFtZSwgYWJvdXQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lLCBcclxuICAgICAgICBhYm91dDogYWJvdXRcclxuICAgICAgfSlcclxuICAgICAgXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuICAvLyA0IEFERElORyBBIE5FVyBDQVJEXHJcbiAgLy8gUE9TVCBodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MS9jYXJkc1xyXG4gIC8vIGJvZHk6IEpTT04uc3RyaW5naWZ5ICh7TkFNRSBhbmQgTElOS30pXHJcbiAgZ2V0TmV3Q2FyZChuYW1lLCBsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5ICh7XHJcbiAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICBsaW5rOiBsaW5rXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG5cclxufVxyXG5cclxuLy8gNSAmIDYgQ1JFQVRJTkcgQSBORVcgUE9QVVAgRk9SIERFTEVUSU5HIEEgQ0FSRFxyXG4gIC8vIHNlbmQgREVMRVRFIHJlcXVlc3QgXHJcbiAgICAvLyBERUxFVEUgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMvY2FyZElkIFxyXG4gICAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuXHJcbiAgICBjaGFuZ2VBdmF0YXIoYXZhdGFyVXJsKSB7XHJcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGF2YXRhclVybDogYXZhdGFyVXJsIH0pLFxyXG4gICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG4gIH1cclxuICAgIC8vIFRoZSBjYXJkSWQgaW4gdGhlIFVSTCBzaG91bGQgYmUgcmVwbGFjZWQgd2l0aCB0aGUgX2lkIHBhcmFtZXRlciBvZiB0aGUgY2FyZCB0byBiZSBkZWxldGVkLiBcclxuICAgIC8vIFRoZSBfaWQgb2YgZWFjaCBjYXJkIGlzIGZvdW5kIGluIGl0cyByZXNwZWN0aXZlIEpTT046XHJcbiAgICAvLyB7XHJcbiAgICAvLyAgIFwiaXNMaWtlZFwiOiBmYWxzZSxcclxuICAgIC8vICAgXCJfaWRcIjogXCI1ZDFmMDYxMWQzMjFlYjRiZGNkNzA3ZGRcIiwgLy8g4oCUIGhlcmUgaXQgaXNcclxuICAgIC8vICAgLy8gLi4ub3RoZXIgY2FyZCBkYXRhXHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gUmVxdWVzdCB0byBkZWxldGluZyBjYXJkIGxvb2tzIGxpa2UgdGhpc1xyXG4gICAgLy9ERUxFVEUgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMvNWQxZjA2MTFkMzIxZWI0YmRjZDcwN2RkXHJcbiAgXHJcblxyXG5cclxuIiwiICBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICAgICAgYWx0OiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgICAgIGFsdDogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgICAgIGFsdDogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gICAgICBhbHQ6IFwiTGF0ZW1hclwiLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnIFwiLFxyXG4gICAgICBhbHQ6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZyAgXCIsXHJcbiAgICAgIGFsdDogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgfSxcclxuICBdO1xyXG5cclxuICAgIGNvbnN0IHZhbGlkYXRpb25TZXR0aW5ncyA9IHtcclxuICAgIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcIm1vZGFsX19lcnJvclwiXHJcbiAgfTtcclxuXHJcbiAgY29uc3QgdmFyaWFibGVzID0ge1xyXG4gICAgICBwcm9maWxlRWRpdEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtYnV0dG9uXCIpLFxyXG4gICAgICBwcm9maWxlRWRpdE1vZGFsOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiKSxcclxuICAgICAgcHJvZmlsZVRpdGxlSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS10aXRsZS1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiKSxcclxuICAgICAgcHJvZmlsZUltYWdlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2ltYWdlXCIpLFxyXG4gICAgICBhZGROZXdNb2RhbENhcmQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtZm9ybVwiKSxcclxuICAgICAgY2FyZExpc3RFbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKSxcclxuICAgICAgYWRkTmV3Q2FyZEJ1dHRvbjogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19wbHVzLWJ1dHRvblwiKSxcclxuICAgICAgZGVsZXRlTW9kYWw6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVsZXRlLW1vZGFsXCIpLFxyXG4gICAgICBhdmF0YXJJbnB1dDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItdXJsLWlucHV0XCIpLFxyXG4gICAgICBhdmF0YXJNb2RhbDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWxcIiksXHJcbiAgICAgIGF2YXRhck1vZGFsQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1tb2RhbC1idXR0b25cIiksXHJcbiAgICBcclxuICAgIH1cclxuXHJcblxyXG5leHBvcnQge2luaXRpYWxDYXJkcywgdmFsaWRhdGlvblNldHRpbmdzLCB2YXJpYWJsZXN9OyIsImltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhEZWxldGUgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRGVsZXRlLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGluaXRpYWxDYXJkcywgXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLCBcclxuICB2YXJpYWJsZXN9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuXHJcbi8vVmFyaWFibGVzXHJcblxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCJmMDBkYmU0ZC0zYmNmLTQwZTMtYTQ2Zi05ZTFlZDgyMDZiZDVcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcbiAgfVxyXG59KTsgXHJcblxyXG5jb25zdCBjYXJkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhcmlhYmxlcy5hZGROZXdNb2RhbENhcmQsIHZhbGlkYXRpb25TZXR0aW5ncyk7XHJcbmNhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybSA9IHZhcmlhYmxlcy5wcm9maWxlRWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgcHJvZmlsZUVkaXRGb3JtLFxyXG4gIHZhbGlkYXRpb25TZXR0aW5nc1xyXG4pO1xyXG5cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oXCIucHJvZmlsZV9fdGl0bGVcIiwgXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XHJcblxyXG5jb25zdCBjYXJkU2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gIHtcclxuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXHJcbiAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmRMaXN0RWwgPSBjcmVhdGVDYXJkKGNhcmREYXRhKTtcclxuICAgICAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkTGlzdEVsKTtcclxuICAgIH0sXHJcbiAgfSxcclxuICBcIi5jYXJkc19fbGlzdFwiXHJcbik7XHJcblxyXG5jb25zdCBwcm9maWxlRWRpdEZvcm1Qb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiLFxyXG4gIGhhbmRsZVByb2ZpbGVFZGl0Rm9ybVN1Ym1pdFxyXG4pO1xyXG5cclxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjbW9kYWwtcHJldmlld1wiKTtcclxucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGFkZENhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI2FkZC1jYXJkLW1vZGFsXCIsXHJcbiAgaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXRcclxuKTtcclxuXHJcbi8vZnVuY3Rpb25zXHJcblxyXG4vLyBmdW5jdGlvbiBjcmVhdGVDYXJkKGNhcmREYXRhKSB7XHJcbi8vICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxyXG4vLyAgICAgY2FyZERhdGEsXHJcbi8vICAgICBcIiNjYXJkLXRlbXBsYXRlXCIsXHJcbi8vICAgICBoYW5kbGVJbWFnZUNsaWNrLFxyXG4vLyAgICAgaGFuZGxlRGVsZXRlQ2xpY2ssXHJcbi8vICAgICBoYW5kbGVMaWtlQ2xpY2tcclxuLy8gICApO1xyXG4vLyAgIHNlY3Rpb24uYWRkSXRlbShjYXJkLmdlbmVyYXRlQ2FyZCgpKTtcclxuLy8gfVxyXG5cclxuZnVuY3Rpb24gc2V0QnV0dG9uVGV4dChidXR0b24sIHRleHQpIHtcclxuICBidXR0b24udGV4dENvbnRlbnQgPSB0ZXh0O1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIHNldEJ1dHRvblRleHQodmFyaWFibGVzLmFkZE5ld0NhcmRCdXR0b24sIFwiU2F2aW5nLi4uXCIpO1xyXG4gIGFwaVxyXG4gICAgLmFkZE5ld0NhcmQoaW5wdXRWYWx1ZXMpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICAgIC8vIGNyZWF0ZSBhIG5ldyBjYXJkXHJcbiAgICAgIGNyZWF0ZUNhcmQocmVzKTtcclxuICAgICAgLy8gcmVuZGVyIGl0XHJcbiAgICAgIHZhcmlhYmxlcy5hZGROZXdNb2RhbENhcmQucmVzZXQoKTtcclxuICAgICAgLy8gdG9nZ2xlIGJ1dHRvbiBzdGF0ZVxyXG4gICAgICBjYXJkRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAvLyBjbG9zZSBtb2RhbFxyXG4gICAgICBhZGRDYXJkUG9wdXAuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgc2V0QnV0dG9uVGV4dCh2YXJpYWJsZXMuYWRkTmV3Q2FyZEJ1dHRvbiwgXCJTYXZlXCIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgZGVsZXRlTW9kYWwgPSBuZXcgUG9wdXBXaXRoRGVsZXRlKHZhcmlhYmxlcy5kZWxldGVNb2RhbCk7XHJcbiAgICBkZWxldGVNb2RhbC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xyXG4gIC8vIG9wZW4gdGhlIG1vZGFsXHJcbiAgZGVsZXRlTW9kYWwub3BlbigpO1xyXG4gIC8vIHNldCB0aGUgc3VibWl0IGFjdGlvblxyXG4gIGRlbGV0ZU1vZGFsLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZC5faWQpXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICBkZWxldGVNb2RhbC5jbG9zZSgpO1xyXG4gICAgICAgIGNhcmQuaGFuZGxlRGVsZXRlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuICB9KTtcclxufVxyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVBdmF0YXJGb3JtU3VibWl0KGlucHV0VmFsdWVzKSB7XHJcbiAgc2V0QnV0dG9uVGV4dCh2YXJpYWJsZXMuYXZhdGFyTW9kYWxCdXR0b24sIFwiU2F2aW5nLi4uXCIpO1xyXG4gIGFwaVxyXG4gICAgLnVwZGF0ZUF2YXRhcihpbnB1dFZhbHVlcy5saW5rKVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICB1c2VySW5mby5zZXRBdmF0YXIocmVzLmF2YXRhcik7XHJcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICAgIGF2YXRhck1vZGFsLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHNldEJ1dHRvblRleHQodmFyaWFibGVzLmF2YXRhck1vZGFsQnV0dG9uLCBcIlNhdmVcIik7XHJcbiAgICB9KTtcclxufVxyXG4vLyBmdW5jdGlvbiBoYW5kbGVBZGRDYXJkRm9ybVN1Ym1pdChmb3JtRGF0YSkge1xyXG4vLyAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKHsgbmFtZTogZm9ybURhdGEudGl0bGUsIGxpbms6IGZvcm1EYXRhLnVybCB9KTtcclxuLy8gICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmQpO1xyXG4vLyAgIGFkZENhcmRQb3B1cC5jbG9zZSgpO1xyXG4vLyB9XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGNhcmREYXRhKSB7XHJcbiAgcmV0dXJuIG5ldyBDYXJkKGNhcmREYXRhLCBcIiNjYXJkLXRlbXBsYXRlXCIsICgpID0+IHtcclxuICAgIHBvcHVwV2l0aEltYWdlLm9wZW4oY2FyZERhdGEubGluaywgY2FyZERhdGEubmFtZSk7XHJcbiAgfSkuZ2V0VmlldygpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlRWRpdEZvcm1TdWJtaXQoZm9ybURhdGEpIHtcclxuICB1c2VySW5mby5zZXRVc2VySW5mbyhmb3JtRGF0YS50aXRsZSwgZm9ybURhdGEuZGVzY3JpcHRpb24pO1xyXG4gIHByb2ZpbGVFZGl0Rm9ybVBvcHVwLmNsb3NlKCk7XHJcbn1cclxuXHJcbmNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcblxyXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5hcGkuZ2V0VXNlckluZm8oKS50aGVuKChVc2VySW5mbykgPT4ge1xyXG4gIHVzZXJJbmZvLmdldFVzZXJJbmZvKFVzZXJJbmZvLm5hbWUsIFVzZXJJbmZvLmFib3V0KTtcclxufSk7XHJcblxyXG5hcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigoY2FyZHMpID0+IHtcclxuICBjYXJkcy5mb3JFYWNoKChjYXJkKSA9PiB7XHJcbiAgICBjb25zdCBjYXJkRWxlbWV0ID0gZ2VuZXJhdGVDYXJkKGNhcmQpO1xyXG4gICAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkRWxlbWV0KTtcclxuICB9KTtcclxufSk7XHJcblxyXG5sZXQgc2VjdGlvbjtcclxuXHJcbmFwaVxyXG4gIC5nZXRJbml0aWFsQ2FyZHMoKVxyXG4gIC50aGVuKChyZXMpID0+IHtcclxuICAgIHNlY3Rpb24gPSBuZXcgU2VjdGlvbihcclxuICAgICAge1xyXG4gICAgICAgIGl0ZW1zOiByZXMsXHJcbiAgICAgICAgcmVuZGVyZXI6IChjYXJkRGF0YSkgPT4ge1xyXG4gICAgICAgICAgY3JlYXRlQ2FyZChjYXJkRGF0YSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgICAgXCJnYWxsZXJ5X19jYXJkc1wiXHJcbiAgICApO1xyXG4gICAgc2VjdGlvbi5yZW5kZXJJdGVtcygpO1xyXG4gICAgY29uc29sZS5sb2cocmVzKTtcclxuICB9KVxyXG4gIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuXHJcbmFwaVxyXG4gIC5nZXRVc2VySW5mbygpXHJcbiAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgY29uc29sZS5sb2cocmVzKTtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHJlcy5uYW1lLCByZXMuYWJvdXQpO1xyXG4gICAgdXNlckluZm8uc2V0QXZhdGFyKHJlcy5hdmF0YXIpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG5cclxuLy9FdmVudCBMaXN0ZW5lcnNcclxuXHJcbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY29uc3QgcHJvZmlsZVVzZXJJbmZvID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuICBwcm9maWxlVGl0bGVJbnB1dC52YWx1ZSA9IHByb2ZpbGVVc2VySW5mby50aXRsZTtcclxuICBwcm9maWxlRGVzY3JpcHRpb25JbnB1dC52YWx1ZSA9IHByb2ZpbGVVc2VySW5mby5kZXNjcmlwdGlvbjtcclxuICBwcm9maWxlRWRpdEZvcm1Qb3B1cC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuYWRkQ2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnByb2ZpbGVFZGl0Rm9ybVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3BsdXMtYnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY2FyZEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICBhZGRDYXJkUG9wdXAub3BlbigpO1xyXG59KTsiXSwibmFtZXMiOlsiZXhwb3J0cyIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsIkNhcmQiLCJfcmVmIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlSW1hZ2VDbGljayIsIm5hbWUiLCJsaW5rIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9uYW1lIiwiX2xpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJrZXkiLCJfdGhpcyIsIl9jYXJkRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiX2hhbmRsZUxpa2VJY29uIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJyZW1vdmUiLCJjYXJkRGF0YSIsImRvY3VtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsImNhcmRJbWFnZUVMIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJGb3JtVmFsaWRhdG9yIiwiZm9ybUVsIiwidmFsaWRhdGlvblNldHRpbmdzIiwiX2Zvcm1FbCIsIl9mb3JtU2VsZWN0b3IiLCJmb3JtU2VsZWN0b3IiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJpbnB1dEVsIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9zaG93SW5wdXRFcnJvciIsIl9oaWRlSW5wdXRFcnJvciIsImlucHV0IiwiZXJyb3JNZXNzYWdlRWwiLCJjb25jYXQiLCJpZCIsImFkZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2lucHV0RWxzIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zdWJtaXRCdXR0b25zIiwiZm9yRWFjaCIsImUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJpbnB1dExpc3QiLCJldmVyeSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlZCIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiZGF0YSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiY2xvc2UiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY0Nsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl90aGlzMiIsImV2dCIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoSW1hZ2UiLCJfUG9wdXAiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJjYWxsIiwiX3BvcHVwSW1hZ2UiLCJfcG9wdXBUaXRsZSIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX3BvcHVwRm9ybSIsInJlc2V0IiwiaW5wdXRzIiwiaW5wdXRWYWx1ZXMiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsIlVzZXJJbmZvIiwidGl0bGVTZWxlY3RvciIsImRlc2NyaXB0aW9uU2VsZWN0b3IiLCJfdGl0bGVFbCIsIl9kZXNjcmlwdGlvbkVsIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsIkFwaSIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImZldGNoIiwiaGVhZGVycyIsInRoZW4iLCJfY2hlY2tSZXNwb25zZSIsImFib3V0IiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXJkSWQiLCJhdmF0YXJVcmwiLCJ2YXJpYWJsZXMiLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVFZGl0TW9kYWwiLCJwcm9maWxlVGl0bGVJbnB1dCIsInByb2ZpbGVEZXNjcmlwdGlvbklucHV0IiwicHJvZmlsZUltYWdlIiwiYWRkTmV3TW9kYWxDYXJkIiwiY2FyZExpc3RFbCIsImFkZE5ld0NhcmRCdXR0b24iLCJkZWxldGVNb2RhbCIsImF2YXRhcklucHV0IiwiYXZhdGFyTW9kYWwiLCJhdmF0YXJNb2RhbEJ1dHRvbiIsImFwaSIsImJhc2VVcmwiLCJjYXJkRm9ybVZhbGlkYXRvciIsImVuYWJsZVZhbGlkYXRpb24iLCJlZGl0Rm9ybVZhbGlkYXRvciIsInVzZXJJbmZvIiwiY2FyZFNlY3Rpb24iLCJjcmVhdGVDYXJkIiwiYWRkSXRlbSIsInByb2ZpbGVFZGl0Rm9ybVBvcHVwIiwiZm9ybURhdGEiLCJzZXRVc2VySW5mbyIsInBvcHVwV2l0aEltYWdlIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJhZGRDYXJkUG9wdXAiLCJzZXRCdXR0b25UZXh0IiwiYWRkTmV3Q2FyZCIsImNvbnNvbGUiLCJsb2ciLCJjYXRjaCIsImVycm9yIiwiZmluYWxseSIsIlBvcHVwV2l0aERlbGV0ZSIsImJ1dHRvbiIsInRleHQiLCJvcGVuIiwiZ2V0VmlldyIsInJlbmRlckl0ZW1zIiwiZ2V0VXNlckluZm8iLCJnZXRJbml0aWFsQ2FyZHMiLCJjYXJkcyIsImNhcmQiLCJjYXJkRWxlbWV0IiwiZ2VuZXJhdGVDYXJkIiwic2V0QXZhdGFyIiwiYXZhdGFyIiwicHJvZmlsZVVzZXJJbmZvIl0sInNvdXJjZVJvb3QiOiIifQ==